var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.247,1,0.833]],["body/components/AppComponent.html",[0,0.442,1,1.558,2,1.743,3,0.383,4,0.332,5,1.416,6,1.531,7,1.531,8,1.531,9,0.332,10,3.63,11,1.531,12,2.165,13,1.853,14,2.207,15,1.743,16,5.776,17,1.743,18,5.331,19,0.471,20,0.03,21,1.416,22,0.608,23,1.656,24,2.119,25,0.383,26,0.102,27,1.31,28,1.884,29,1.743,30,1.531,31,2.129,32,1.531,33,0.536,34,1.531,35,1.12,36,1.97,37,1.379,38,1.531,39,1.12,40,1.531,41,1.12,42,1.31,43,1.531,44,1.034,45,1.531,46,1.034,47,1.12,48,1.531,49,1.12,50,1.531,51,1.034,52,0.825,53,1.531,54,1.034,55,1.531,56,1.034,57,0.604,58,1.531,59,1.034,60,1.212,61,1.531,62,1.531,63,0.02,64,0.024,65,0.02]],["title/modules/AppModule.html",[66,2.099,67,2.099]],["body/modules/AppModule.html",[1,1.643,3,0.293,4,0.254,9,0.254,13,0.929,19,0.583,20,0.031,22,0.466,25,0.293,26,0.078,27,1.005,35,1.578,37,1.409,39,1.578,41,1.578,42,1.358,44,1.457,46,1.401,47,0.859,49,1.517,51,1.401,52,0.695,54,1.401,56,1.401,57,0.509,59,1.401,63,0.015,64,0.021,65,0.015,66,2.164,67,4.35,68,1.952,69,2.164,70,4.263,71,4.263,72,3.763,73,2.429,74,2.784,75,2.784,76,2.784,77,2.784,78,3.447,79,3.763,80,2.784,81,2.164,82,3.322,83,4.491,84,3.763,85,5.088,86,3.763,87,2.164,88,3.763,89,3.322,90,3.322,91,2.164,92,2.784,93,4.491,94,3.322,95,4.491,96,3.322,97,4.491,98,3.322,99,4.491,100,3.322,101,4.491,102,3.322,103,3.202,104,1.952,105,2.784,106,2.164,107,2.784,108,3.322,109,2.784,110,2.429,111,2.784,112,2.784,113,2.784,114,4.491,115,4.491,116,4.491,117,4.491,118,4.491,119,4.491,120,4.491,121,4.491,122,2.164,123,4.491,124,4.491,125,4.491,126,1.086,127,4.491,128,5.088,129,1.952,130,2.164,131,2.784,132,2.164,133,2.784,134,2.164,135,2.784,136,2.164,137,2.784,138,2.164,139,2.784,140,2.164,141,2.784,142,4.491,143,2.429]],["title/classes/AppPage.html",[26,0.076,144,2.356]],["body/classes/AppPage.html",[3,0.431,4,0.374,9,0.374,14,2.021,19,0.431,20,0.031,25,0.431,26,0.115,29,1.595,63,0.022,64,0.026,65,0.022,87,3.178,144,4.187,145,2.609,146,4.089,147,0.431,148,1.159,149,6.272,150,6.272,151,0.803,152,4.881,153,0.973,154,4.881,155,4.089,156,1.602,157,4.881,158,4.881,159,4.881]],["title/modules/AppRoutingModule.html",[66,2.099,78,1.894]],["body/modules/AppRoutingModule.html",[0,0.476,3,0.389,4,0.337,9,0.337,19,0.571,20,0.031,22,0.617,25,0.389,26,0.104,46,1.285,47,1.138,51,1.285,52,0.833,54,1.285,56,1.285,57,0.61,59,1.285,63,0.02,64,0.025,65,0.02,68,2.586,73,3.218,78,3.163,84,3.688,88,4.511,91,2.867,92,3.688,106,2.867,107,3.688,130,2.867,131,3.688,132,2.867,133,3.688,134,2.867,135,3.688,160,4.402,161,4.402,162,3.788,163,5.384,164,1.978,165,4.048,166,4.402,167,1.138,168,4.544,169,4.402,170,5.077,171,4.402,172,4.402,173,4.402,174,4.402]],["title/guards/AuthGuard.html",[165,2.099,175,2.356]],["body/guards/AuthGuard.html",[3,0.385,4,0.334,9,0.334,14,1.804,19,0.547,20,0.031,22,0.611,23,2.308,24,2.131,25,0.385,26,0.103,33,0.538,63,0.02,64,0.024,65,0.02,110,3.911,147,0.385,148,1.083,151,0.751,153,0.74,156,1.497,164,2.404,165,3.484,170,5.193,176,4.357,177,3.651,178,0.909,179,4.357,180,4.672,181,4.357,182,0.994,183,0.606,184,0.994,185,2.86,186,4.357,187,6.039,188,4.233,189,6.039,190,4.357,191,3.771,192,2.617,193,3.911,194,1.497,195,2.56,196,2.131,197,1.424,198,1.177,199,3.185,200,2.131,201,3.651,202,2.838,203,2.329]],["title/injectables/AuthenticationService.html",[23,1.232,194,0.902]],["body/injectables/AuthenticationService.html",[3,0.325,4,0.281,9,0.281,14,1.522,19,0.501,20,0.031,22,0.516,23,2.308,25,0.424,26,0.113,33,0.37,47,1.242,57,0.731,63,0.017,64,0.022,65,0.017,81,3.128,147,0.325,148,0.972,151,0.751,153,0.909,156,1.344,164,1.652,167,0.95,178,0.624,180,3.911,182,0.683,183,0.606,184,0.683,192,2.617,194,1.344,196,1.798,198,1.057,200,2.775,201,3.08,204,1.798,205,3.08,206,1.057,207,3.128,208,2.567,209,0.95,210,0.743,211,0.976,212,4.483,213,2.045,214,5.674,215,4.804,216,1.373,217,3.666,218,3.676,219,5.674,220,3.511,221,3.288,222,2.567,223,4.804,224,5.674,225,3.676,226,2.158,227,1.405,228,1.299,229,3.676,230,4.025,231,4.025,232,2.16,233,2.404,234,2.16,235,1.177,236,1.965,237,1.453,238,2.394,239,4.804,240,3.676,241,5.351,242,4.754,243,1.836,244,3.676,245,3.676,246,3.676,247,2.394,248,4.804,249,3.676,250,2.394,251,3.676]],["title/components/DialogAddMemberComponent.html",[0,0.247,35,0.833]],["body/components/DialogAddMemberComponent.html",[0,0.415,1,0.749,2,1.336,3,0.256,4,0.222,5,0.947,6,1.024,7,1.024,8,1.024,9,0.222,11,1.024,12,2.046,13,1.751,15,1.336,17,1.336,19,0.497,20,0.031,21,1.68,22,0.406,25,0.361,26,0.096,27,0.876,28,1.444,29,1.336,30,1.024,31,1.816,32,1.024,33,0.476,34,1.024,35,1.573,36,2.094,37,1.694,38,1.024,39,0.749,40,1.024,41,0.749,42,0.876,43,1.024,44,0.692,45,1.024,46,0.692,47,0.749,48,1.024,49,0.749,50,1.024,51,0.692,52,0.981,53,1.024,54,0.692,55,1.024,56,0.692,57,0.697,58,1.024,59,0.692,60,1.324,61,1.024,62,1.024,63,0.013,64,0.019,65,0.013,126,0.947,138,3.663,147,0.256,148,0.827,151,0.76,153,0.492,178,0.694,182,0.538,183,0.637,184,0.538,197,1.547,198,1.339,206,0.899,208,3.155,209,0.749,210,0.632,211,0.732,213,1.809,222,2.53,235,1.042,237,1.432,243,1.562,252,3.006,253,2.427,254,3.663,255,2.4,256,1.96,257,1.886,258,4.733,259,4.086,260,3.966,261,2.935,262,2.697,263,1.816,264,2.897,265,2.256,266,2.485,267,4.086,268,1.444,269,1.562,270,3.758,271,2.748,272,3.758,273,3.758,274,4.733,275,3.082,276,3.966,277,2.781,278,2.897,279,2.897,280,2.514,281,3.423,282,3.02,283,2.118,284,3.423,285,2.897,286,2.427,287,2.427,288,1.302,289,1.548,290,1.886,291,1.702,292,1.691,293,4.086,294,2.897,295,2.427,296,2.897,297,2.897,298,2.897,299,2.897,300,2.987,301,4.086,302,2.987,303,2.987,304,2.661,305,2.4,306,1.199,307,1.886,308,1.548,309,1.107,310,1.199,311,1.302,312,1.886]],["title/components/DialogAddTaskComponent.html",[0,0.247,39,0.833]],["body/components/DialogAddTaskComponent.html",[0,0.334,1,0.454,2,0.915,3,0.155,4,0.134,5,0.573,6,0.62,7,0.62,8,0.62,9,0.134,11,0.62,12,1.846,13,1.58,15,0.915,17,0.915,19,0.491,20,0.031,21,1.304,22,0.246,25,0.247,26,0.066,27,0.531,28,0.989,29,0.915,30,0.62,31,1.409,32,0.62,33,0.509,34,0.62,35,0.454,36,1.946,37,1.69,38,0.62,39,1.571,40,0.62,41,0.454,42,0.531,43,0.62,44,0.419,45,0.62,46,0.419,47,0.454,48,0.62,49,0.454,50,0.62,51,0.419,52,0.874,53,0.62,54,0.419,55,0.62,56,0.419,57,0.317,58,0.62,59,0.419,60,0.491,61,0.62,62,0.62,63,0.008,64,0.013,65,0.008,126,0.573,129,1.031,140,3.906,147,0.155,148,0.567,151,0.835,153,0.74,156,0.491,167,1.031,178,0.476,182,0.741,183,0.692,184,0.741,191,2.597,195,1.031,197,1.142,198,1.022,200,0.858,203,2.483,206,0.769,208,2.706,209,0.454,210,0.433,211,0.997,213,2.089,216,1.178,222,2.483,227,1.776,228,1.965,235,1.26,237,1.405,243,1.336,252,3.206,254,2.597,256,1.447,257,1.143,261,2.272,262,1.258,263,1.409,266,0.726,268,0.989,269,1.07,270,2.916,271,2.483,272,2.916,273,2.916,275,1.823,280,2.799,283,2.554,284,2.346,286,1.47,287,1.47,292,1.159,300,2.047,302,2.047,304,1.823,305,1.645,306,0.726,307,1.143,308,0.938,309,0.671,310,0.726,311,0.788,312,1.143,313,1.47,314,2.476,315,2.346,316,2.343,317,1.823,318,2.8,319,2.047,320,2.8,321,2.8,322,2.597,323,3.438,324,1.278,325,2.483,326,3.494,327,2.8,328,4.085,329,3.494,330,2.927,331,2.927,332,2.927,333,2.927,334,3.892,335,3.494,336,3.494,337,2.927,338,2.927,339,2.927,340,2.346,341,2.346,342,2.346,343,1.47,344,2.975,345,3.066,346,3.494,347,2.8,348,2.396,349,2.346,350,1.754,351,2.8,352,3.342,353,2.8,354,3.988,355,1.645,356,2.8,357,2.8,358,3.186,359,2.916,360,2.8,361,2.8,362,2.047,363,2.8,364,2.8,365,2.8,366,2.8,367,2.346,368,2.8,369,3.652,370,1.754,371,2.346,372,3.988,373,3.988,374,1.823,375,1.754,376,2.8,377,1.754,378,2.047,379,2.8,380,1.754,381,3.988,382,2.047,383,1.823,384,1.823,385,1.754,386,2.8,387,1.754,388,2.8,389,2.8,390,1.754,391,2.8,392,2.927,393,2.346,394,1.754,395,1.754,396,1.754,397,2.346,398,2.554,399,1.754,400,2.8,401,1.754,402,1.754,403,3.988,404,3.988,405,3.988,406,1.754,407,1.057,408,2.927,409,2.927,410,1.754,411,2.8,412,2.8,413,1.47,414,1.47,415,1.47,416,1.47,417,1.47,418,1.031,419,1.47,420,1.47,421,1.283,422,1.283,423,1.47,424,1.47,425,1.754,426,1.47,427,1.47,428,1.47,429,1.47,430,1.47,431,3.342,432,1.47,433,1.47,434,1.47,435,1.47,436,1.47,437,1.754,438,1.754,439,2.8,440,1.47,441,1.47,442,1.754,443,1.47,444,1.47,445,1.47,446,1.47,447,1.754,448,1.754,449,1.754,450,1.47,451,1.47,452,1.283,453,1.754,454,1.754,455,1.754,456,1.754,457,1.754,458,1.754,459,3.342,460,2.346,461,2.346,462,2.346,463,2.8]],["title/components/DialogCreateProjectComponent.html",[0,0.247,41,0.833]],["body/components/DialogCreateProjectComponent.html",[0,0.447,1,0.926,2,1.543,3,0.316,4,0.274,5,1.17,6,1.265,7,1.265,8,1.265,9,0.274,11,1.265,12,2.113,13,1.808,15,1.543,17,1.543,19,0.417,20,0.031,21,1.836,22,0.502,25,0.417,26,0.111,27,1.083,28,1.668,29,1.543,30,1.265,31,1.984,32,1.265,33,0.565,34,1.265,35,0.926,36,2.14,37,1.221,38,1.265,39,0.926,40,1.265,41,1.604,42,1.965,43,1.265,44,0.855,45,1.265,46,0.855,47,0.926,48,1.265,49,0.926,50,1.265,51,0.855,52,0.98,53,1.265,54,0.855,55,1.265,56,0.855,57,0.535,58,1.265,59,0.855,60,1.001,61,1.265,62,1.265,63,0.016,64,0.022,65,0.016,126,1.17,136,3.44,147,0.316,148,0.956,151,0.662,153,0.608,183,0.535,197,1.727,206,0.788,209,0.926,210,0.73,211,0.817,216,1.162,226,1.608,235,1.039,236,1.913,237,1.083,252,2.823,256,2.187,257,2.331,263,1.984,268,1.265,269,1.368,292,1.954,300,3.451,302,3.451,304,3.074,305,2.773,306,1.482,307,2.331,308,1.913,309,1.368,310,1.482,311,1.608,312,2.331,324,1.341,464,2.999,465,5.282,466,4.721,467,5.282,468,3.579,469,3.579,470,3.861,471,2.309,472,1.913]],["title/components/DialogRegistrationComponent.html",[0,0.247,44,0.769]],["body/components/DialogRegistrationComponent.html",[0,0.391,1,0.644,2,1.197,3,0.22,4,0.191,5,0.814,6,0.88,7,0.88,8,0.88,9,0.191,11,0.88,12,1.992,13,1.705,15,1.197,17,1.197,19,0.423,20,0.031,21,1.567,22,0.349,25,0.384,26,0.086,27,0.753,28,1.294,29,1.197,30,0.88,31,1.693,32,0.88,33,0.599,34,0.88,35,0.644,36,2.061,37,1.239,38,0.88,39,0.644,40,0.88,41,0.644,42,0.753,43,0.88,44,1.404,45,0.88,46,0.594,47,1.321,48,0.88,49,0.644,50,0.88,51,0.594,52,0.567,53,0.88,54,0.594,55,0.88,56,0.594,57,0.69,58,0.88,59,0.594,60,0.696,61,0.88,62,0.88,63,0.011,64,0.017,65,0.011,104,3.329,122,3.121,126,0.814,147,0.22,148,0.741,151,0.775,153,0.867,156,1.025,167,0.644,178,0.622,182,0.462,183,0.655,184,0.462,197,1.42,198,0.956,206,0.548,207,3.121,209,0.644,210,0.567,211,0.958,213,1.661,216,1.353,217,3.138,221,2.952,226,1.118,232,1.462,235,1.124,238,1.621,243,0.951,247,1.621,250,3.121,252,3.028,256,1.799,257,1.621,261,2.344,263,1.693,265,2.111,271,1.958,275,2.385,292,1.516,305,2.152,306,1.516,307,1.621,308,1.958,309,0.951,310,1.031,311,1.118,312,1.621,316,3.001,319,2.677,322,2.385,324,1.318,355,2.152,359,1.82,362,2.677,382,3.503,383,3.83,384,3.479,470,3.503,471,1.791,473,1.82,474,3.503,475,3.641,476,3.069,477,3.641,478,3.641,479,4.015,480,2.489,481,3.177,482,3.663,483,2.489,484,2.489,485,3.069,486,2.677,487,2.677,488,3.069,489,1.958,490,3.069,491,3.069,492,3.069,493,3.503,494,2.816,495,3.503,496,2.152,497,2.385,498,3.069,499,3.069,500,2.677,501,4.015,502,2.489,503,2.489,504,4.015,505,4.015,506,3.069,507,3.069,508,2.489,509,2.086,510,1.462,511,1.621,512,2.086,513,1.462,514,2.677,515,3.641,516,3.069,517,2.086,518,2.086,519,2.086,520,2.086,521,2.086,522,3.069,523,2.086,524,2.086,525,3.177,526,3.503,527,3.503,528,2.086,529,2.086,530,2.086,531,2.086,532,2.086,533,1.82,534,2.086,535,2.086,536,2.086,537,3.905,538,2.086,539,1.82,540,1.621,541,2.561,542,1.462,543,1.462,544,1.958,545,2.086,546,1.33,547,1.33,548,1.33,549,1.82,550,1.82,551,1.33,552,1.33,553,1.33,554,1.82,555,2.086,556,2.489,557,1.217,558,1.791,559,1.462,560,1.621]],["title/injectables/HttpService.html",[194,0.902,233,1.448]],["body/injectables/HttpService.html",[3,0.223,4,0.193,5,1.679,9,0.193,14,1.045,19,0.327,20,0.031,22,0.354,25,0.327,26,0.087,33,0.54,63,0.012,64,0.017,65,0.012,143,1.846,147,0.223,148,0.749,151,0.798,153,1.082,156,1.502,167,0.653,178,0.429,182,1.111,183,0.729,184,0.997,192,3.117,194,1.035,196,1.235,198,1.13,204,1.235,206,1.181,208,1.978,209,0.653,210,0.573,211,0.96,216,1.448,222,3.154,227,0.965,228,0.892,233,2.608,235,1.181,237,1.721,254,2.41,270,2.705,271,3.523,324,0.603,352,3.671,472,1.349,497,3.842,500,4.659,561,2.115,562,3.101,563,3.701,564,3.701,565,5.137,566,2.835,567,4.825,568,4.825,569,4.825,570,3.701,571,2.525,572,4.498,573,3.701,574,3.701,575,2.525,576,6.374,577,6.494,578,2.789,579,5.9,580,5.9,581,3.671,582,3.701,583,2.525,584,3.701,585,6.398,586,2.525,587,5.369,588,5.369,589,3.701,590,2.525,591,3.701,592,2.525,593,3.701,594,3.101,595,2.525,596,2.525,597,2.525,598,3.701,599,1.483,600,2.525,601,3.701,602,2.525,603,2.525,604,2.525,605,2.525,606,5.137,607,5.137,608,2.525,609,2.525,610,2.525,611,2.525]],["title/components/LoginFormComponent.html",[0,0.247,46,0.769]],["body/components/LoginFormComponent.html",[0,0.394,1,0.656,2,1.214,3,0.224,4,0.194,5,0.829,6,0.897,7,0.897,8,0.897,9,0.194,11,0.897,12,1.999,13,1.711,15,1.214,17,1.214,19,0.475,20,0.031,21,1.581,22,0.356,23,1.849,24,1.241,25,0.328,26,0.087,27,0.767,28,1.313,29,1.214,30,0.897,31,1.709,32,0.897,33,0.442,34,0.897,35,0.656,36,1.98,37,0.961,38,0.897,39,0.656,40,0.897,41,0.656,42,0.767,43,0.897,44,0.887,45,0.897,46,1.326,47,1.617,48,0.897,49,0.656,50,0.897,51,0.606,52,0.748,53,0.897,54,0.606,55,0.897,56,0.606,57,0.421,58,0.897,59,0.606,60,0.71,61,0.897,62,0.897,63,0.012,64,0.017,65,0.012,91,3.618,103,1.491,104,1.491,105,2.126,122,3.15,126,0.829,129,1.491,147,0.224,148,0.752,151,0.754,153,0.746,164,1.14,167,1.136,168,2.716,178,0.631,180,4.061,182,0.471,183,0.498,184,0.471,185,2.751,197,1.436,198,1.184,206,0.558,207,2.419,208,1.985,209,0.656,210,0.575,211,0.832,213,1.68,217,3.264,221,2.875,226,1.974,235,0.817,238,1.652,243,1.42,247,1.652,250,2.419,261,1.817,263,1.709,271,2.585,272,2.716,308,1.985,309,1.968,316,3.024,324,1.049,358,2.716,374,3.15,383,3.502,384,2.419,398,3.212,471,1.241,481,3.212,487,2.716,489,1.985,493,2.716,494,3.16,495,2.716,496,2.182,497,2.419,525,1.855,526,1.855,527,1.855,537,2.716,539,1.855,540,1.652,541,3.045,544,2.585,545,2.126,546,2.585,547,1.985,548,2.585,549,3.212,550,3.212,551,2.349,552,1.356,553,2.349,554,2.716,555,2.126,557,2.149,558,2.717,560,1.652,612,4.655,613,2.126,614,3.715,615,3.715,616,3.715,617,3.536,618,3.715,619,4.394,620,3.715,621,4.394,622,4.837,623,4.837,624,2.538,625,3.352,626,3.715,627,2.538,628,2.538,629,3.112,630,3.715,631,3.715,632,3.715,633,3.715,634,3.715,635,3.112,636,3.112,637,3.715,638,3.112,639,3.112,640,2.538,641,3.715,642,2.538,643,4.837,644,2.538,645,2.538,646,3.715,647,2.126,648,2.538,649,3.715,650,2.538,651,2.538,652,2.538,653,2.538,654,2.538,655,5.148,656,2.538,657,1.652,658,3.715,659,3.715,660,3.715,661,3.715,662,3.715,663,2.538,664,2.538,665,2.585,666,1.14,667,2.182,668,1.491,669,2.538,670,2.182,671,1.491,672,1.491,673,1.491,674,1.491,675,2.126,676,1.491,677,1.491,678,1.356,679,2.582,680,1.491,681,2.538,682,2.538,683,3.112,684,2.126,685,2.126,686,2.182,687,3.715,688,2.126,689,1.491,690,1.491]],["title/components/NavbarComponent.html",[0,0.247,49,0.833]],["body/components/NavbarComponent.html",[0,0.433,1,0.845,2,1.452,3,0.289,4,0.25,5,1.068,6,1.155,7,1.155,8,1.155,9,0.25,11,1.155,12,2.085,13,1.804,15,1.452,17,1.452,19,0.446,20,0.031,21,1.77,22,0.458,23,1.929,24,1.598,25,0.392,26,0.105,27,0.988,28,1.569,29,1.452,30,1.155,31,1.913,32,1.155,33,0.447,34,1.155,35,0.845,36,1.77,37,1.149,38,1.155,39,0.845,40,1.155,41,0.845,42,0.988,43,1.155,44,0.78,45,1.155,46,0.78,47,0.845,48,1.155,49,1.611,50,1.155,51,0.78,52,0.837,53,1.155,54,0.78,55,1.155,56,0.78,57,0.613,58,1.155,59,0.78,60,0.914,61,1.155,62,1.155,63,0.015,64,0.02,65,0.015,147,0.392,148,0.899,151,0.708,153,0.555,164,1.468,168,3.247,178,0.555,183,0.613,185,2.374,197,1.649,198,0.719,200,2.172,206,0.719,209,0.845,210,0.687,211,0.924,226,1.468,230,3.721,235,1.191,236,1.747,237,1.343,263,1.913,268,1.155,269,1.249,306,1.353,309,1.698,310,1.839,367,4.536,407,1.766,553,1.747,557,1.598,558,1.598,560,2.128,578,1.996,636,4.892,665,2.697,666,2.267,675,2.738,678,1.747,691,2.738,692,4.442,693,4.442,694,4.442,695,5.046,696,4.442,697,5.661,698,5.661,699,3.268,700,3.721,701,4.442,702,3.247,703,4.442,704,4.442,705,3.268,706,2.647,707,3.268,708,3.688,709,3.268,710,2.389,711,2.893,712,3.268,713,3.268,714,4.442,715,4.442,716,3.247,717,4.442,718,4.442,719,4.442,720,3.721,721,4.442,722,3.268,723,1.92,724,3.268,725,2.61,726,1.92,727,2.61,728,3.268,729,3.268,730,3.268,731,2.128,732,2.738]],["title/classes/Project.html",[26,0.076,52,0.499]],["body/classes/Project.html",[3,0.311,4,0.27,9,0.27,19,0.311,20,0.031,25,0.412,26,0.11,33,0.64,52,1.037,57,0.689,63,0.016,64,0.021,65,0.016,145,1.882,147,0.311,151,0.867,178,0.598,182,0.654,183,0.737,184,0.654,206,1.027,209,0.91,210,0.722,211,1.025,216,1.34,235,1.36,237,1.412,268,1.65,269,1.785,277,3.411,314,2.839,317,3.412,407,1.976,513,2.069,706,2.977,733,2.95,734,2.743,735,5.806,736,6.182,737,3.413,738,4.669,739,4.078,740,4.244,741,3.912,742,3.521,743,3.521,744,3.521,745,3.521,746,5.579,747,3.521,748,3.521,749,4.669,750,3.521]],["title/components/ProjectMembersComponent.html",[0,0.247,51,0.769]],["body/components/ProjectMembersComponent.html",[0,0.355,1,0.516,2,1.012,3,0.176,4,0.153,5,0.652,6,0.705,7,0.705,8,0.705,9,0.153,11,0.705,12,1.903,13,1.629,15,1.012,17,1.012,19,0.48,20,0.031,21,1.399,22,0.28,25,0.274,26,0.073,27,0.603,28,1.094,29,1.012,30,0.705,31,1.513,32,0.705,33,0.43,34,0.705,35,0.801,36,1.849,37,1.269,38,0.705,39,0.516,40,0.705,41,0.516,42,0.603,43,0.705,44,0.476,45,0.705,46,0.476,47,0.516,48,0.705,49,0.516,50,0.705,51,1.39,52,1.001,53,0.705,54,0.476,55,0.705,56,0.476,57,0.705,58,0.705,59,0.476,60,1.432,61,0.705,62,0.705,63,0.009,64,0.014,65,0.009,103,1.172,126,0.652,134,3.741,138,1.299,139,1.671,147,0.176,148,0.627,151,0.793,153,0.727,156,0.558,164,0.896,167,1.107,178,0.526,182,0.575,183,0.659,184,0.575,197,1.241,198,0.836,206,0.682,209,0.516,210,0.479,211,0.982,213,2.077,226,1.392,227,0.762,228,0.705,235,1.165,237,0.603,243,2.023,255,1.82,256,1.572,260,3.181,261,0.975,262,1.392,263,1.513,265,1.957,266,2.119,276,2.595,277,3.375,280,2.658,281,2.595,282,1.82,288,0.896,289,1.066,290,1.299,291,1.172,292,1.282,295,3.181,303,2.264,306,2.41,309,2.251,310,1.282,311,1.706,324,0.739,358,1.458,378,2.264,407,1.148,471,0.975,494,1.82,540,1.299,541,2.736,542,1.172,543,1.172,544,2.477,546,1.066,547,1.066,548,1.655,551,2.288,552,1.066,553,2.029,557,1.515,558,2.094,559,1.172,566,1.82,578,1.392,599,2.231,617,2.264,625,3.019,639,2.595,647,1.671,657,1.299,665,2.288,666,2.442,667,1.172,668,1.172,670,2.231,671,2.515,672,2.723,673,1.82,674,1.82,676,2.515,677,1.82,678,2.029,679,2.231,680,1.172,686,1.172,689,1.82,690,1.82,708,3.129,710,2.776,711,2.473,716,2.264,723,1.172,725,2.515,726,3.008,727,2.231,739,2.264,741,2.595,751,4.199,752,1.671,753,1.671,754,3.797,755,3.097,756,4.906,757,3.797,758,3.797,759,4.281,760,4.281,761,3.097,762,1.671,763,3.097,764,1.994,765,1.994,766,3.797,767,3.097,768,1.994,769,3.097,770,1.994,771,3.097,772,3.097,773,3.097,774,1.994,775,1.994,776,1.994,777,3.097,778,1.994,779,1.994,780,3.097,781,1.458,782,2.473,783,3.587,784,3.181,785,3.797,786,1.994,787,1.458,788,1.994,789,1.994,790,1.994,791,3.797,792,1.994,793,1.994,794,1.994,795,1.994,796,1.994,797,1.994,798,1.994,799,1.994,800,3.586,801,3.097,802,3.097,803,3.097,804,2.595,805,3.097,806,3.097,807,1.299,808,1.299,809,2.473,810,1.299,811,1.299,812,3.617,813,1.299,814,1.299,815,1.299,816,3.019,817,2.473,818,1.299,819,2.017,820,1.299,821,1.299,822,1.299,823,2.017,824,2.017,825,1.299,826,1.299,827,1.299,828,1.299,829,1.299,830,1.299,831,1.299,832,1.299,833,2.017,834,1.299,835,1.671,836,1.994,837,1.671,838,1.671,839,3.587,840,1.994,841,3.797,842,3.097,843,1.994,844,1.994]],["title/injectables/ProjectService.html",[194,0.902,266,1.334]],["body/injectables/ProjectService.html",[3,0.284,4,0.246,9,0.246,14,1.331,19,0.475,20,0.031,22,0.451,25,0.388,26,0.103,33,0.598,52,0.97,57,0.609,60,1.229,63,0.015,64,0.02,65,0.015,147,0.284,148,0.889,151,0.861,153,1.028,156,1.694,167,1.294,182,1.105,183,0.686,184,1.105,192,3.161,194,1.229,196,1.573,198,1.183,204,1.573,206,0.708,208,2.348,209,0.832,210,0.68,211,1.023,216,1.183,221,1.719,227,1.229,228,1.136,233,2.529,234,1.889,235,0.967,236,1.719,237,0.973,255,2.94,266,2.406,268,1.136,269,1.229,273,3.211,277,1.889,288,1.445,289,1.719,315,3.681,324,0.768,407,1.946,472,1.719,578,2.248,581,3.414,782,4.046,845,2.694,846,4.393,847,3.681,848,4.393,849,4.393,850,5.004,851,4.393,852,4.393,853,4.393,854,5.377,855,4.393,856,4.393,857,4.393,858,4.393,859,3.216,860,4.393,861,3.216,862,4.393,863,3.216,864,4.393,865,3.216,866,3.216,867,4.393,868,3.216,869,4.393,870,3.216,871,4.393,872,5.377,873,3.216,874,3.216,875,3.258,876,4.393,877,3.258,878,2.094,879,2.094,880,2.351,881,3.216,882,3.216,883,3.216,884,3.216]],["title/components/ProjectTasksComponent.html",[0,0.247,54,0.769]],["body/components/ProjectTasksComponent.html",[0,0.345,1,0.306,2,0.662,3,0.105,4,0.091,5,0.387,6,0.419,7,0.936,8,1.243,9,0.091,11,0.419,12,1.65,13,1.465,15,0.662,17,0.662,19,0.476,20,0.031,21,1.024,22,0.166,23,1.345,24,0.579,25,0.179,26,0.048,27,0.612,28,0.715,29,1.024,30,0.419,31,1.107,32,0.419,33,0.354,34,0.419,35,0.306,36,1.526,37,0.991,38,0.419,39,0.81,40,0.419,41,0.306,42,0.358,43,0.419,44,0.283,45,0.419,46,0.283,47,0.306,48,0.419,49,0.306,50,0.419,51,0.283,52,0.942,53,0.419,54,1.394,55,0.419,56,0.283,57,0.464,58,0.419,59,0.283,60,0.331,61,0.419,62,0.419,63,0.005,64,0.009,65,0.005,103,0.696,109,0.993,110,0.866,111,0.993,112,0.993,113,0.993,126,0.387,132,3.632,140,0.772,141,0.993,143,0.866,147,0.105,148,0.41,151,0.774,153,0.927,156,1.072,164,0.532,167,0.991,178,0.344,182,0.492,183,0.545,184,0.492,185,1.674,188,2.572,193,3.292,197,0.866,198,1.324,199,1.479,200,1.721,202,2.291,203,1.88,206,0.583,209,0.306,210,0.485,211,0.938,213,2.033,216,0.689,220,1.479,226,1.408,228,0.419,231,1.696,232,0.696,235,1.215,236,0.633,237,1.305,243,1.565,254,1.318,255,1.189,256,1.097,261,0.579,262,1.19,263,1.107,265,1.721,266,1.864,268,0.715,269,0.774,280,0.99,288,0.532,289,0.633,290,0.772,291,0.696,292,0.838,303,1.479,306,1.991,308,2.407,309,1.838,310,1.587,311,1.408,314,2.202,316,1.556,317,1.318,324,0.84,325,2.633,345,2.646,348,0.453,355,1.84,359,1.936,371,1.696,374,2.496,407,0.358,418,0.696,419,0.993,440,0.993,441,0.993,443,0.993,444,0.993,452,1.479,459,3.211,460,2.219,471,0.579,486,1.479,489,1.88,494,1.189,496,1.189,540,0.772,541,2.951,542,1.189,543,0.696,544,2.494,546,2.188,547,1.082,548,2.048,549,2.29,550,2.29,551,2.571,552,0.633,553,1.416,554,0.866,557,2.414,558,2.838,559,1.84,560,1.725,566,1.84,572,0.993,578,1.19,599,1.189,617,1.479,625,2.291,629,3.211,635,1.696,657,0.772,665,2.048,666,2.313,667,1.84,668,0.696,670,2.646,671,1.84,672,2.405,673,1.84,674,1.189,676,2.067,677,2.646,678,1.416,679,1.84,680,0.696,683,2.625,684,2.219,686,0.696,688,1.696,689,1.556,690,1.556,700,2.625,706,1.721,708,2.572,710,0.866,711,0.772,723,2.067,725,2.535,726,2.067,727,1.556,731,2.496,732,0.993,739,1.479,751,4.077,753,0.993,762,0.993,781,1.936,782,0.772,783,2.625,784,0.993,787,0.866,800,1.479,807,0.772,808,0.772,809,1.318,810,0.772,811,0.772,812,2.666,813,1.318,814,0.772,815,0.772,816,2.933,817,1.725,818,0.772,819,1.318,820,0.772,821,0.772,822,2.496,823,0.772,824,0.772,825,1.318,826,2.04,827,0.772,828,1.725,829,0.772,830,1.318,831,1.318,832,0.772,833,1.318,834,0.772,835,0.993,838,0.993,885,0.993,886,2.024,887,2.024,888,2.024,889,3.133,890,2.024,891,2.024,892,2.024,893,4.094,894,2.649,895,2.649,896,2.024,897,2.572,898,3.773,899,3.518,900,2.649,901,2.948,902,2.625,903,2.625,904,2.024,905,3.133,906,2.625,907,2.625,908,3.133,909,2.024,910,3.133,911,2.024,912,3.133,913,3.133,914,2.024,915,2.625,916,1.185,917,2.024,918,1.185,919,2.024,920,3.615,921,3.133,922,2.024,923,1.185,924,2.993,925,2.649,926,2.024,927,1.696,928,2.219,929,1.185,930,3.133,931,3.133,932,2.024,933,1.185,934,2.024,935,2.024,936,1.479,937,1.185,938,2.024,939,1.696,940,1.185,941,1.185,942,2.024,943,1.185,944,2.024,945,2.024,946,2.024,947,2.649,948,1.185,949,1.185,950,1.185,951,1.185,952,2.024,953,1.185,954,3.518,955,2.024,956,1.185,957,2.024,958,2.024,959,1.185,960,1.185,961,2.024,962,0.866,963,0.993,964,1.185,965,1.185,966,1.185,967,1.185,968,1.185,969,1.185,970,3.518,971,2.024,972,2.024,973,2.649,974,1.185,975,2.024,976,1.185,977,1.185,978,2.024,979,3.518,980,1.185,981,3.133,982,3.133,983,2.024,984,2.649,985,1.185,986,1.696,987,1.185,988,1.696,989,1.185,990,1.185,991,2.024,992,1.185,993,3.518,994,1.185,995,2.649,996,1.185,997,1.185,998,1.185,999,2.024,1000,1.185,1001,2.024,1002,1.185,1003,2.024,1004,1.185,1005,1.185,1006,1.185,1007,1.185,1008,1.185,1009,1.185,1010,1.185,1011,1.185,1012,1.185,1013,1.185,1014,1.185,1015,1.185,1016,2.024,1017,1.185,1018,1.185,1019,1.185,1020,1.185,1021,1.185,1022,1.185,1023,1.185,1024,1.185,1025,1.185,1026,1.185,1027,1.185,1028,1.185,1029,2.649,1030,0.993,1031,1.185,1032,1.185,1033,1.185,1034,1.185,1035,3.133,1036,1.185,1037,1.185,1038,1.185,1039,1.185,1040,1.185,1041,1.185,1042,1.185,1043,1.185,1044,0.993,1045,1.185,1046,1.185,1047,1.185,1048,1.185,1049,1.185,1050,1.185,1051,2.024,1052,3.133,1053,3.133,1054,3.133,1055,3.133,1056,2.024,1057,2.649,1058,2.024,1059,2.024,1060,2.024,1061,2.024,1062,3.833,1063,2.024,1064,2.024,1065,2.024,1066,2.024,1067,2.024,1068,2.024,1069,2.024,1070,2.024,1071,2.024,1072,1.185,1073,1.185,1074,1.185,1075,1.185,1076,1.185,1077,2.024,1078,1.185,1079,1.185,1080,1.185,1081,1.185,1082,1.185,1083,2.024,1084,1.185,1085,2.649,1086,1.185,1087,2.024,1088,1.185,1089,3.133,1090,0.993,1091,2.024,1092,1.185,1093,1.185,1094,1.185,1095,1.185,1096,1.185,1097,1.185,1098,1.185,1099,1.185,1100,1.185,1101,1.185,1102,0.993,1103,0.993,1104,0.993,1105,1.185,1106,2.024]],["title/interfaces/RegistrationData.html",[510,1.894,511,2.099]],["body/interfaces/RegistrationData.html",[0,0.391,3,0.296,4,0.256,9,0.256,12,1.094,13,0.937,15,1.094,17,1.094,19,0.483,20,0.031,21,1.67,22,0.47,25,0.451,26,0.106,33,0.604,36,1.922,37,0.866,44,1.435,47,1.168,57,0.666,63,0.015,64,0.021,65,0.015,104,1.967,122,2.94,126,1.094,147,0.296,153,0.767,156,1.263,167,0.866,178,0.569,183,0.666,197,1.476,198,1.124,207,2.94,210,0.698,211,0.883,213,1.28,216,1.417,217,3.001,221,2.73,232,1.967,235,1.256,238,2.181,243,1.28,247,2.181,250,2.94,252,1.79,256,1.386,261,2.208,263,1.183,265,1.953,271,1.79,275,2.181,292,1.386,316,2.653,319,2.448,322,2.181,324,1.305,355,1.967,362,2.448,382,3.301,383,3.718,384,3.327,470,3.301,471,1.637,473,2.448,474,3.301,475,2.805,476,2.805,477,2.805,478,2.805,479,2.805,481,2.448,485,2.805,486,2.448,487,2.448,488,2.805,489,1.79,490,2.805,491,2.805,492,2.805,493,3.301,494,2.653,495,3.301,496,1.967,497,2.181,498,2.805,499,2.805,500,2.448,501,3.783,504,3.783,505,3.783,506,2.805,507,2.805,509,2.805,510,1.967,511,2.94,512,4.581,513,1.967,514,3.301,515,4.28,516,3.783,517,2.805,518,2.805,519,2.805,520,2.805,521,2.805,522,3.783,523,2.805,524,2.805,525,3.734,526,3.997,527,3.997,528,2.805,529,2.805,530,2.805,531,2.805,532,2.805,533,2.448,534,2.805,535,2.805,536,2.805,537,3.301,538,2.805,539,2.448,1107,3.348]],["title/classes/Skill.html",[26,0.076,348,1.232]],["body/classes/Skill.html",[3,0.347,4,0.301,9,0.301,19,0.443,20,0.031,25,0.443,26,0.118,33,0.651,57,0.696,63,0.018,64,0.023,65,0.018,145,2.098,147,0.347,151,0.843,178,0.667,182,0.729,183,0.723,184,0.729,206,1.103,209,1.015,210,0.775,211,1.008,216,1.375,232,2.306,235,1.322,237,1.187,262,2.252,268,1.771,269,1.916,280,2.845,314,2.451,325,2.408,348,2.551,407,1.67,421,2.869,513,2.306,706,2.7,734,2.944,737,3.664,1108,3.289,1109,5.521,1110,4.626,1111,5.012,1112,3.925,1113,3.925,1114,3.925,1115,5.012,1116,4.199,1117,3.925,1118,3.289]],["title/injectables/SkillService.html",[194,0.902,344,1.894]],["body/injectables/SkillService.html",[3,0.334,4,0.29,9,0.29,14,1.568,19,0.479,20,0.031,22,0.531,25,0.334,26,0.089,33,0.597,63,0.017,64,0.022,65,0.017,147,0.334,148,0.991,151,0.881,153,1.009,156,1.663,167,1.266,178,0.643,182,1.104,183,0.702,184,1.104,192,3.129,194,1.37,196,1.852,198,1.34,204,1.852,210,0.758,211,1.016,216,0.833,227,1.447,228,1.338,233,2.735,234,2.225,323,3.492,324,0.904,344,2.877,348,2.463,407,1.841,418,2.225,472,2.024,566,2.225,578,2.439,581,3.372,875,3.189,877,2.466,878,2.466,879,2.466,880,2.768,1119,3.173,1120,4.897,1121,4.897,1122,4.897,1123,5.739,1124,4.897,1125,2.768,1126,4.897,1127,4.897,1128,3.787,1129,4.897,1130,3.787,1131,5.739,1132,4.897,1133,3.787,1134,3.787,1135,4.897,1136,3.787,1137,3.787,1138,4.103,1139,3.787]],["title/classes/Task.html",[26,0.076,325,1.334]],["body/classes/Task.html",[3,0.24,4,0.208,9,0.208,19,0.404,20,0.031,25,0.345,26,0.092,33,0.57,37,1.01,52,0.94,57,0.599,63,0.012,64,0.018,65,0.012,145,1.453,147,0.24,151,0.875,178,0.462,183,0.741,188,3.868,193,4.026,200,2.443,202,3.253,203,2.67,206,0.598,209,0.703,210,0.604,211,1.034,216,1.212,235,1.382,236,1.453,255,2.935,262,1.755,268,0.961,269,1.039,277,2.935,280,2.839,282,2.294,314,1.91,317,2.543,322,2.543,323,2.294,325,2.79,348,1.493,407,1.788,422,1.987,489,2.087,496,2.294,666,1.755,706,2.587,731,2.976,734,2.294,740,4.386,782,2.976,924,3.652,927,4.433,928,5.228,936,4.026,986,3.272,988,3.272,1090,3.272,1110,3.829,1116,3.272,1118,2.278,1140,2.278,1141,5.291,1142,3.829,1143,4.57,1144,4.57,1145,4.57,1146,4.57,1147,4.57,1148,2.719,1149,2.719,1150,3.905,1151,2.719,1152,2.719,1153,4.995,1154,2.719,1155,2.719,1156,3.905,1157,3.905,1158,2.719,1159,2.719,1160,4.995,1161,3.272,1162,4.995,1163,2.719,1164,2.719,1165,2.719,1166,2.719,1167,2.719,1168,2.719,1169,2.719,1170,2.719,1171,2.719,1172,2.719,1173,2.719,1174,2.719]],["title/injectables/TaskService.html",[194,0.902,345,1.894]],["body/injectables/TaskService.html",[3,0.29,4,0.251,9,0.251,14,1.359,19,0.516,20,0.031,22,0.46,25,0.29,26,0.077,33,0.612,57,0.741,63,0.015,64,0.02,65,0.015,147,0.29,148,0.902,151,0.875,153,1.033,156,1.702,167,1.402,178,0.557,182,1.13,183,0.698,184,1.13,191,2.138,192,3.169,194,1.246,195,1.929,196,1.605,198,1.113,204,1.605,210,0.689,211,1.025,216,0.722,227,1.255,228,1.16,233,2.627,234,1.929,266,1.359,288,1.475,314,2.179,324,0.784,325,2.347,345,2.617,407,1.974,423,2.75,472,1.754,566,1.929,578,2.272,581,3.575,875,2.901,877,2.901,878,2.138,879,3.293,902,3.732,903,3.732,906,3.732,907,3.732,962,2.4,1125,2.4,1142,2.75,1161,2.75,1175,2.75,1176,4.455,1177,4.455,1178,5.423,1179,4.455,1180,4.455,1181,4.455,1182,3.283,1183,4.455,1184,3.283,1185,6.342,1186,4.455,1187,3.283,1188,4.455,1189,3.283,1190,4.455,1191,3.283,1192,4.455,1193,3.283,1194,3.283,1195,4.455,1196,3.283,1197,3.283,1198,4.237,1199,3.283,1200,3.283]],["title/classes/User.html",[26,0.076,57,0.365]],["body/classes/User.html",[3,0.286,4,0.248,9,0.248,19,0.444,20,0.031,25,0.39,26,0.104,33,0.631,52,0.922,57,0.758,60,1.668,63,0.015,64,0.02,65,0.015,145,1.734,147,0.286,151,0.863,178,0.551,182,0.602,183,0.736,184,0.602,206,0.972,209,0.839,210,0.684,211,1.024,216,1.447,217,3.719,221,3.383,235,1.354,237,1.52,262,1.985,268,1.561,269,1.689,280,2.967,282,2.596,314,2.161,323,3.317,325,2.234,348,2.158,407,1.52,421,2.371,422,2.371,474,3.23,513,1.906,514,2.371,638,4.521,706,2.761,734,2.596,737,3.23,1201,2.718,1202,4.211,1203,4.211,1204,4.419,1205,3.244,1206,3.244,1207,3.244,1208,3.244,1209,3.702,1210,3.702,1211,3.244,1212,4.419,1213,3.244,1214,3.244,1215,3.244,1216,2.718,1217,3.244,1218,3.244,1219,3.244]],["title/components/UserProfileComponent.html",[0,0.247,56,0.769]],["body/components/UserProfileComponent.html",[0,0.295,1,0.528,2,1.03,3,0.18,4,0.156,5,0.667,6,0.721,7,0.721,8,0.721,9,0.156,11,0.721,12,1.913,13,1.637,15,1.03,17,1.03,19,0.503,20,0.031,21,1.259,22,0.286,23,1.656,24,0.998,25,0.18,26,0.048,27,0.617,28,1.114,29,1.03,30,0.721,31,1.655,32,0.721,33,0.519,34,0.721,35,0.528,36,1.416,37,1.121,38,0.721,39,0.528,40,0.721,41,0.528,42,0.617,43,0.721,44,0.487,45,0.721,46,0.487,47,0.528,48,0.721,49,0.528,50,0.721,51,0.487,52,0.488,53,0.721,54,0.487,55,0.721,56,1.182,57,0.67,58,0.721,59,0.487,60,0.571,61,0.721,62,0.721,63,0.009,64,0.014,65,0.009,106,4.007,126,0.667,129,1.199,147,0.18,148,0.638,151,0.858,153,0.877,156,0.571,167,0.996,178,0.535,182,0.87,183,0.644,184,0.87,185,2.059,191,2.509,195,1.199,197,1.03,198,1.09,199,2.816,200,1.542,203,2.647,206,0.449,210,0.488,211,1.005,212,3.227,213,2.337,216,1.09,227,1.893,228,1.824,235,0.694,237,0.617,242,4.683,243,2.092,256,1.595,263,1.531,265,1.973,282,1.852,283,2.304,288,0.917,291,1.199,292,1.305,304,2.053,305,1.852,306,2.208,309,2.038,310,1.305,311,1.416,324,0.92,328,3.63,330,3.227,331,3.227,332,3.227,333,3.227,334,4.149,337,3.227,338,3.227,339,3.227,340,2.641,343,1.709,344,2.909,348,2.236,349,2.641,369,1.709,374,2.053,378,2.304,392,3.227,393,2.641,397,2.641,398,2.816,407,0.953,408,3.227,409,3.227,413,1.709,414,1.709,415,1.709,416,1.709,417,1.709,418,1.199,420,1.709,424,1.709,426,1.709,427,1.709,428,1.709,429,1.709,430,1.709,431,3.63,432,1.709,433,1.709,434,1.709,435,1.709,436,1.709,445,3.227,446,3.227,450,1.709,451,1.709,461,2.641,462,2.641,533,1.491,541,2.504,542,1.199,543,1.199,544,2.059,546,1.09,547,1.09,548,1.685,551,1.685,553,1.09,557,1.542,558,1.884,559,1.199,599,1.199,665,2.059,666,0.917,667,1.199,668,1.199,670,1.852,671,1.852,672,2.263,673,1.852,674,1.852,676,1.852,677,1.852,678,2.059,679,2.263,680,1.199,686,1.199,689,1.199,690,1.199,720,3.63,723,1.199,725,1.852,726,2.263,727,2.263,807,2.053,808,2.053,809,1.329,810,1.329,811,1.329,812,3.05,813,1.329,814,1.329,815,1.329,816,2.053,817,2.509,818,1.329,819,1.329,820,1.329,821,1.329,822,1.329,823,1.329,824,1.329,825,1.329,826,1.329,827,1.329,828,1.329,829,1.329,830,1.329,831,1.329,832,1.329,833,2.053,834,1.329,837,1.709,839,1.709,920,2.641,1102,1.709,1103,1.709,1104,1.709,1220,4.498,1221,1.709,1222,3.152,1223,3.152,1224,3.152,1225,3.152,1226,4.333,1227,3.152,1228,3.152,1229,3.152,1230,3.152,1231,1.709,1232,3.852,1233,3.152,1234,3.852,1235,3.152,1236,4.333,1237,4.333,1238,3.152,1239,2.04,1240,3.152,1241,3.852,1242,2.04,1243,2.04,1244,3.152,1245,2.04,1246,3.152,1247,2.04,1248,2.04,1249,3.152,1250,3.152,1251,3.152,1252,3.152,1253,3.152,1254,3.152,1255,4.333,1256,2.04,1257,2.04,1258,2.04,1259,2.04,1260,2.04,1261,2.04,1262,2.04,1263,2.04,1264,2.04,1265,2.04,1266,2.04,1267,2.04,1268,2.04,1269,2.04,1270,2.04,1271,2.04,1272,3.152,1273,3.152,1274,2.04,1275,2.04,1276,2.04,1277,2.04,1278,2.04,1279,3.152,1280,3.152,1281,2.04]],["title/components/UserProjectsComponent.html",[0,0.247,59,0.769]],["body/components/UserProjectsComponent.html",[0,0.348,1,0.696,2,1.267,3,0.238,4,0.206,5,0.88,6,0.951,7,0.951,8,0.951,9,0.206,11,0.951,12,2.02,13,1.729,15,1.267,17,1.267,19,0.511,20,0.031,21,1.486,22,0.378,23,1.901,24,1.317,25,0.238,26,0.063,27,0.814,28,1.37,29,1.267,30,0.951,31,1.757,32,0.951,33,0.457,34,0.951,35,0.696,36,1.849,37,1.286,38,0.951,39,0.696,40,0.951,41,1.003,42,1.375,43,0.951,44,0.643,45,0.951,46,0.643,47,0.696,48,0.951,49,0.696,50,0.951,51,0.643,52,0.938,53,0.951,54,0.643,55,0.951,56,0.643,57,0.668,58,0.951,59,1.187,60,1.536,61,0.951,62,0.951,63,0.012,64,0.018,65,0.012,103,1.582,126,0.88,130,3.771,136,1.753,137,2.255,147,0.238,148,0.785,151,0.794,153,0.772,167,1.003,178,0.659,182,0.5,183,0.563,184,0.5,185,2.429,197,1.267,198,1.318,210,0.6,211,0.912,213,2.098,226,1.742,243,1.737,256,1.882,263,1.757,265,2.162,266,2.273,288,1.21,289,1.439,290,1.753,291,1.582,292,1.605,306,2.442,309,2.254,310,1.114,311,1.742,324,0.643,452,1.968,471,1.317,541,2.934,542,1.582,543,1.582,544,2.658,546,1.439,547,1.439,548,2.073,551,2.429,552,1.439,557,1.896,558,2.223,559,1.582,599,1.582,625,3.238,657,1.753,665,2.429,666,1.742,667,1.582,668,1.582,670,2.278,671,2.278,672,2.922,673,2.278,674,2.278,676,2.278,677,1.582,678,2.429,679,2.67,680,1.582,685,2.255,686,1.582,689,2.278,690,2.278,716,3.635,723,1.582,725,2.278,726,3.096,727,2.67,787,1.968,800,3.635,804,3.249,807,1.753,808,1.753,809,2.525,810,1.753,811,1.753,812,3.684,813,1.753,814,2.525,815,1.753,816,2.96,817,2.96,818,1.753,819,1.753,820,1.753,821,1.753,822,1.753,823,1.753,824,2.525,825,1.753,826,1.753,827,1.753,828,1.753,829,1.753,830,1.753,831,1.753,832,1.753,833,2.525,834,1.753,1030,2.255,1044,2.255,1216,3.249,1220,4.233,1231,2.255,1282,2.255,1283,4.545,1284,3.878,1285,4.545,1286,4.545,1287,4.973,1288,4.973,1289,2.692,1290,3.878,1291,2.692,1292,2.692,1293,2.692,1294,2.692,1295,2.692,1296,3.878,1297,2.692,1298,2.692,1299,2.692,1300,2.692,1301,2.692,1302,2.692,1303,2.692,1304,4.545,1305,3.878,1306,2.692,1307,2.692,1308,3.878,1309,2.692,1310,2.692]],["title/injectables/UserService.html",[194,0.902,265,1.232]],["body/injectables/UserService.html",[3,0.266,4,0.231,9,0.231,14,1.249,19,0.503,20,0.031,22,0.423,25,0.266,26,0.071,33,0.623,52,0.467,57,0.686,60,0.844,63,0.014,64,0.019,65,0.014,147,0.266,148,0.851,151,0.884,153,1.053,156,1.734,167,1.353,178,0.512,182,1.151,183,0.708,184,1.151,192,3.2,194,1.176,196,1.475,198,1.064,204,1.475,210,0.65,211,1.031,216,0.664,227,1.153,228,1.066,233,2.56,234,1.772,262,1.888,265,1.606,288,1.355,289,1.612,323,1.772,324,0.72,325,1.249,341,3.521,342,3.521,348,2.408,407,1.988,418,1.772,472,1.612,578,2.173,581,3.503,706,2.559,875,3.71,877,1.964,878,1.964,879,3.15,880,2.205,962,2.205,1125,2.205,1138,3.521,1198,3.521,1202,2.527,1203,2.527,1311,2.527,1312,4.203,1313,4.203,1314,4.203,1315,4.203,1316,4.203,1317,4.203,1318,4.203,1319,5.232,1320,4.203,1321,4.203,1322,4.203,1323,3.016,1324,6.253,1325,4.203,1326,3.016,1327,4.203,1328,3.016,1329,4.203,1330,3.016,1331,4.203,1332,3.016,1333,4.203,1334,3.016,1335,4.203,1336,3.016,1337,4.203,1338,3.016,1339,3.016,1340,4.203,1341,3.016,1342,4.203,1343,3.016,1344,3.016,1345,3.016,1346,3.016]],["title/coverage.html",[1347,3.686]],["body/coverage.html",[0,0.495,1,0.998,9,0.296,10,3.234,20,0.031,23,1.475,26,0.141,35,0.998,37,1.495,39,0.998,41,0.998,42,1.499,44,0.921,46,0.921,49,0.998,51,0.921,52,0.597,54,0.921,56,0.921,57,0.437,59,0.921,63,0.018,64,0.023,65,0.018,91,2.514,104,2.913,106,2.514,130,2.514,132,2.514,134,2.514,136,2.514,138,2.514,140,2.514,144,2.821,146,3.234,165,2.514,175,2.821,177,3.234,183,0.437,194,1.712,205,3.234,233,1.734,252,3.195,253,3.234,265,1.475,266,1.598,313,3.234,324,0.921,325,1.598,344,2.268,345,2.268,348,1.475,355,2.268,464,3.234,473,3.624,510,2.268,511,2.514,552,3.195,561,3.234,612,3.234,613,3.234,666,2.92,691,3.234,711,2.514,733,3.234,751,3.624,752,3.234,845,3.234,885,3.234,897,2.821,915,4.843,1108,3.234,1119,3.234,1140,3.234,1175,3.234,1201,3.234,1220,3.624,1221,3.234,1282,3.234,1311,3.234,1347,3.234,1348,3.86,1349,3.86,1350,3.86,1351,5.477,1352,5.979,1353,3.86,1354,4.958,1355,4.958,1356,3.86,1357,3.86,1358,3.86,1359,3.86,1360,3.86,1361,3.86,1362,3.86,1363,4.958,1364,3.86,1365,3.234,1366,3.86,1367,3.86,1368,3.86,1369,4.958,1370,3.86,1371,3.86,1372,3.86,1373,3.86,1374,3.86,1375,3.86,1376,3.86,1377,3.86,1378,3.86,1379,3.86,1380,3.86,1381,3.86,1382,3.234,1383,4.154,1384,3.234,1385,4.154,1386,3.234,1387,3.234,1388,3.86,1389,3.86]],["title/dependencies.html",[69,2.525,1390,2.691]],["body/dependencies.html",[0,0.362,20,0.031,22,0.663,63,0.022,64,0.026,65,0.022,69,3.079,86,4.709,87,3.66,126,1.545,129,2.777,164,2.124,195,2.777,781,4.109,963,4.709,1391,4.727,1392,4.727,1393,4.727,1394,5.62,1395,4.727,1396,6.548,1397,4.727,1398,4.727,1399,4.727,1400,4.727,1401,4.727,1402,4.727,1403,4.727,1404,4.727,1405,4.727,1406,4.727,1407,4.727,1408,4.727,1409,4.727,1410,4.727,1411,4.727,1412,4.727,1413,4.727]],["title/miscellaneous/functions.html",[1414,1.753,1415,3.248]],["body/miscellaneous/functions.html",[20,0.029,33,0.504,63,0.023,64,0.027,65,0.023,147,0.443,153,0.851,182,0.931,184,0.931,206,1.103,216,1.392,220,3.663,222,3.109,268,1.771,734,3.417,740,4.623,897,4.252,1365,4.198,1414,3.263,1415,4.198,1416,5.011,1417,5.011,1418,5.011]],["title/index.html",[147,0.238,936,1.967,1419,2.691]],["body/index.html",[0,0.451,4,0.348,13,1.271,20,0.025,33,0.457,52,0.849,63,0.021,64,0.025,65,0.021,81,2.958,155,3.805,324,1.084,562,4.597,594,4.597,847,4.94,939,5.131,1209,3.805,1210,3.805,1420,4.542,1421,5.896,1422,5.896,1423,4.542,1424,4.542,1425,4.542,1426,6.27,1427,6.446,1428,4.542,1429,4.542,1430,4.542,1431,4.542,1432,4.542,1433,4.542,1434,4.542,1435,4.542,1436,4.542,1437,4.542,1438,5.896,1439,4.542,1440,6.27,1441,4.542,1442,4.542,1443,4.542,1444,4.542,1445,4.542,1446,3.805,1447,5.487,1448,5.487,1449,6.125,1450,4.542,1451,5.487,1452,4.542,1453,4.542,1454,4.542,1455,5.896,1456,4.542,1457,4.542,1458,4.542,1459,4.542]],["title/modules.html",[68,2.585]],["body/modules.html",[20,0.027,63,0.024,64,0.027,65,0.024,67,3.376,68,3.045,78,3.045,87,3.376,898,4.343,901,4.343,924,3.789,1460,5.184,1461,5.931]],["title/overview.html",[1462,3.686]],["body/overview.html",[1,1.658,2,1.445,20,0.031,27,1.337,35,1.507,39,1.507,41,1.507,44,1.391,46,1.391,49,1.507,51,1.391,54,1.391,56,1.391,59,1.391,63,0.02,64,0.025,65,0.02,66,2.879,67,4.42,68,2.598,69,2.879,70,3.704,71,3.704,72,3.704,73,3.232,74,3.704,75,3.704,76,3.704,77,3.704,78,3.424,79,4.523,80,3.704,81,2.879,145,2.363,162,2.879,175,3.232,204,2.162,489,2.363,510,2.598,731,3.516,1462,3.704,1463,4.421,1464,4.421,1465,5.398]],["title/routes.html",[162,2.865]],["body/routes.html",[20,0.027,63,0.024,64,0.027,65,0.024,162,3.429]],["title/miscellaneous/variables.html",[702,2.834,1414,1.753]],["body/miscellaneous/variables.html",[20,0.031,63,0.022,64,0.026,65,0.022,147,0.431,183,0.688,202,3.178,203,3.061,222,3.061,227,2.324,228,2.148,702,3.568,1382,4.089,1383,5.254,1384,4.089,1385,4.089,1386,4.799,1387,4.799,1414,3.178,1446,4.799,1466,5.727,1467,4.881,1468,4.881,1469,4.881,1470,4.881]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":666,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["0).map(skill",{"_index":436,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["0.4",{"_index":1086,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0.6",{"_index":820,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["0.6.1",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["0.712",{"_index":1099,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0.8",{"_index":836,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["0.8.2",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":822,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["000000",{"_index":991,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0b6623",{"_index":985,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0px",{"_index":727,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["1",{"_index":731,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"overview.html":{}}}],["1.1.0",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["1.25em",{"_index":1100,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["1/1",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":711,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["10/10",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":552,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1085,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["10px",{"_index":677,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["11",{"_index":1463,"title":{},"body":{"overview.html":{}}}],["120px",{"_index":1081,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["12px",{"_index":1088,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["13",{"_index":1269,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["13.0.0",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["13/15",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":1084,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["14px",{"_index":1096,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["15",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":1078,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["16px",{"_index":311,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["18/20",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":679,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["2",{"_index":489,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{},"overview.html":{}}}],["2.5.4",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1021,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["2000",{"_index":527,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["20px",{"_index":553,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["222",{"_index":1082,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["222222",{"_index":682,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["230px",{"_index":1080,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["24px",{"_index":824,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["25px",{"_index":685,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserProjectsComponent.html":{}}}],["26px",{"_index":815,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["28px",{"_index":827,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["2].includes(this.selectedtask.state",{"_index":1046,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["2px",{"_index":1002,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["3",{"_index":986,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["3/19",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":547,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["300px",{"_index":669,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["30px",{"_index":671,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["32px",{"_index":817,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["336699",{"_index":687,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["350px",{"_index":657,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["36px",{"_index":545,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{}}}],["3px",{"_index":831,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["4.4.8",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1024,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["400",{"_index":1097,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["40px",{"_index":676,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["42",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":728,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5",{"_index":1465,"title":{},"body":{"overview.html":{}}}],["5.7.0",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1077,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["5px",{"_index":1087,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["6",{"_index":1464,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["6.2.4",{"_index":1424,"title":{},"body":{"index.html":{}}}],["6/8",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":663,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["66",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":684,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["7.1.0",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":818,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["70px",{"_index":732,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["75",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1083,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["83",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":829,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["9/12",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["_filter",{"_index":340,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["_filter(value",{"_index":349,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["_name",{"_index":1304,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["_project",{"_index":1285,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["_skill",{"_index":328,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["_task",{"_index":329,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["_user",{"_index":533,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{}}}],["_user.skills",{"_index":1276,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["absolute",{"_index":826,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["access",{"_index":848,"title":{},"body":{"injectables/ProjectService.html":{}}}],["accessors",{"_index":570,"title":{},"body":{"injectables/HttpService.html":{}}}],["actions",{"_index":307,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{}}}],["activatedroute",{"_index":708,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["activatedroutesnapshot",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["adatai",{"_index":1227,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["adatait",{"_index":1253,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["adatok",{"_index":1279,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["adatot",{"_index":521,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["add",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["add(event",{"_index":1240,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["add/remove",{"_index":777,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["addbluron",{"_index":330,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["added",{"_index":767,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["addmember",{"_index":850,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addmember(projectid",{"_index":858,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addnewproject",{"_index":851,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addnewproject(project",{"_index":860,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addnewskill",{"_index":1120,"title":{},"body":{"injectables/SkillService.html":{}}}],["addnewskill(skill",{"_index":1127,"title":{},"body":{"injectables/SkillService.html":{}}}],["adds",{"_index":371,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["addskill",{"_index":341,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/UserService.html":{}}}],["addskill(event",{"_index":368,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["addskill(userid",{"_index":1322,"title":{},"body":{"injectables/UserService.html":{}}}],["addtask",{"_index":902,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["addtask(task",{"_index":1181,"title":{},"body":{"injectables/TaskService.html":{}}}],["adni",{"_index":524,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["again",{"_index":506,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["align",{"_index":549,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["allskills",{"_index":331,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["alltasks",{"_index":440,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["alltasks.filter(task",{"_index":443,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["alpha",{"_index":661,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["already",{"_index":281,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["always",{"_index":704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["am)legend",{"_index":1051,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["angular",{"_index":1421,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/keycodes",{"_index":416,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["angular/common",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"components/ProjectTasksComponent.html":{}}}],["angular/compiler",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"dependencies.html":{}}}],["answer",{"_index":500,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"interfaces/RegistrationData.html":{}}}],["anybody",{"_index":1156,"title":{},"body":{"classes/Task.html":{}}}],["api",{"_index":564,"title":{},"body":{"injectables/HttpService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"index.html":{}}}],["app.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":600,"title":{},"body":{"injectables/HttpService.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":144,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":78,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrowhead",{"_index":1006,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["artifacts",{"_index":1441,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1199,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":282,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["assignedtasks",{"_index":1202,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["assignedusers",{"_index":260,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["assignees",{"_index":1141,"title":{},"body":{"classes/Task.html":{}}}],["assigntasktouser",{"_index":1176,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigntasktouser(taskid",{"_index":1183,"title":{},"body":{"injectables/TaskService.html":{}}}],["associated",{"_index":749,"title":{},"body":{"classes/Project.html":{}}}],["async",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["auser.id).includes(user.id",{"_index":299,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["auth.guard",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authentication",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["authenticationservice",{"_index":23,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":165,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["authservice.currentuser.name",{"_index":715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auto",{"_index":674,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["autocomplete",{"_index":353,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["automatically",{"_index":1432,"title":{},"body":{"index.html":{}}}],["available",{"_index":924,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"modules.html":{}}}],["await",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["backend",{"_index":271,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["backend's",{"_index":849,"title":{},"body":{"injectables/ProjectService.html":{}}}],["background",{"_index":557,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["bar",{"_index":693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basic",{"_index":603,"title":{},"body":{"injectables/HttpService.html":{}}}],["befejez",{"_index":1065,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["befejezett",{"_index":1052,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["befejezte",{"_index":1070,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["befejezése",{"_index":1068,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["before",{"_index":1160,"title":{},"body":{"classes/Task.html":{}}}],["begin",{"_index":921,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["begins",{"_index":919,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["begintask",{"_index":903,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["begintask(taskid",{"_index":1186,"title":{},"body":{"injectables/TaskService.html":{}}}],["being",{"_index":893,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["bejelentkezés",{"_index":655,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["beleértve",{"_index":1228,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["belong",{"_index":961,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["black",{"_index":1106,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["block",{"_index":1104,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["blocked",{"_index":1093,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["blokkolt",{"_index":1055,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["body",{"_index":585,"title":{},"body":{"injectables/HttpService.html":{}}}],["bold",{"_index":683,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["boolean",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":672,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["bottom",{"_index":816,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["box",{"_index":726,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["browse",{"_index":1461,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":157,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":554,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["btoa(`${username}:${password",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["build",{"_index":1440,"title":{},"body":{"index.html":{}}}],["button",{"_index":308,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["calc(50",{"_index":837,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/UserProfileComponent.html":{}}}],["called",{"_index":356,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["canactivate",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":461,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["card",{"_index":812,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["catch",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["cd5555",{"_index":559,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["center",{"_index":550,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["change",{"_index":1434,"title":{},"body":{"index.html":{}}}],["check",{"_index":1458,"title":{},"body":{"index.html":{}}}],["checkavailability",{"_index":904,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["checkavailability(task",{"_index":922,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["checked",{"_index":926,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["checks",{"_index":486,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["child",{"_index":1310,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["child(1",{"_index":842,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["child(2",{"_index":843,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["child(2n",{"_index":840,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["chip",{"_index":405,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["chipinput",{"_index":332,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/Project.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":145,"title":{},"body":{"classes/AppPage.html":{},"classes/Project.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"overview.html":{}}}],["classes/projects",{"_index":289,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["classes/skill",{"_index":418,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["classes/task",{"_index":962,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["classes/user",{"_index":288,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1422,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":641,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["cluster_appmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1436,"title":{},"body":{"index.html":{}}}],["color",{"_index":558,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["combobox",{"_index":354,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["comma",{"_index":409,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["common",{"_index":256,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["communication",{"_index":270,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{}}}],["complete",{"_index":1142,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["completed",{"_index":928,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["completedby",{"_index":1143,"title":{},"body":{"classes/Task.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["component_template",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"overview.html":{}}}],["condensed",{"_index":998,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["console.log('login",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('new",{"_index":1030,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["console.log('project",{"_index":972,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["console.log(await",{"_index":647,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["console.log(json",{"_index":883,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.log(selecteduser",{"_index":788,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["console.log(typeof",{"_index":1031,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["const",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(dialog",{"_index":624,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(dialogref",{"_index":480,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["constructor(httpclient",{"_index":571,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(httpservice",{"_index":1125,"title":{},"body":{"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(name",{"_index":737,"title":{},"body":{"classes/Project.html":{},"classes/Skill.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":472,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(projectservice",{"_index":1289,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["constructor(route",{"_index":762,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["constructor(skillservice",{"_index":343,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(userservice",{"_index":264,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["contains",{"_index":275,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["content",{"_index":599,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["context",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributes",{"_index":780,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["contributing",{"_index":1212,"title":{},"body":{"classes/User.html":{}}}],["control",{"_index":400,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["converted",{"_index":1418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1347,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["createproject",{"_index":1287,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["creates",{"_index":268,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["criterias",{"_index":491,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["csatlakozik",{"_index":1064,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["csatlakozás",{"_index":1060,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["current",{"_index":1246,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["currently",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProjectTasksComponent.html":{}}}],["currentuser",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["cursor",{"_index":689,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["curve",{"_index":1008,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["custom",{"_index":1094,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["d3",{"_index":781,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"dependencies.html":{}}}],["d3.curvebasis",{"_index":1009,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["d3.select('svg",{"_index":967,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dagre",{"_index":963,"title":{},"body":{"components/ProjectTasksComponent.html":{},"dependencies.html":{}}}],["dagred3",{"_index":954,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dagred3.graphlib.graph().setgraph",{"_index":976,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dagred3.render",{"_index":969,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["data",{"_index":261,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["date",{"_index":740,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["dates",{"_index":1101,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["datetostring",{"_index":897,"title":{},"body":{"components/ProjectTasksComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["datetostring(date",{"_index":1417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datetostring(selectedtask.completiontime",{"_index":1069,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["datetostring(selectedtask.starttime",{"_index":1067,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deadline",{"_index":735,"title":{},"body":{"classes/Project.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":283,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["default",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":151,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["definitely",{"_index":771,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["deletable",{"_index":932,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["delete",{"_index":566,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{}}}],["delete(route",{"_index":574,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletebtnvisibility",{"_index":905,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deleted",{"_index":935,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deleteproject",{"_index":852,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deleteproject(projectid",{"_index":862,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deletes",{"_index":934,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deleteskill",{"_index":1121,"title":{},"body":{"injectables/SkillService.html":{}}}],["deleteskill(skillid",{"_index":1129,"title":{},"body":{"injectables/SkillService.html":{}}}],["deletetask",{"_index":906,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["deletetask(taskid",{"_index":1188,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteuser",{"_index":1312,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1325,"title":{},"body":{"injectables/UserService.html":{}}}],["dependecy",{"_index":946,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":889,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["depending",{"_index":498,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["description",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["details",{"_index":844,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["determines",{"_index":930,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dev",{"_index":1429,"title":{},"body":{"index.html":{}}}],["development",{"_index":1425,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["dialogaddmembercomponent",{"_index":35,"title":{"components/DialogAddMemberComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogaddtaskcomponent",{"_index":39,"title":{"components/DialogAddTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogcreateprojectcomponent",{"_index":41,"title":{"components/DialogCreateProjectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":471,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProjectsComponent.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":787,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["dialogregistrationcomponent",{"_index":44,"title":{"components/DialogRegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogs/dialog",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["different",{"_index":412,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["directive",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1439,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1443,"title":{},"body":{"index.html":{}}}],["display",{"_index":1102,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["dist",{"_index":1442,"title":{},"body":{"index.html":{}}}],["divider",{"_index":833,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["documentation",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["done",{"_index":1090,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["duration",{"_index":526,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["during",{"_index":505,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["duty",{"_index":616,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["dv",{"_index":714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["e2e",{"_index":1453,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":146,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":846,"title":{},"body":{"injectables/ProjectService.html":{}}}],["edit",{"_index":880,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/UserService.html":{}}}],["edited",{"_index":958,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["editproject",{"_index":853,"title":{},"body":{"injectables/ProjectService.html":{}}}],["editproject(project",{"_index":864,"title":{},"body":{"injectables/ProjectService.html":{}}}],["editskill",{"_index":1122,"title":{},"body":{"injectables/SkillService.html":{}}}],["editskill(skill",{"_index":1132,"title":{},"body":{"injectables/SkillService.html":{}}}],["edituser",{"_index":1313,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(user",{"_index":1327,"title":{},"body":{"injectables/UserService.html":{}}}],["egyezik",{"_index":532,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["egyéb",{"_index":1308,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["element",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["element(by.css('app",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":392,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["elements",{"_index":360,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["elmenti",{"_index":1249,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["email",{"_index":512,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["end",{"_index":939,"title":{},"body":{"components/ProjectTasksComponent.html":{},"index.html":{}}}],["endpoint",{"_index":579,"title":{},"body":{"injectables/HttpService.html":{}}}],["endpoints",{"_index":273,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/ProjectService.html":{}}}],["ends",{"_index":938,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["endtask",{"_index":907,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["endtask(taskid",{"_index":1190,"title":{},"body":{"injectables/TaskService.html":{}}}],["endtime",{"_index":1144,"title":{},"body":{"classes/Task.html":{}}}],["enter",{"_index":408,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["entrycomponents",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["etc",{"_index":890,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["event",{"_index":374,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["event.charcode",{"_index":1268,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["event.input",{"_index":448,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["event.option.viewvalue",{"_index":1275,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["event.value",{"_index":449,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["example",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["execute",{"_index":1451,"title":{},"body":{"index.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["ez",{"_index":1222,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["false",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":542,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["fasle",{"_index":1150,"title":{},"body":{"classes/Task.html":{}}}],["feladat",{"_index":459,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["felhasznál",{"_index":1251,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["felhasználók",{"_index":720,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["felvétele",{"_index":302,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{}}}],["ffcc00",{"_index":990,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["fff",{"_index":828,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["ffffff",{"_index":560,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["field",{"_index":359,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["fields",{"_index":487,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1435,"title":{},"body":{"index.html":{}}}],["fill",{"_index":999,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["fillcolor",{"_index":979,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["filled",{"_index":488,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["filtered",{"_index":363,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["filteredoptions",{"_index":333,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["filters",{"_index":351,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["filtervalue",{"_index":432,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["final",{"_index":361,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["fixed",{"_index":724,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flag",{"_index":1445,"title":{},"body":{"index.html":{}}}],["float",{"_index":838,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["folyamatban",{"_index":1053,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["font",{"_index":541,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["footer",{"_index":834,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["form",{"_index":316,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["form's",{"_index":630,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["form.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.html",{"_index":620,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.scss",{"_index":619,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts",{"_index":613,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:24",{"_index":626,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:27",{"_index":642,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":627,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:49",{"_index":628,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":640,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form/login",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":398,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["formgroup",{"_index":643,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["frissíti",{"_index":1250,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["frontend",{"_index":1210,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fuck",{"_index":388,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["full",{"_index":474,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["function",{"_index":355,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["functions",{"_index":1415,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1454,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1438,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1420,"title":{},"body":{"index.html":{}}}],["get(route",{"_index":582,"title":{},"body":{"injectables/HttpService.html":{}}}],["getallprojects",{"_index":854,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getallskills",{"_index":1123,"title":{},"body":{"injectables/SkillService.html":{}}}],["getassignedtasks",{"_index":1314,"title":{},"body":{"injectables/UserService.html":{}}}],["getassignedtasks(userid",{"_index":1329,"title":{},"body":{"injectables/UserService.html":{}}}],["getmembers",{"_index":855,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getmembers(projectid",{"_index":867,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getoptions",{"_index":595,"title":{},"body":{"injectables/HttpService.html":{}}}],["getownprojects",{"_index":1315,"title":{},"body":{"injectables/UserService.html":{}}}],["getownprojects(userid",{"_index":1331,"title":{},"body":{"injectables/UserService.html":{}}}],["getparagraphtext",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["getproject",{"_index":856,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getproject(projectid",{"_index":869,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojects",{"_index":1316,"title":{},"body":{"injectables/UserService.html":{}}}],["getprojects(userid",{"_index":1333,"title":{},"body":{"injectables/UserService.html":{}}}],["getskill",{"_index":1124,"title":{},"body":{"injectables/SkillService.html":{}}}],["getskill(skillid",{"_index":1135,"title":{},"body":{"injectables/SkillService.html":{}}}],["getskillsofuser",{"_index":1317,"title":{},"body":{"injectables/UserService.html":{}}}],["getskillsofuser(userid",{"_index":1335,"title":{},"body":{"injectables/UserService.html":{}}}],["gettask",{"_index":1177,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettask(taskid",{"_index":1192,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasks",{"_index":1178,"title":{},"body":{"injectables/TaskService.html":{}}}],["getting",{"_index":1419,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1318,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(id",{"_index":1337,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1319,"title":{},"body":{"injectables/UserService.html":{}}}],["give",{"_index":318,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["given",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProjectTasksComponent.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":913,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["globals",{"_index":964,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["go",{"_index":1457,"title":{},"body":{"index.html":{}}}],["going",{"_index":504,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["graph",{"_index":898,"title":{},"body":{"components/ProjectTasksComponent.html":{},"modules.html":{}}}],["green",{"_index":984,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["guard",{"_index":175,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":540,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["h1')).gettext",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["h2",{"_index":675,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["half",{"_index":1076,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["handler",{"_index":629,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["having",{"_index":1115,"title":{},"body":{"classes/Skill.html":{}}}],["header",{"_index":813,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["headers",{"_index":598,"title":{},"body":{"injectables/HttpService.html":{}}}],["headers['authorization",{"_index":602,"title":{},"body":{"injectables/HttpService.html":{}}}],["height",{"_index":830,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["help",{"_index":1455,"title":{},"body":{"index.html":{}}}],["helper",{"_index":914,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["hiba",{"_index":525,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["hidden",{"_index":811,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["holds",{"_index":957,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["hover",{"_index":686,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["http",{"_index":587,"title":{},"body":{"injectables/HttpService.html":{}}}],["http.service",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1431,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":593,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclient",{"_index":572,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectTasksComponent.html":{}}}],["httpclientmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":597,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpheaders(headers",{"_index":604,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpservice",{"_index":233,"title":{"injectables/HttpService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["icon",{"_index":825,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["id",{"_index":706,"title":{},"body":{"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":746,"title":{},"body":{"classes/Project.html":{}}}],["ignore",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogCreateProjectComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["implemented",{"_index":894,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["implements",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":312,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":147,"title":{"index.html":{}},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":319,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["initgraph",{"_index":908,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["initializes",{"_index":700,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["inject",{"_index":286,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{}}}],["inject(mat_dialog_data",{"_index":284,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{}}}],["injectable",{"_index":194,"title":{"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":274,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["inline",{"_index":1103,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["inner",{"_index":1011,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["inner.attr('transform",{"_index":1019,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["input",{"_index":358,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["instance",{"_index":269,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["interface",{"_index":510,"title":{"interfaces/RegistrationData.html":{}},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1107,"title":{},"body":{"interfaces/RegistrationData.html":{}}}],["isopen",{"_index":1145,"title":{},"body":{"classes/Task.html":{}}}],["item.name",{"_index":451,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["j",{"_index":300,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{}}}],["jelsz",{"_index":530,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["join",{"_index":1157,"title":{},"body":{"classes/Task.html":{}}}],["jointask",{"_index":1050,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["js",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["jsdom",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":581,"title":{},"body":{"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["json.parse(json.stringify(this.authservice.currentuser",{"_index":1267,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["json.stringify(member",{"_index":882,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(project",{"_index":876,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(skill",{"_index":1138,"title":{},"body":{"injectables/SkillService.html":{},"injectables/UserService.html":{}}}],["json.stringify(task",{"_index":1197,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(user",{"_index":1198,"title":{},"body":{"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["karma",{"_index":1452,"title":{},"body":{"index.html":{}}}],["kell",{"_index":523,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["key",{"_index":886,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["keyboard_backspace",{"_index":718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["keyboardevent",{"_index":1241,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["keypress",{"_index":357,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["kezdete",{"_index":1066,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["kezeli",{"_index":1224,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["kilépés",{"_index":721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["knows",{"_index":389,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["komponens",{"_index":1223,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["képességek",{"_index":1280,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["képességeket",{"_index":1229,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["két",{"_index":529,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["közreműködők",{"_index":1058,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["label",{"_index":995,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["labelstyle",{"_index":996,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["last",{"_index":841,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["lbl",{"_index":1089,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["leader",{"_index":317,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Project.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["leaderid",{"_index":736,"title":{},"body":{"classes/Project.html":{}}}],["left",{"_index":725,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["legend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"overview.html":{}}}],["length",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["line",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["line:max",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["list",{"_index":280,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["literal",{"_index":346,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["llapot",{"_index":1061,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["logged",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["login(username",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginform",{"_index":621,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":46,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logs",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["managed",{"_index":952,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["management",{"_index":888,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["map",{"_index":414,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["map((src",{"_index":427,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["margin",{"_index":309,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["mat",{"_index":306,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["mat_dialog_data",{"_index":287,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{}}}],["matautocomplete",{"_index":334,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["matautocompletemodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompleteselectedevent",{"_index":1255,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["matbuttonmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":362,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["matcheckboxmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":366,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipinputevent",{"_index":369,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["matchipsmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":625,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["matdialogmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":470,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["matdividermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":404,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["matgridlistmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["matsnackbarmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["meg",{"_index":522,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["megadott",{"_index":1252,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["megkezd",{"_index":1063,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["megkezdhet",{"_index":1054,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["member",{"_index":255,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["member'},{'name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["member.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{}}}],["member.component.html",{"_index":259,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.scss",{"_index":258,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts",{"_index":253,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"coverage.html":{}}}],["member.component.ts:32",{"_index":279,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:41",{"_index":267,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:54",{"_index":285,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:57",{"_index":278,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member/dialog",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{}}}],["membername",{"_index":872,"title":{},"body":{"injectables/ProjectService.html":{}}}],["memberof",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["members",{"_index":277,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"classes/Task.html":{}}}],["members'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["members.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["members.component.html",{"_index":755,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.scss",{"_index":754,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts",{"_index":752,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{}}}],["members.component.ts:110",{"_index":770,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:124",{"_index":768,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":776,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:42",{"_index":774,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:50",{"_index":778,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:58",{"_index":779,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:66",{"_index":763,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:72",{"_index":775,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:75",{"_index":764,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:87",{"_index":765,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{}}}],["mentés",{"_index":304,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/UserProfileComponent.html":{}}}],["message",{"_index":495,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["met",{"_index":492,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["methods",{"_index":148,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":1079,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["miscellaneous",{"_index":1414,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["module's",{"_index":637,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1456,"title":{},"body":{"index.html":{}}}],["mycontrol",{"_index":335,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["mégsem",{"_index":305,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":364,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["navbar",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["navbar.component.html",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":49,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1430,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["nem",{"_index":531,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["new",{"_index":324,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newproject",{"_index":1305,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["newtask",{"_index":1029,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["newtask.prerequisites",{"_index":1032,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["next",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{}}}],["ng",{"_index":1427,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":263,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["node",{"_index":947,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["node.task",{"_index":1037,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nodeclicker",{"_index":909,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nodeclicker(id",{"_index":942,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nodes",{"_index":945,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["none",{"_index":821,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["not(:last",{"_index":1309,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["note",{"_index":891,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nth",{"_index":839,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/UserProfileComponent.html":{}}}],["null",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":407,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["nyílt",{"_index":463,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["object",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddTaskComponent.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{}}}],["onclick",{"_index":944,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["one",{"_index":703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["onsubmit",{"_index":622,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["opacity",{"_index":819,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["openaddmemberdialog",{"_index":759,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["openregdialog",{"_index":623,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["opens",{"_index":617,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["option",{"_index":462,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["option.name.tolowercase().indexof(filtervalue",{"_index":435,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["optional",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":352,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{}}}],["orange",{"_index":1091,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["otherwise",{"_index":496,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{}}}],["out",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":810,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["overview",{"_index":1462,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownedprojects",{"_index":1203,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["owner",{"_index":739,"title":{},"body":{"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["owners",{"_index":1109,"title":{},"body":{"classes/Skill.html":{}}}],["ownprojects",{"_index":1286,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["p.id).includes(project.id",{"_index":1302,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["package",{"_index":1390,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":670,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["page",{"_index":639,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["panel",{"_index":808,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["param",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"injectables/HttpService.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["parameter",{"_index":367,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/NavbarComponent.html":{}}}],["parameters",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(this.route.snapshot.parammap.get('pid",{"_index":710,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["parseint(this.route.snapshot.parammap.get('uid",{"_index":713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["part",{"_index":887,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["passwd",{"_index":477,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["passwd2",{"_index":478,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["password",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["passwords",{"_index":490,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["patch",{"_index":567,"title":{},"body":{"injectables/HttpService.html":{}}}],["patch(route",{"_index":584,"title":{},"body":{"injectables/HttpService.html":{}}}],["path",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["pid",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["placeholder",{"_index":1072,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["pointer",{"_index":690,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["pops",{"_index":493,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["position",{"_index":723,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["post",{"_index":568,"title":{},"body":{"injectables/HttpService.html":{}}}],["post(route",{"_index":589,"title":{},"body":{"injectables/HttpService.html":{}}}],["pre",{"_index":660,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["pre.id).complete",{"_index":1027,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["prerequisites",{"_index":927,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["prerequisities",{"_index":321,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["private",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["process",{"_index":384,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["prod",{"_index":1444,"title":{},"body":{"index.html":{}}}],["production",{"_index":1446,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["profile",{"_index":1230,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["profile.component",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":1233,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":1232,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1221,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:105",{"_index":1247,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1260,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1258,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1265,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:32",{"_index":1261,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1264,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1263,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1262,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1257,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1259,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:39",{"_index":1238,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:52",{"_index":1239,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1243,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1242,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":1245,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:84",{"_index":1256,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":1248,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilát",{"_index":1225,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["progress",{"_index":988,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["project",{"_index":52,"title":{"classes/Project.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["project's",{"_index":741,"title":{},"body":{"classes/Project.html":{},"components/ProjectMembersComponent.html":{}}}],["project'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["project(_name",{"_index":1306,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["project.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/UserProjectsComponent.html":{}}}],["project.component.html",{"_index":466,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.component.scss",{"_index":465,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.component.ts",{"_index":464,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"coverage.html":{}}}],["project.component.ts:27",{"_index":469,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.component.ts:38",{"_index":468,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.id",{"_index":881,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.members.includes(user.id",{"_index":794,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["project.name",{"_index":800,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["project/dialog",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/DialogCreateProjectComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projectek",{"_index":716,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/UserProjectsComponent.html":{}}}],["projectekben",{"_index":806,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["projectid",{"_index":782,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["projectmemberscomponent",{"_index":51,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectname",{"_index":467,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["projects",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["projects.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects.component.html",{"_index":1284,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.scss",{"_index":1283,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts",{"_index":1282,"title":{},"body":{"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projects.component.ts:20",{"_index":1295,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:21",{"_index":1294,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:22",{"_index":1290,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:31",{"_index":1292,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:35",{"_index":1293,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:41",{"_index":1291,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects/:pid/members",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/:pid/tasks",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/user",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projectservice",{"_index":266,"title":{"injectables/ProjectService.html":{}},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projecttasks",{"_index":336,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["projecttaskscomponent",{"_index":54,"title":{"components/ProjectTasksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["promise.reject",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise.resolve(this.currentuser",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["properties",{"_index":210,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["property",{"_index":403,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["protractor",{"_index":155,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":917,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["provided",{"_index":386,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["providedin",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":315,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/ProjectService.html":{}}}],["public",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["purposes",{"_index":507,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["put",{"_index":569,"title":{},"body":{"injectables/HttpService.html":{}}}],["put(route",{"_index":591,"title":{},"body":{"injectables/HttpService.html":{}}}],["radius",{"_index":673,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["raleway",{"_index":543,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["reactiveformsmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":1459,"title":{},"body":{"index.html":{}}}],["ready",{"_index":1092,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["red",{"_index":980,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["reference",{"_index":912,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["refreshlists",{"_index":1288,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["reg",{"_index":555,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{}}}],["register:hover",{"_index":556,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registered",{"_index":391,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["registeruser",{"_index":1320,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(user",{"_index":1340,"title":{},"body":{"injectables/UserService.html":{}}}],["registration",{"_index":383,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["registration'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["registration.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/LoginFormComponent.html":{}}}],["registration.component.html",{"_index":476,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["registration.component.scss",{"_index":475,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["registration.component.ts",{"_index":473,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["registration.component.ts:36",{"_index":502,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":508,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":503,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:60",{"_index":482,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:68",{"_index":483,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:82",{"_index":484,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration/dialog",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["registrationdata",{"_index":511,"title":{"interfaces/RegistrationData.html":{}},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["regisztráci",{"_index":537,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["relative",{"_index":1095,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["reload",{"_index":1433,"title":{},"body":{"index.html":{}}}],["removable",{"_index":337,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["remove",{"_index":1235,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["remove(skill",{"_index":1244,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["removemember",{"_index":857,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removemember(projectid",{"_index":871,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removemember/0",{"_index":884,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removes",{"_index":378,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"components/UserProfileComponent.html":{}}}],["removeskill",{"_index":342,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/UserService.html":{}}}],["removeskill(skilltoremove",{"_index":376,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["removeskill(userid",{"_index":1342,"title":{},"body":{"injectables/UserService.html":{}}}],["removeuser",{"_index":760,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["render",{"_index":899,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["renderer",{"_index":955,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["representation",{"_index":734,"title":{},"body":{"classes/Project.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["representing",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["represents",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavbarComponent.html":{}}}],["request",{"_index":577,"title":{},"body":{"injectables/HttpService.html":{}}}],["requested",{"_index":618,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["require",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":322,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{}}}],["requiredby",{"_index":1110,"title":{},"body":{"classes/Skill.html":{},"classes/Task.html":{}}}],["requiredskills",{"_index":1146,"title":{},"body":{"classes/Task.html":{}}}],["requirements",{"_index":373,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["requiring",{"_index":1116,"title":{},"body":{"classes/Skill.html":{},"classes/Task.html":{}}}],["reset",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsible",{"_index":254,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/ProjectTasksComponent.html":{}}}],["rest",{"_index":563,"title":{},"body":{"injectables/HttpService.html":{}}}],["restoreuserdata",{"_index":1236,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":156,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":153,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":1098,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":681,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["rgba(0,0,0,0.4",{"_index":832,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["rgba(0,0,0,0.6",{"_index":729,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rgba(255,255,255,0.1",{"_index":1075,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["rgba(255,255,255,0.15",{"_index":668,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["rgba(255,255,255,0.3",{"_index":664,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["rgba(255,255,255,0.4",{"_index":1074,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["rgba(255,255,255,0.5",{"_index":835,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["rgba(255,255,255,0.6",{"_index":680,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["right",{"_index":310,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["roboto",{"_index":997,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["route",{"_index":578,"title":{},"body":{"injectables/HttpService.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["router",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginFormComponent.html":{}}}],["routermodule",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":162,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":636,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["routing.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1426,"title":{},"body":{"index.html":{}}}],["running",{"_index":1447,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddTaskComponent.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":415,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["résztvev",{"_index":301,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["résztvevők",{"_index":801,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["részvétel",{"_index":805,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["sajtoslaska",{"_index":658,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["saját",{"_index":804,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/UserProjectsComponent.html":{}}}],["save",{"_index":1057,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["saveuserdata",{"_index":1237,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["scaffolding",{"_index":1437,"title":{},"body":{"index.html":{}}}],["select",{"_index":766,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selectable",{"_index":338,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["selected",{"_index":920,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["selected(event",{"_index":1254,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["selectedtask",{"_index":900,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selectedtask.completedby",{"_index":1071,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selectedtask.name",{"_index":1056,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selectedtask.state",{"_index":1062,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selecteduser",{"_index":756,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selecteduser.name",{"_index":802,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selecteduser.username",{"_index":803,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["selectuser",{"_index":761,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selectuser(user",{"_index":769,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["send",{"_index":633,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["sends",{"_index":497,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["sent",{"_index":580,"title":{},"body":{"injectables/HttpService.html":{}}}],["separatorkeyscodes",{"_index":339,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["separators",{"_index":411,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["serve",{"_index":1428,"title":{},"body":{"index.html":{}}}],["server",{"_index":594,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["servers",{"_index":499,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["service",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"injectables/ProjectService.html":{}}}],["services/auth.service",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["services/project.service",{"_index":290,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["services/skill.service",{"_index":417,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["services/task.service",{"_index":419,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["services/user.service",{"_index":291,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["sets",{"_index":635,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["shadow",{"_index":678,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["simple",{"_index":615,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["size",{"_index":544,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["sizing",{"_index":809,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["skill",{"_index":348,"title":{"classes/Skill.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["skill(this.skillcontrol.value",{"_index":1271,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["skill(value",{"_index":453,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["skill.id",{"_index":1139,"title":{},"body":{"injectables/SkillService.html":{}}}],["skill.name",{"_index":431,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["skillcontrol",{"_index":1234,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["skillid",{"_index":1131,"title":{},"body":{"injectables/SkillService.html":{}}}],["skills",{"_index":323,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["skills/add",{"_index":1345,"title":{},"body":{"injectables/UserService.html":{}}}],["skills/remove",{"_index":1346,"title":{},"body":{"injectables/UserService.html":{}}}],["skillservice",{"_index":344,"title":{"injectables/SkillService.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"injectables/SkillService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["skilltoremove",{"_index":379,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["skilltoremove.id",{"_index":458,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["snackbar",{"_index":481,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["solid",{"_index":1073,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["something",{"_index":772,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["sort",{"_index":773,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["span",{"_index":667,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["spec\\.ts",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":428,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../globals.ts",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:10",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:17",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/classes/projects",{"_index":422,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["src/app/classes/projects.ts",{"_index":733,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/app/classes/projects.ts:17",{"_index":742,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:25",{"_index":747,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:33",{"_index":743,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:41",{"_index":744,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:49",{"_index":745,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:57",{"_index":748,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:65",{"_index":738,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/skill.ts",{"_index":1108,"title":{},"body":{"classes/Skill.html":{},"coverage.html":{}}}],["src/app/classes/skill.ts:18",{"_index":1112,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/skill.ts:26",{"_index":1113,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/skill.ts:34",{"_index":1114,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/skill.ts:42",{"_index":1111,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/task",{"_index":421,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Skill.html":{},"classes/User.html":{}}}],["src/app/classes/task.ts",{"_index":1140,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/classes/task.ts:104",{"_index":1155,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:112",{"_index":1163,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:120",{"_index":1164,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:129",{"_index":1168,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:19",{"_index":1154,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:27",{"_index":1158,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:34",{"_index":1166,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:42",{"_index":1148,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:51",{"_index":1159,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:61",{"_index":1165,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:69",{"_index":1149,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:78",{"_index":1167,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:87",{"_index":1152,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:95",{"_index":1151,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/user",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{}}}],["src/app/classes/user.ts",{"_index":1201,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/classes/user.ts:19",{"_index":1205,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:27",{"_index":1206,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:35",{"_index":1214,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:43",{"_index":1208,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:51",{"_index":1211,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:59",{"_index":1207,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:67",{"_index":1213,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:75",{"_index":1204,"title":{},"body":{"classes/User.html":{}}}],["src/app/dialogs/dialog",{"_index":252,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["src/app/globals.ts",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login",{"_index":612,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":691,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:33",{"_index":705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:54",{"_index":699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/project",{"_index":751,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":205,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth.service.ts:41",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth.service.ts:61",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/http.service.ts",{"_index":561,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts:103",{"_index":575,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:16",{"_index":596,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:36",{"_index":573,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:48",{"_index":583,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:62",{"_index":590,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:76",{"_index":592,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:90",{"_index":586,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/project.service",{"_index":423,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/TaskService.html":{}}}],["src/app/services/project.service.ts",{"_index":845,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/services/project.service.ts:24",{"_index":874,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:35",{"_index":866,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:39",{"_index":861,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:44",{"_index":870,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:48",{"_index":863,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:52",{"_index":865,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:57",{"_index":868,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:61",{"_index":859,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:68",{"_index":873,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/skill.service.ts",{"_index":1119,"title":{},"body":{"injectables/SkillService.html":{},"coverage.html":{}}}],["src/app/services/skill.service.ts:10",{"_index":1137,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:11",{"_index":1126,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:15",{"_index":1134,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:19",{"_index":1128,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:24",{"_index":1136,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:28",{"_index":1130,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:32",{"_index":1133,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/task.service.ts",{"_index":1175,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:13",{"_index":1180,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:17",{"_index":1194,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:21",{"_index":1193,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:25",{"_index":1182,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:30",{"_index":1189,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:34",{"_index":1184,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:39",{"_index":1196,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:44",{"_index":1187,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:48",{"_index":1191,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/user.service",{"_index":509,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["src/app/services/user.service.ts",{"_index":1311,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1321,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1341,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":1339,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1338,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:31",{"_index":1326,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:35",{"_index":1328,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":1336,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:44",{"_index":1323,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:49",{"_index":1343,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:54",{"_index":1332,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:58",{"_index":1334,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":1330,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user",{"_index":1220,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1161,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["startbtnvisibility",{"_index":910,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["started",{"_index":936,"title":{"index.html":{}},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["starttime",{"_index":1147,"title":{},"body":{"classes/Task.html":{}}}],["startwith",{"_index":413,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["startwith(null",{"_index":426,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["state",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["statements",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":892,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["stored",{"_index":1209,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["string",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["stringified",{"_index":588,"title":{},"body":{"injectables/HttpService.html":{}}}],["stroke",{"_index":1001,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["style",{"_index":1000,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["styles.scss",{"_index":292,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["styles.scss,./dialog",{"_index":257,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{}}}],["styles.scss,./project",{"_index":753,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["styles.scss,./user",{"_index":1231,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["submit",{"_index":631,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subtitle",{"_index":823,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["successful",{"_index":634,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["such",{"_index":320,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["support",{"_index":1460,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":901,"title":{},"body":{"components/ProjectTasksComponent.html":{},"modules.html":{}}}],["személyes",{"_index":1226,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["szerkesztés",{"_index":719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["t",{"_index":576,"title":{},"body":{"injectables/HttpService.html":{}}}],["t.id",{"_index":1026,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["table",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1105,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["takes",{"_index":632,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["tar",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["task",{"_index":325,"title":{"classes/Task.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["task's",{"_index":372,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task'},{'name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["task.complete",{"_index":983,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["task.component.css",{"_index":326,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.html",{"_index":327,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts",{"_index":313,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:101",{"_index":410,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:108",{"_index":387,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:110",{"_index":394,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:111",{"_index":347,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:128",{"_index":395,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:145",{"_index":350,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:150",{"_index":375,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:164",{"_index":370,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:186",{"_index":377,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:39",{"_index":401,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:47",{"_index":390,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:55",{"_index":385,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:64",{"_index":380,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:71",{"_index":406,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:78",{"_index":402,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:85",{"_index":399,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:93",{"_index":396,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.id",{"_index":1005,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.name",{"_index":460,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["task.prerequisites.foreach(pre",{"_index":1003,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.project.id",{"_index":444,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["task.starttime",{"_index":987,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.state",{"_index":982,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task/dialog",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":1185,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks",{"_index":314,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Project.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{}}}],["tasks'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["tasks.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["tasks.component.html",{"_index":896,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.scss",{"_index":895,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts",{"_index":885,"title":{},"body":{"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["tasks.component.ts:101",{"_index":911,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:128",{"_index":941,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:142",{"_index":940,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:230",{"_index":923,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:246",{"_index":916,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:272",{"_index":933,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:285",{"_index":943,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:295",{"_index":918,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:310",{"_index":937,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:322",{"_index":929,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:336",{"_index":948,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:45",{"_index":949,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:53",{"_index":953,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:61",{"_index":950,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:69",{"_index":959,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:77",{"_index":951,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:85",{"_index":960,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:93",{"_index":956,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks/project",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["taskservice",{"_index":345,"title":{"injectables/TaskService.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["temporary",{"_index":381,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["test",{"_index":1450,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1449,"title":{},"body":{"index.html":{}}}],["text",{"_index":548,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["textcolor",{"_index":981,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this._filter(src",{"_index":429,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._task",{"_index":437,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.projectid",{"_index":438,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.requiredskills",{"_index":456,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.requiredskills.filter(skill",{"_index":457,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.requiredskills.push(_skill.id",{"_index":455,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.allskills",{"_index":445,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.allskills.filter(option",{"_index":434,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.allskills.find(item",{"_index":450,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.allskills.map(skill",{"_index":430,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.assignedtasks",{"_index":1219,"title":{},"body":{"classes/User.html":{}}}],["this.assignedusers",{"_index":295,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["this.assignedusers.map(auser",{"_index":298,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.assignees",{"_index":1170,"title":{},"body":{"classes/Task.html":{}}}],["this.authservice.currentuser",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.currentuser.id",{"_index":1044,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["this.authservice.login",{"_index":648,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.login('atesz",{"_index":654,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.login(username",{"_index":653,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.checkavailability(task",{"_index":992,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.complete",{"_index":1172,"title":{},"body":{"classes/Task.html":{}}}],["this.currentuser",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["this.data.project.id",{"_index":439,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.datetostring",{"_index":965,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.dialog.open(dialogaddmembercomponent",{"_index":786,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.dialog.open(dialogaddtaskcomponent",{"_index":1028,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.dialog.open(dialogcreateprojectcomponent",{"_index":1303,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.dialog.open(dialogregistrationcomponent",{"_index":656,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.dialogref.close",{"_index":538,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.filteredoptions",{"_index":424,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.graph",{"_index":975,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.graph().height",{"_index":1023,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.graph().width",{"_index":1018,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.node(id",{"_index":1036,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.setedge(pre.id",{"_index":1004,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.setnode(task.id",{"_index":994,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.httpclient.delete(this.url",{"_index":611,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.get(this.url",{"_index":605,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.patch(this.url",{"_index":610,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.post(this.url",{"_index":608,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.put(this.url",{"_index":609,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpservice.delete(this.route",{"_index":878,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.httpservice.get('users/1",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpservice.get(this.route",{"_index":875,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.httpservice.post('users/login",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpservice.post(this.route",{"_index":877,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.httpservice.put(this.route",{"_index":879,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.initgraph",{"_index":970,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.isopen",{"_index":1173,"title":{},"body":{"classes/Task.html":{}}}],["this.leaderid",{"_index":750,"title":{},"body":{"classes/Project.html":{}}}],["this.loginform",{"_index":645,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('password').value",{"_index":652,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('username').value",{"_index":651,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.valid",{"_index":650,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.matautocomplete.isopen",{"_index":447,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.mycontrol.valuechanges.pipe",{"_index":425,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.name",{"_index":513,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"classes/Project.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"classes/User.html":{}}}],["this.name.length",{"_index":517,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.nodeclicker(id",{"_index":1015,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.options",{"_index":606,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.ownedprojects",{"_index":1217,"title":{},"body":{"classes/User.html":{}}}],["this.owners",{"_index":1117,"title":{},"body":{"classes/Skill.html":{}}}],["this.ownprojects",{"_index":1298,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.ownprojects.map(p",{"_index":1301,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.passwd",{"_index":515,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.passwd.length",{"_index":519,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.passwd2",{"_index":516,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.password",{"_index":1215,"title":{},"body":{"classes/User.html":{}}}],["this.pid",{"_index":709,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.prerequisites",{"_index":1171,"title":{},"body":{"classes/Task.html":{}}}],["this.project",{"_index":783,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["this.project.id",{"_index":974,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.project.leader.id",{"_index":1043,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.project.tasks",{"_index":971,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.projects",{"_index":1216,"title":{},"body":{"classes/User.html":{},"components/UserProjectsComponent.html":{}}}],["this.projects.filter(project",{"_index":1300,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.projectservice.addmember(this.project.id",{"_index":789,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.addnewproject(newproject",{"_index":1307,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.projectservice.getallprojects",{"_index":792,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.getmembers(projectid",{"_index":785,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.getmembers(this.data.id",{"_index":296,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.projectservice.getproject(projectid",{"_index":784,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["this.projectservice.getuserownprojects(user.id).subscribe(projects",{"_index":796,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.getuserprojects(user.id).subscribe(projects",{"_index":795,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.removemember(this.project.id",{"_index":798,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projecttasks",{"_index":442,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.refreshlists",{"_index":1296,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.render",{"_index":968,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.render(inner",{"_index":1013,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.requiredby",{"_index":1118,"title":{},"body":{"classes/Skill.html":{},"classes/Task.html":{}}}],["this.requiredskills",{"_index":1169,"title":{},"body":{"classes/Task.html":{}}}],["this.router.navigate",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["this.router.navigate([`/users/${this.authservice.currentuser.id}/projects",{"_index":649,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.selectedtask",{"_index":1035,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.assignees.length",{"_index":1042,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.assignees.map(user",{"_index":1047,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.complete",{"_index":1045,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.starttime",{"_index":1038,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.state",{"_index":1049,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selecteduser",{"_index":790,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.selecteduser.username",{"_index":799,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.skillcontrol.setvalue",{"_index":1273,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.skillcontrol.valuechanges.pipe",{"_index":1266,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.skills",{"_index":1218,"title":{},"body":{"classes/User.html":{}}}],["this.skillservice.addnewskill(_skill",{"_index":454,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.skillservice.addnewskill(new",{"_index":1270,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.skillservice.getallskills",{"_index":446,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('a",{"_index":528,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.snackbar.open('minden",{"_index":520,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.snackbar.open('sikeres",{"_index":536,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.snackbar.open('sikertelen",{"_index":539,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.state",{"_index":1174,"title":{},"body":{"classes/Task.html":{}}}],["this.svg",{"_index":966,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.append('g",{"_index":1012,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.attr('height",{"_index":1022,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.attr('width",{"_index":1017,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.selectall('*').remove",{"_index":1010,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.selectall('g.node').on('click",{"_index":1014,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks",{"_index":973,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks.find(t",{"_index":1025,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks.foreach(task",{"_index":978,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks.length",{"_index":977,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.addtask(newtask",{"_index":1033,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.assigntasktouser(this.selectedtask.id",{"_index":1040,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.begintask(this.selectedtask.id",{"_index":1039,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.deletetask(this.selectedtask.id",{"_index":1034,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.endtask(this.selectedtask.id",{"_index":1041,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.gettasks",{"_index":441,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["this.uid",{"_index":712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.username",{"_index":514,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["this.username.length",{"_index":518,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.userownprojects",{"_index":797,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.userprojects",{"_index":791,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.userprojects.filter(project",{"_index":793,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.users",{"_index":293,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.users.filter(user",{"_index":297,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.userservice.addskill(this.currentuser.id",{"_index":1272,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.edituser(_user",{"_index":1277,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.getownprojects(this.authservice.currentuser.id",{"_index":1299,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.userservice.getprojects(this.authservice.currentuser.id",{"_index":1297,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.userservice.getuser(this.currentuser.id",{"_index":1278,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.getusers",{"_index":294,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.userservice.registeruser(_user",{"_index":535,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.userservice.removeskill(this.currentuser.id",{"_index":1274,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["those",{"_index":365,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["through",{"_index":272,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{}}}],["time",{"_index":1153,"title":{},"body":{"classes/Task.html":{}}}],["title",{"_index":814,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["token",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["toolbar",{"_index":722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":665,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["topromise",{"_index":607,"title":{},"body":{"injectables/HttpService.html":{}}}],["translate",{"_index":1020,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["transparent",{"_index":807,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["true",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["tslint:disable",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["two",{"_index":701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["type",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(1",{"_index":1281,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["uid",{"_index":698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["unassign",{"_index":1200,"title":{},"body":{"injectables/TaskService.html":{}}}],["unassigntaskfromuser",{"_index":1179,"title":{},"body":{"injectables/TaskService.html":{}}}],["unassigntaskfromuser(taskid",{"_index":1195,"title":{},"body":{"injectables/TaskService.html":{}}}],["undefined",{"_index":452,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["unit",{"_index":1448,"title":{},"body":{"index.html":{}}}],["up",{"_index":494,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["url",{"_index":565,"title":{},"body":{"injectables/HttpService.html":{}}}],["use",{"_index":847,"title":{},"body":{"injectables/ProjectService.html":{},"index.html":{}}}],["used",{"_index":382,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["user",{"_index":57,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":638,"title":{},"body":{"components/LoginFormComponent.html":{},"classes/User.html":{}}}],["user(this.name",{"_index":534,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["user.fullname",{"_index":1059,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["user.id",{"_index":1344,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id).includes(this.authservice.currentuser.id",{"_index":1048,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["user.name",{"_index":303,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["userid",{"_index":1324,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["userownprojects",{"_index":757,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["userprofilecomponent",{"_index":56,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprojects",{"_index":758,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["userprojectscomponent",{"_index":59,"title":{"components/UserProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":262,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["users/:uid/profile",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/:uid/projects",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["userservice",{"_index":265,"title":{"injectables/UserService.html":{}},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["v0.0.1",{"_index":659,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["vagy",{"_index":662,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validateregform",{"_index":479,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["validator",{"_index":485,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["validators",{"_index":644,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.required",{"_index":646,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["value",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":433,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["var",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["variable",{"_index":915,"title":{},"body":{"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["variables",{"_index":702,"title":{"miscellaneous/variables.html":{}},"body":{"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["vee",{"_index":1007,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["verification",{"_index":501,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["version",{"_index":1423,"title":{},"body":{"index.html":{}}}],["very",{"_index":614,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["via",{"_index":562,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["viewchild",{"_index":420,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["viewchild('auto",{"_index":397,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["viewchild('chipinput",{"_index":393,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["visible",{"_index":931,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["void",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["want",{"_index":276,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["weight",{"_index":546,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["white",{"_index":993,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["width",{"_index":551,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["window.localstorage.getitem('token",{"_index":601,"title":{},"body":{"injectables/HttpService.html":{}}}],["window.localstorage.setitem('token",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["work",{"_index":925,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["working",{"_index":1162,"title":{},"body":{"classes/Task.html":{}}}],["wrapper",{"_index":688,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["xcenteroffset",{"_index":1016,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["yellow",{"_index":989,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["z",{"_index":730,"title":{},"body":{"components/NavbarComponent.html":{}}}],["zone.js",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogAddMemberComponent\n\nDialogAddMemberComponent\n\nAppModule -->\n\nDialogAddMemberComponent->AppModule\n\n\n\n\n\nDialogAddTaskComponent\n\nDialogAddTaskComponent\n\nAppModule -->\n\nDialogAddTaskComponent->AppModule\n\n\n\n\n\nDialogCreateProjectComponent\n\nDialogCreateProjectComponent\n\nAppModule -->\n\nDialogCreateProjectComponent->AppModule\n\n\n\n\n\nDialogRegistrationComponent\n\nDialogRegistrationComponent\n\nAppModule -->\n\nDialogRegistrationComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nAppModule -->\n\nProjectMembersComponent->AppModule\n\n\n\n\n\nProjectTasksComponent\n\nProjectTasksComponent\n\nAppModule -->\n\nProjectTasksComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserProjectsComponent\n\nUserProjectsComponent\n\nAppModule -->\n\nUserProjectsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DialogAddMemberComponent\n                        \n                        \n                            DialogAddTaskComponent\n                        \n                        \n                            DialogCreateProjectComponent\n                        \n                        \n                            DialogRegistrationComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            ProjectTasksComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserProjectsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogAddMemberComponent\n                        \n                        \n                            DialogAddTaskComponent\n                        \n                        \n                            DialogCreateProjectComponent\n                        \n                        \n                            DialogRegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogRegistrationComponent } from './dialogs/dialog-registration/dialog-registration.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n// tslint:disable-next-line:max-line-length\nimport { MatToolbarModule, MatGridListModule, MatAutocompleteModule, MatChipsModule, MatIconModule, MatDatepickerModule, MatNativeDateModule, MatSelectModule, MatSnackBar, MatSnackBarModule, MatDividerModule, MatCheckboxModule } from '@angular/material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UserProjectsComponent } from './user-projects/user-projects.component';\nimport { ProjectTasksComponent } from './project-tasks/project-tasks.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport { DialogCreateProjectComponent } from './dialogs/dialog-create-project/dialog-create-project.component';\nimport { DialogAddMemberComponent } from './dialogs/dialog-add-member/dialog-add-member.component';\nimport { DialogAddTaskComponent } from './dialogs/dialog-add-task/dialog-add-task.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    UserProfileComponent,\n    NavbarComponent,\n    UserProjectsComponent,\n    ProjectTasksComponent,\n    ProjectMembersComponent,\n    DialogRegistrationComponent,\n    DialogCreateProjectComponent,\n    DialogAddMemberComponent,\n    DialogAddTaskComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatIconModule,\n    MatDatepickerModule,\n    FormsModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    BrowserModule,\n    FormsModule,\n    MatDividerModule,\n    HttpClientModule,\n    MatCheckboxModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    DialogRegistrationComponent,\n    DialogCreateProjectComponent,\n    DialogAddMemberComponent,\n    DialogAddTaskComponent,\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ProjectTasksComponent } from './project-tasks/project-tasks.component';\nimport { UserProjectsComponent } from './user-projects/user-projects.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '',                       component: LoginFormComponent, },\n  { path: 'users/:uid/projects',    component: UserProjectsComponent,   canActivate: [AuthGuard] },\n  { path: 'users/:uid/profile',     component: UserProfileComponent,    canActivate: [AuthGuard] },\n  { path: 'projects/:pid/tasks',    component: ProjectTasksComponent,   canActivate: [AuthGuard] },\n  { path: 'projects/:pid/members',  component: ProjectMembersComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Router } from '@angular/router';\nimport { AuthenticationService } from './services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean {\n    if (this.authService.currentUser === null) {\n      this.router.navigate(['']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Authentication service.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Logs in the user with the given username and password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        An object, representing the logged in user.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:61\n                \n            \n\n\n            \n                \n                    Logs out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                        Represents the currently logged in user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { User } from 'src/app/classes/user';\nimport { HttpService } from './http.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Authentication service.\n *\n * @export\n * @class AuthenticationService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Represents the currently logged in user.\n   *\n   * @type {User}\n   * @memberof AuthenticationService\n   */\n  public currentUser: User = null;\n\n  /**\n   * @ignore\n   */\n  constructor(\n    private httpService: HttpService,\n    private router: Router\n  ) { }\n\n  /**\n   * Logs in the user with the given username and password.\n   *\n   * @param {string} username Username\n   * @param {string} password Password\n   * @returns {Promise} An object, representing the logged in user.\n   * @memberof AuthenticationService\n   */\n  public async login(username: string, password: string): Promise {\n    try {\n      const token = btoa(`${username}:${password}`);\n      window.localStorage.setItem('token', token);\n      this.currentUser = await this.httpService.post('users/login', username);\n      // this.currentUser = await this.httpService.get('users/1');\n      return Promise.resolve(this.currentUser);\n    } catch (e) {\n      console.log('LOGIN ERROR:', e);\n      this.currentUser = null;\n      window.localStorage.setItem('token', '');\n      return Promise.reject();\n    }\n  }\n\n  /**\n   * Logs out the user.\n   *\n   * @memberof AuthenticationService\n   */\n  public logout(): void {\n    this.currentUser = null;\n    window.localStorage.setItem('token', '');\n    this.router.navigate(['']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddMemberComponent.html":{"url":"components/DialogAddMemberComponent.html","title":"component - DialogAddMemberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogAddMemberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-add-member/dialog-add-member.component.ts\n\n\n    \n        Description\n    \n    \n        This component is responsible for \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-member\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-add-member.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-add-member.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignedUsers\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, projectService: ProjectService, data: Project)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of DialogAddMemberComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service. This service is responsible for the communication with the backend through the '/users/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Project service. This service is responsible for the communication with the backend through the '/projects/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Project\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data injected into this dialog. It contains the project object where we want to add members.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            assignedUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:32\n                            \n                        \n\n                \n                    \n                        List of users that are already assigned to the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:54\n                            \n                        \n\n                \n                    \n                        The data injected into this dialog. It contains the project object where we want to add members.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:41\n                            \n                        \n\n                \n                    \n                        List of all other (not assigned) users.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { User } from './../../classes/user';\nimport { Project } from './../../classes/projects';\nimport { ProjectService } from './../../services/project.service';\nimport { UserService } from './../../services/user.service';\n\n/**\n * This component is responsible for \n *\n * @export\n * @class DialogAddMemberComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-add-member',\n  templateUrl: './dialog-add-member.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-add-member.component.scss'\n  ]\n})\nexport class DialogAddMemberComponent implements OnInit {\n\n  /**\n   * List of users that are already assigned to the project.\n   *\n   * @private\n   * @type {User[]}\n   * @memberof DialogAddMemberComponent\n   */\n  private assignedUsers: User[];\n\n  /**\n   * List of all other (not assigned) users.\n   *\n   * @private\n   * @type {User[]}\n   * @memberof DialogAddMemberComponent\n   */\n  private users: User[];\n\n  /**\n   * Creates an instance of DialogAddMemberComponent.\n   * \n   * @param {UserService} userService User service. This service is responsible for the communication with the backend through the '/users/*' endpoints.\n   * @param {ProjectService} projectService Project service. This service is responsible for the communication with the backend through the '/projects/*' endpoints.\n   * @param {Project} data The data injected into this dialog. It contains the project object where we want to add members.\n   * @memberof DialogAddMemberComponent\n   */\n  constructor(\n    private userService: UserService,\n    private projectService: ProjectService,\n    @Inject(MAT_DIALOG_DATA) public data: Project\n  ) { }\n\n  async ngOnInit() {\n    this.users = await this.userService.getUsers();\n    this.assignedUsers = await this.projectService.getMembers(this.data.id);\n    this.users = this.users.filter(user => !(this.assignedUsers.map(aUser => aUser.id).includes(user.id)));\n  }\n}\n\n    \n\n    \n        \nÚj résztvevő felvétele\n\n\n\n  \n    \n        {{user.name}}\n    \n  \n\n\n\n\n  Mentés\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-add-member.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Új résztvevő felvétele              {{user.name}}        Mentés  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddMemberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddTaskComponent.html":{"url":"components/DialogAddTaskComponent.html","title":"component - DialogAddTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogAddTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-add-task/dialog-add-task.component.ts\n\n\n    \n        Description\n    \n    \n        The component of the 'Add tasks' dialog. This dialog provides a form \nwhere the project leader can give information (such as name, prerequisities and \nand required skills) about the new task in the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-task\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-add-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog-add-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _skill\n                            \n                            \n                                    Public\n                                _task\n                            \n                            \n                                    Public\n                                addBlurOn\n                            \n                            \n                                    Public\n                                allSkills\n                            \n                            \n                                chipInput\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                filteredOptions\n                            \n                            \n                                matAutocomplete\n                            \n                            \n                                    Public\n                                myControl\n                            \n                            \n                                    Public\n                                projectTasks\n                            \n                            \n                                    Public\n                                removable\n                            \n                            \n                                    Public\n                                selectable\n                            \n                            \n                                    Public\n                                separatorKeysCodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                    Public\n                                    Async\n                                addSkill\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                removeSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(skillService: SkillService, taskService: TaskService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:111\n                            \n                        \n\n                \n                    \n                            Creates an instance of DialogAddTaskComponent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        skillService\n                                                  \n                                                        \n                                                                        SkillService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Skill service. This service is responsible for the communication\nwith the backend through the '/skills/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Task service. This service is responsible for the communication\nwith the backend through the '/tasks/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:145\n                \n            \n\n\n            \n                \n                    Filters the options of the skill autocomplete combobox. This function is called\nafter every keypress.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value of the input field. Elements of the final list will match this string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        The filtered list. It contains the names of those skills that matches the parameter.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSkill(event: MatChipInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:164\n                \n            \n\n\n            \n                \n                    Adds a skill to the task's skill requirements.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatChipInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSkill(skillToRemove: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:186\n                \n            \n\n\n            \n                \n                    Removes a skill from the task's skill requirements.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillToRemove\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _skill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:64\n                            \n                        \n\n                \n                    \n                        Temporary skill object. It is used in the registration process of the \nnew required skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:55\n                            \n                        \n\n                \n                    \n                        Temporary object of the new task. This will be provided to the backend.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addBlurOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:108\n                            \n                        \n\n                \n                    \n                        Fuck knows...???\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allSkills\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:47\n                            \n                        \n\n                \n                    \n                        List of all skills of all users that have ever registered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chipInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chipInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:93\n                            \n                        \n\n                \n                    \n                        Async list of the skill combobox options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('auto')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            myControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:85\n                            \n                        \n\n                \n                    \n                        Form control object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of all tasks in the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:78\n                            \n                        \n\n                \n                    \n                        Property of the Material chip list of skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:71\n                            \n                        \n\n                \n                    \n                        Property of the Material chip list of skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            separatorKeysCodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [ENTER, COMMA]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:101\n                            \n                        \n\n                \n                    \n                        Separators of the different skills in the input field.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { startWith, map } from 'rxjs/operators';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { SkillService } from './../../services/skill.service';\nimport { Skill } from './../../classes/skill';\nimport { TaskService } from './../../services/task.service';\nimport { MAT_DIALOG_DATA, MatAutocomplete, MatChipInputEvent } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { Task } from 'src/app/classes/task';\nimport { Project } from 'src/app/classes/projects';\nimport { ProjectService } from 'src/app/services/project.service';\n\n/**\n * The component of the 'Add tasks' dialog. This dialog provides a form \n * where the project leader can give information (such as name, prerequisities and \n * and required skills) about the new task in the project.\n *\n * @export\n * @class DialogAddTaskComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-add-task',\n  templateUrl: './dialog-add-task.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-add-task.component.css'\n  ]\n})\nexport class DialogAddTaskComponent implements OnInit {\n\n  /**\n   * List of all tasks in the project.\n   *\n   * @type {Task[]}\n   * @memberof DialogAddTaskComponent\n   */\n  public projectTasks: Task[];\n\n  /**\n   * List of all skills of all users that have ever registered.\n   *\n   * @type {Skill[]}\n   * @memberof DialogAddTaskComponent\n   */\n  public allSkills: Skill[] = [];\n\n  /**\n   * Temporary object of the new task. This will be provided to the backend.\n   *\n   * @type {Task}\n   * @memberof DialogAddTaskComponent\n   */\n  public _task: Task;\n\n  /**\n   * Temporary skill object. It is used in the registration process of the \n   * new required skills.\n   *\n   * @type {Skill}\n   * @memberof DialogAddTaskComponent\n   */\n  public _skill: Skill;\n\n  /**\n   * Property of the Material chip list of skills.\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public selectable = true;\n\n  /**\n   * Property of the Material chip list of skills.\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public removable = true;\n\n  /**\n   * Form control object.\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public myControl = new FormControl();\n\n  /**\n   * Async list of the skill combobox options.\n   *\n   * @type {Observable}\n   * @memberof DialogAddTaskComponent\n   */\n  public filteredOptions: Observable;\n\n  /**\n   * Separators of the different skills in the input field.\n   *\n   * @type {number[]}\n   * @memberof DialogAddTaskComponent\n   */\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  /**\n   * Fuck knows...???\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public addBlurOn = true;\n\n  @ViewChild('chipInput') chipInput: ElementRef;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  /**\n   * Creates an instance of DialogAddTaskComponent. \n   * \n   * @param {SkillService} skillService\n   *  Skill service. This service is responsible for the communication\n   *  with the backend through the '/skills/*' endpoints.\n   * @param {TaskService} taskService\n   *  Task service. This service is responsible for the communication\n   *  with the backend through the '/tasks/*' endpoints.\n   * @param {{ project: Project, tasks: Task[] }} data\n   * @memberof DialogAddTaskComponent\n   */\n  constructor(\n    private skillService: SkillService,\n    private taskService: TaskService,\n    @Inject(MAT_DIALOG_DATA) public data: { project: Project, tasks: Task[] }\n  ) {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(null),\n      map((src: string | null) => src ? this._filter(src) : this.allSkills.map(skill => skill.name))\n    );\n  }\n\n  /**\n   * Filters the options of the skill autocomplete combobox. This function is called\n   * after every keypress.\n   *\n   * @private\n   * @param {string} value The value of the input field. Elements of the final list will match this string.\n   * @returns {string[]} The filtered list. It contains the names of those skills that matches the parameter.\n   * @memberof DialogAddTaskComponent\n   */\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.allSkills.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0).map(skill => skill.name);\n  }\n\n  async ngOnInit() {\n    this._task = new Task();\n    this._task.projectId = this.data.project.id;\n    const allTasks: Task[] = await this.taskService.getTasks();\n    this.projectTasks = allTasks.filter(task => task.project.id === this.data.project.id);\n    this.allSkills = await this.skillService.getAllSkills();\n  }\n\n  /**\n   * Adds a skill to the task's skill requirements.\n   *\n   * @param {MatChipInputEvent} event\n   * @memberof DialogAddTaskComponent\n   */\n  public async addSkill(event: MatChipInputEvent) {\n    if (!this.matAutocomplete.isOpen) {\n      const input = event.input;\n      const value = event.value;\n\n      let _skill = this.allSkills.find(item => item.name === value);\n\n      if (_skill === undefined) {\n        _skill = new Skill(value);\n        _skill = await this.skillService.addNewSkill(_skill);\n      }\n\n      this._task.requiredSkills.push(_skill.id);\n    }\n  }\n\n  /**\n   * Removes a skill from the task's skill requirements.\n   *\n   * @param {Skill} skillToRemove\n   * @memberof DialogAddTaskComponent\n   */\n  public async removeSkill(skillToRemove: Skill) {\n    this._task.requiredSkills = this._task.requiredSkills.filter(skill => skill !== skillToRemove.id);\n  }\n}\n\n    \n\n    \n        \nÚj feladat felvétele\n\n\n\n  \n    \n  \n\n  \n    \n      {{task.name}}\n    \n  \n\n  \n\n    \n      \n        {{ skill.name }}\n        cancel\n      \n    \n\n    \n\n    \n      \n        {{option}}\n      \n    \n\n  \n\n  Nyílt feladat?\n\n\n\n\n  Mentés\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-add-task.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Új feladat felvétele                    {{task.name}}                          {{ skill.name }}        cancel                                {{option}}              Nyílt feladat?  Mentés  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogCreateProjectComponent.html":{"url":"components/DialogCreateProjectComponent.html","title":"component - DialogCreateProjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogCreateProjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-create-project/dialog-create-project.component.ts\n\n\n    \n        Description\n    \n    \n        The component of the 'New project' dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-create-project\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-create-project.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-create-project.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                projectName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-create-project/dialog-create-project.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-create-project/dialog-create-project.component.ts:27\n                            \n                        \n\n                \n                    \n                        Name of the new project.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef } from '@angular/material';\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * The component of the 'New project' dialog.\n *\n * @export\n * @class DialogCreateProjectComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-create-project',\n  templateUrl: './dialog-create-project.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-create-project.component.scss'\n  ]\n})\nexport class DialogCreateProjectComponent implements OnInit {\n\n  /**\n   * Name of the new project.\n   *\n   * @type {string}\n   * @memberof DialogCreateProjectComponent\n   */\n  public projectName: string;\n\n  /**\n   * Creates an instance of DialogCreateProjectComponent.\n   * \n   * @ignore\n   * @param {MatDialogRef} dialogRef\n   * @memberof DialogCreateProjectComponent\n   */\n  constructor(private dialogRef: MatDialogRef) { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \nÚj project felvétele\n\n\n  \n    \n  \n\n\n\n  Mentés\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-create-project.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Új project felvétele          Mentés  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogCreateProjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogRegistrationComponent.html":{"url":"components/DialogRegistrationComponent.html","title":"component - DialogRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-registration/dialog-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the registration dialog. The dialog contains a registration form where\nthe user can add the required information (full name, username and password) for \nthe registration process.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-registration\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                passwd\n                            \n                            \n                                    Public\n                                passwd2\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                validateRegForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, snackBar: MatSnackBar, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validateRegForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRegForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:82\n                \n            \n\n\n            \n                \n                    Registration form validator function. It checks if all data fields are filled\nand the 2 passwords match. If any of these criterias are not met it pops up an\nerror message and returns.\nOtherwise it sends the data to the backend and depending on the servers answer\nit pops up a verification or error message.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:36\n                            \n                        \n\n                \n                    \n                        Full name of the new user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                        Password of the new user. This is going to be used for authentication during the login process.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passwd2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:60\n                            \n                        \n\n                \n                    \n                        User password again for verification purposes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Username of the new user. This is going to be used for authentication during the login process.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/classes/user';\n\nexport interface RegistrationData {\n  name: string;\n  email: string;\n}\n\n/**\n * Component of the registration dialog. The dialog contains a registration form where\n * the user can add the required information (full name, username and password) for \n * the registration process.\n *\n * @export\n * @class DialogRegistrationComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-registration',\n  templateUrl: './dialog-registration.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-registration.component.scss'\n  ]\n})\nexport class DialogRegistrationComponent implements OnInit {\n\n  /**\n   * Full name of the new user.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public name: string;\n\n  /**\n   * Username of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public userName: string;\n\n  /**\n   * Password of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd: string;\n\n  /**\n   * User password again for verification purposes.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd2: string;\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.name = this.userName = this.passwd = this.passwd2 = '';\n  }\n\n  /**\n   * Registration form validator function. It checks if all data fields are filled\n   * and the 2 passwords match. If any of these criterias are not met it pops up an\n   * error message and returns.\n   * Otherwise it sends the data to the backend and depending on the servers answer\n   * it pops up a verification or error message.\n   *\n   * @returns\n   * @memberof DialogRegistrationComponent\n   */\n  public async validateRegForm() {\n\n    if (!this.name.length || !this.userName.length || !this.passwd.length) {\n      this.snackBar.open('Minden adatot meg kell adni!', 'HIBA', { duration: 2000 });\n      return;\n    } else if (this.passwd !== this.passwd2) {\n      this.snackBar.open('A két jelszó nem egyezik meg!', 'HIBA', { duration: 2000 });\n      return;\n    }\n\n    const _user = new User(this.name, this.userName, this.passwd);\n\n    try {\n      await this.userService.registerUser(_user);\n      this.snackBar.open('Sikeres regisztráció.', '', { duration: 2000 });\n      this.dialogRef.close();\n    } catch {\n      this.snackBar.open('Sikertelen regisztráció!', 'HIBA', { duration: 2000 });\n    }\n  }\n}\n\n    \n\n    \n        \nRegisztráció\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n\n  Regisztráció\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-registration.component.scss\n                \n                \nh1 {\n  font-family: \"Raleway\";\n  font-size: 36px;\n  font-weight: 300;\n  text-align: center;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\nbutton {\n  font-size: 20px;\n}\n\n#btn-reg-register:hover {\n  background-color: #cd5555;\n  color: #ffffff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Regisztráció                                  Regisztráció  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is responsible for communication with the backend via REST API.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(route: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:103\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a DELETE request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(route: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:48\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a GET request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(route: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:90\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a PATCH request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the HTTP request. (Stringified JSON.)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(route: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a POST request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the HTTP request. (Stringified JSON.)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(route: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a PUT request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the HTTP request. (Stringified JSON.)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/http.service.ts:36\n                            \n                        \n\n                \n                    \n                        URL of the backend server.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/http.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n/**\n * This service is responsible for communication with the backend via REST API.\n *\n * @export\n * @class HttpService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private get options() {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n\n    if (window.localStorage.getItem('token')) {\n      headers['Authorization'] = `Basic ${window.localStorage.getItem('token')}`;\n    }\n\n    return {\n      headers: new HttpHeaders(headers)\n    };\n  }\n\n  /**\n   * URL of the backend server.\n   *\n   * @private\n   * @memberof HttpService\n   */\n  private URL = 'http://localhost:8080/';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Sends a GET request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public get(route: string): Promise {\n    return this.httpClient.get(this.URL + route, this.options)\n    .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a POST request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @param {string} body The body of the HTTP request. (Stringified JSON.)\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public post(route: string, body: string): Promise {\n    return this.httpClient.post(this.URL + route, body, this.options)\n      .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a PUT request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @param {string} body The body of the HTTP request. (Stringified JSON.)\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public put(route: string, body: string): Promise {\n    return this.httpClient.put(this.URL + route, body, this.options)\n      .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a PATCH request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @param {string} body The body of the HTTP request. (Stringified JSON.)\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public patch(route: string, body: string): Promise {\n    return this.httpClient.patch(this.URL + route, body, this.options)\n      .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a DELETE request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public delete(route: string): Promise {\n    return this.httpClient.delete(this.URL + route, this.options)\n      .toPromise() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        The component of the login form. It has 2 very simple duty: it sends the \nauthentication data (username, password) to the backend, or opens up the\nregistration dialog if requested.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                openRegDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, router: Router, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-form/login-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:49\n                \n            \n\n\n            \n                \n                    The event handler of the login form's submit event. It takes the username and\npassword from the input fields and send them to the backend through the \n'authService' service. If the login process is successful it sets the \nrouting module's path to the user's project page. Otherwise it pops up an\nerror message.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openRegDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openRegDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:72\n                \n            \n\n\n            \n                \n                    Opens up the registration dialog if the 'Registration' button is clicked.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogRegistrationComponent } from './../dialogs/dialog-registration/dialog-registration.component';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AuthenticationService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * The component of the login form. It has 2 very simple duty: it sends the \n * authentication data (username, password) to the backend, or opens up the\n * registration dialog if requested.\n *\n * @export\n * @class LoginFormComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n  private loginForm: FormGroup;\n\n  constructor(\n    public dialog: MatDialog,\n    private authService: AuthenticationService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() { }\n\n  /**\n   * The event handler of the login form's submit event. It takes the username and\n   * password from the input fields and send them to the backend through the \n   * 'authService' service. If the login process is successful it sets the \n   * routing module's path to the user's project page. Otherwise it pops up an\n   * error message.\n   *\n   * @memberof LoginFormComponent\n   */\n  async onSubmit() {\n    // console.log(await this.authService.login('', ''));\n    // this.router.navigate([`/users/${this.authService.currentUser.id}/projects`]);\n\n    // if (this.loginForm.valid) {\n      const username = this.loginForm.get('username').value;\n      const password = this.loginForm.get('password').value;\n\n      try {\n        await this.authService.login(username, password);\n        // await this.authService.login('atesz', 'a');\n        this.router.navigate([`/users/${this.authService.currentUser.id}/projects`]);\n      } catch {\n        this.snackBar.open('SIKERTELEN BEJELENTKEZÉS!', 'HIBA', { duration: 2000 });\n      }\n    // }\n  }\n\n  /**\n   * Opens up the registration dialog if the 'Registration' button is clicked.\n   *\n   * @memberof LoginFormComponent\n   */\n  public openRegDialog(): void {\n    const dialogRef = this.dialog.open(DialogRegistrationComponent, {\n      width: '350px'\n    });\n  }\n}\n\n    \n\n    \n        \nSajtoslaska v0.0.1 pre-alpha\n\n\n\n  Bejelentkezés\n\n  \n\n    \n      \n    \n\n    \n      \n    \n\n    BEJELENTKEZÉS\n    \n      vagy\n      Regisztráció\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                \nh1 {\n  font-size: 60px;\n  font-weight: 300;\n  text-align: center;\n  color: rgba(255,255,255,0.3);\n  margin-top: 0;\n\n  span {\n    font-size: 36px;\n  }\n}\n\n#login-form {\n\n  background-color: rgba(255,255,255,0.15);\n  width: 300px;\n  padding: 30px;\n  border-radius: 20px;\n  margin: auto;\n\n  h2 {\n    font-weight: 300;\n    text-align: center;\n    font-size: 40px;\n    margin-top: 10px;\n    text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n  }\n\n  #btn-login {\n    width: 100%;\n    background-color: rgba(0,0,0,0.1);\n    color: #222222;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 6px;\n    margin-top: 25px;\n\n    &:hover {\n      background-color: #336699;\n      color: #ffffff;\n    }\n  }\n\n  #reg-btn-wrapper {\n    margin-top: 20px;\n    text-align: center;\n\n    span {\n      font-weight: bold;\n      cursor: pointer;\n\n      &:hover {\n        color: #336699;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sajtoslaska v0.0.1 pre-alpha  Bejelentkezés                                  BEJELENTKEZÉS          vagy      Regisztráció      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        This component represents the top navigation bar in the app.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pid\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Initializes the two variables (uid, pid) from the routing path.\nOne of them will always be NULL.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                        Routing parameter: project ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Routing parameter: user ID.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/auth.service';\n\n/**\n * This component represents the top navigation bar in the app.\n *\n * @export\n * @class NavbarComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  /**\n   * Routing parameter: user ID.\n   *\n   * @type {number}\n   * @memberof NavbarComponent\n   */\n  public uid: number;\n\n  /**\n   * Routing parameter: project ID.\n   *\n   * @type {number}\n   * @memberof NavbarComponent\n   */\n  public pid: number;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   * \n   * @ignore\n   * @param {AuthenticationService} authService\n   * @param {ActivatedRoute} route\n   * @memberof NavbarComponent\n   */\n  constructor(\n    public authService: AuthenticationService,\n    private route: ActivatedRoute\n  ) { }\n\n  /**\n   * Initializes the two variables (uid, pid) from the routing path.\n   * One of them will always be NULL.\n   *\n   * @memberof NavbarComponent\n   */\n  ngOnInit() {\n    this.pid = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.uid = parseInt(this.route.snapshot.paramMap.get('uid'), 10);\n  }\n}\n\n    \n\n    \n        \n\n\n  Üdv {{authService.currentUser.name}}\n\n  Projectek\n  Profil\n\n  \n    keyboard_backspace\n  \n  Szerkesztés\n  Felhasználók\n\n  \n\n  Kilépés\n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                \nmat-toolbar {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 4px rgba(0,0,0,0.6);\n  z-index: 1;\n\n  h2 {\n    margin-right: 70px;\n    margin-left: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Üdv {{authService.currentUser.name}}  Projectek  Profil      keyboard_backspace    Szerkesztés  Felhasználók    Kilépés'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/projects.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a project.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deadline\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                leader\n                            \n                            \n                                    Public\n                                leaderId\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                tasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, leaderId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/projects.ts:65\n                            \n                        \n\n                \n                    \n                            Creates an instance of Project.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of the project.\n\n                                                        \n                                                \n                                                \n                                                        leaderId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User ID of the project owner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:65\n                            \n                        \n\n                \n                    \n                        Date of project's deadline.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:17\n                            \n                        \n\n                \n                    \n                        Project ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            leader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:33\n                            \n                        \n\n                \n                    \n                        The owner of the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            leaderId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:41\n                            \n                        \n\n                \n                    \n                        ???\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:49\n                            \n                        \n\n                \n                    \n                        IDs of project members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:25\n                            \n                        \n\n                \n                    \n                        Name of the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:57\n                            \n                        \n\n                \n                    \n                        IDs of tasks associated with the project.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\n\n/**\n * Representation of a project.\n *\n * @export\n * @class Project\n */\nexport class Project {\n  \n  /**\n   * Project ID.\n   *\n   * @type {number}\n   * @memberof Project\n   */\n  public id: number;\n\n  /**\n   * Name of the project.\n   *\n   * @type {string}\n   * @memberof Project\n   */\n  public name: string;\n\n  /**\n   * The owner of the project.\n   *\n   * @type {User}\n   * @memberof Project\n   */\n  public leader: User;\n\n  /**\n   * ???\n   *\n   * @type {number}\n   * @memberof Project\n   */\n  public leaderId: number;\n\n  /**\n   * IDs of project members.\n   *\n   * @type {number[]}\n   * @memberof Project\n   */\n  public members: number[];\n\n  /**\n   * IDs of tasks associated with the project.\n   *\n   * @type {number[]}\n   * @memberof Project\n   */\n  public tasks: number[];\n\n  /**\n   * Date of project's deadline.\n   *\n   * @type {Date}\n   * @memberof Project\n   */\n  public deadline: Date;\n\n  /**\n   * Creates an instance of Project.\n   * \n   * @param {string} name Name of the project.\n   * @param {number} leaderId User ID of the project owner.\n   * @memberof Project\n   */\n  constructor(name: string, leaderId: number) {\n    this.name = name;\n    this.leaderId = leaderId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the project members page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignedUsers\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                selectedUser\n                            \n                            \n                                    Public\n                                userOwnProjects\n                            \n                            \n                                    Public\n                                userProjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                openAddMemberDialog\n                            \n                            \n                                    Public\n                                    Async\n                                removeUser\n                            \n                            \n                                    Public\n                                    Async\n                                selectUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UserService, projectService: ProjectService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openAddMemberDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openAddMemberDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:87\n                \n            \n\n\n            \n                \n                    Opens up a dialog where the project owner can select which members should be added\nto the project.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:124\n                \n            \n\n\n            \n                \n                    Removes a user from the project's members list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            selectUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:110\n                \n            \n\n\n            \n                \n                    Definitely does something but what????\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Some sort of user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignedUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of the already assigned project members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                    \n                        \n                            Default value : new Project('', 0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:34\n                            \n                        \n\n                \n                    \n                        The project where we want to add/remove members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:50\n                            \n                        \n\n                \n                    \n                        ???\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userOwnProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:58\n                            \n                        \n\n                \n                    \n                        List of the users own projects.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:66\n                            \n                        \n\n                \n                    \n                        List of projects where the user contributes.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { DialogAddMemberComponent } from './../dialogs/dialog-add-member/dialog-add-member.component';\nimport { MatDialog } from '@angular/material';\nimport { ProjectService } from './../services/project.service';\nimport { User } from './../classes/user';\nimport { UserService } from './../services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Project } from '../classes/projects';\nimport { select } from 'd3';\n\n/**\n * Component of the project members page.\n *\n * @export\n * @class ProjectMembersComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './project-members.component.scss'\n  ]\n})\nexport class ProjectMembersComponent implements OnInit {\n\n  /**\n   * The project where we want to add/remove members.\n   *\n   * @type {Project}\n   * @memberof ProjectMembersComponent\n   */\n  public project: Project = new Project('', 0);\n\n  /**\n   * List of the already assigned project members.\n   *\n   * @type {User[]}\n   * @memberof ProjectMembersComponent\n   */\n  public assignedUsers: User[];\n  \n  /**\n   * ???\n   *\n   * @type {User}\n   * @memberof ProjectMembersComponent\n   */\n  public selectedUser: User;\n\n  /**\n   * List of the users own projects.\n   *\n   * @type {Project[]}\n   * @memberof ProjectMembersComponent\n   */\n  public userOwnProjects: Project[];\n\n  /**\n   * List of projects where the user contributes.\n   *\n   * @type {Project[]}\n   * @memberof ProjectMembersComponent\n   */\n  public userProjects: Project[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private projectService: ProjectService,\n    public dialog: MatDialog\n  ) { }\n\n  async ngOnInit() {\n    const projectId: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.project = await this.projectService.getProject(projectId);\n    this.assignedUsers = await this.projectService.getMembers(projectId);\n  }\n\n  /**\n   * Opens up a dialog where the project owner can select which members should be added\n   * to the project.\n   *\n   * @memberof ProjectMembersComponent\n   */\n  public openAddMemberDialog(): void {\n    const dialogRef = this.dialog.open(DialogAddMemberComponent, {\n      width: '350px',\n      data: this.project\n    });\n\n    dialogRef.afterClosed().subscribe(async selectedUser => {\n      console.log(selectedUser);\n\n      if (!selectedUser) { return; }\n      console.log(await this.projectService.addMember(this.project.id, selectedUser));\n      const projectId: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n      this.project = await this.projectService.getProject(projectId);\n      this.assignedUsers = await this.projectService.getMembers(projectId);\n      });\n  }\n\n  /**\n   * Definitely does something but what????\n   *\n   * @param {User} user Some sort of user.\n   * @memberof ProjectMembersComponent\n   */\n  public async selectUser(user: User) {\n    this.selectedUser = user;\n    this.userProjects = await this.projectService.getAllProjects();\n//    this.userProjects = this.userProjects.filter(project => project.members.includes(user.id));\n\n    // this.projectService.getUserProjects(user.id).subscribe(projects => this.userProjects = projects);\n    // this.projectService.getUserOwnProjects(user.id).subscribe(projects => this.userOwnProjects = projects);\n  }\n\n  /**\n   * Removes a user from the project's members list.\n   *\n   * @memberof ProjectMembersComponent\n   */\n  public async removeUser() {\n    await this.projectService.removeMember(this.project.id, this.selectedUser.username);\n    const projectId: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.project = await this.projectService.getProject(projectId);\n    this.assignedUsers = await this.projectService.getMembers(projectId);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  Project: {{project.name}}\n\n  \n\n    \n      Résztvevők:\n      add\n    \n\n    \n\n      \n\n        \n            {{user.name}}\n        \n\n      \n\n    \n\n  \n\n  \n\n    \n      {{selectedUser.name}}\n      [ {{selectedUser.username}} ]\n      delete\n    \n\n    \n\n      \n        \n            Saját projectek:\n        \n        \n          \n            {{project.name}}\n          \n        \n      \n\n      \n        \n            Részvétel projectekben:\n        \n        \n          \n            {{project.name}}\n          \n        \n      \n\n    \n\n  \n\n   -->\n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./project-members.component.scss\n                \n                \nh1 {\n  padding-left: 30px;\n  font-size: 40px;\n  color: rgba(255,255,255,0.5);\n  margin-top: 40px;\n}\n\n#member-list {\n\n  mat-card-subtitle {\n    margin: -24px 0 30px;\n    font-size: 16px;\n    opacity: 0.8;\n  }\n\n  > mat-card-content {\n\n    mat-card {\n      box-sizing: border-box;\n      width: calc(50% - 10px);\n      margin: 0 20px 20px 0;\n      float: left;\n      cursor: pointer;\n\n      &:nth-child(2n) {\n        margin-right: 0;\n      }\n\n      &:nth-last-child(1),\n      &:nth-last-child(2) {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n#member-details {\n\n  > mat-card-content {\n\n    mat-card {\n      box-sizing: border-box;\n      width: 100%;\n      margin-bottom: 20px;\n\n      &:nth-last-child(1) {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Project: {{project.name}}            Résztvevők:      add                                  {{user.name}}                                {{selectedUser.name}}      [ {{selectedUser.username}} ]      delete                                  Saját projectek:                                      {{project.name}}                                                  Részvétel projectekben:                                      {{project.name}}                                 -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project.service.ts\n        \n\n            \n                Description\n            \n            \n                This service provides an easy-to-use access to the backend's '/project/*' endpoints.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMember\n                            \n                            \n                                    Public\n                                addNewProject\n                            \n                            \n                                    Public\n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                getAllProjects\n                            \n                            \n                                    Public\n                                getMembers\n                            \n                            \n                                    Public\n                                getProject\n                            \n                            \n                                    Public\n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMember\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMember(projectID: number, member: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    member\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNewProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject(projectID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMembers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMembers(projectID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProject(projectID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeMember\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMember(projectID: number, memberName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    memberName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'projects/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Project } from './../classes/projects';\nimport { HttpService } from './http.service';\nimport { User } from '../classes/user';\n\n/**\n * This service provides an easy-to-use access to the backend's '/project/*' endpoints.\n *\n * @export\n * @class ProjectService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  /**\n   * \n   *\n   * @private\n   * @memberof ProjectService\n   */\n  private route = 'projects/';\n\n  /**\n   * Creates an instance of ProjectService.\n   * \n   * @ignore\n   * @param {HttpService} httpService\n   * @memberof ProjectService\n   */\n  constructor(private httpService: HttpService) { }\n\n  public getAllProjects(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public addNewProject(project: Project): Promise {\n    const json = JSON.stringify(project);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public getProject(projectID: number): Promise {\n    return this.httpService.get(this.route + projectID);\n  }\n\n  public deleteProject(projectID: number): Promise {\n    return this.httpService.delete(this.route + projectID);\n  }\n\n  public editProject(project: Project): Promise {\n    const json = JSON.stringify(project);\n    return this.httpService.put(this.route + 'edit/' + project.id, json);\n  }\n\n  public getMembers(projectID: number): Promise {\n    return this.httpService.get(this.route + projectID + '/members');\n  }\n\n  public addMember(projectID: number, member: User): Promise {\n    const json = JSON.stringify(member);\n    console.log(json);\n\n    return this.httpService.post(this.route + projectID + '/addMember/', json);\n  }\n\n  public removeMember(projectID: number, memberName: string): Promise {\n    return this.httpService.post(this.route + projectID + '/removeMember/0', `{\"username\": \"${memberName}\"}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTasksComponent.html":{"url":"components/ProjectTasksComponent.html","title":"component - ProjectTasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tasks/project-tasks.component.ts\n\n\n    \n        Description\n    \n    \n        This is the key part of the app. This component is responsible for the \ntask management (dependency tree, etc.) in a project.\nNOTE: This component is still being  implemented.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tasks\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./project-tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateToString\n                            \n                            \n                                    Private\n                                graph\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Private\n                                render\n                            \n                            \n                                    Public\n                                selectedTask\n                            \n                            \n                                    Private\n                                svg\n                            \n                            \n                                    Public\n                                tasks\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTask\n                            \n                            \n                                    Public\n                                    Async\n                                beginTask\n                            \n                            \n                                    Private\n                                checkAvailability\n                            \n                            \n                                    Public\n                                deleteBtnVisibility\n                            \n                            \n                                    Public\n                                    Async\n                                deleteTask\n                            \n                            \n                                    Public\n                                    Async\n                                endTask\n                            \n                            \n                                    Private\n                                    Async\n                                initGraph\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                nodeClicker\n                            \n                            \n                                    Public\n                                startBtnVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, projectService: ProjectService, taskService: TaskService, userService: UserService, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tasks/project-tasks.component.ts:101\n                            \n                        \n\n                \n                    \n                            Creates an instance of ProjectTasksComponent.\nSets the reference to a global helper function and initializes the\n'project' variable.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:246\n                \n            \n\n\n            \n                \n                    Adds a task to the project. It opens up a dialog ({DialogAddTaskComponent})\nwhere the project leader can provide the properties of the new task.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            beginTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beginTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:295\n                \n            \n\n\n            \n                \n                    \"Begins\" the selected task. This is an event handler for the \"Begin task\" button.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkAvailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAvailability(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:230\n                \n            \n\n\n            \n                \n                    Checks if a task is available for project member to work on.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The task which is being checked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns TRUE if all prerequisites of the given task are completed.\nOtherwise returns FALSE.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteBtnVisibility\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBtnVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:322\n                \n            \n\n\n            \n                \n                    Determines that the \"Delete task\" button is visible or not. (The task is deletable or not.)\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:272\n                \n            \n\n\n            \n                \n                    Deletes the selected task from the project. A task can only be deleted,\nif it has not yet been started.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            endTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    endTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:310\n                \n            \n\n\n            \n                \n                    \"Ends\" the selected task. This is an event handler for the \"End task\" button.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            initGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:142\n                \n            \n\n\n            \n                \n                    Initializes the task dependency graph.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nodeClicker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nodeClicker(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:285\n                \n            \n\n\n            \n                \n                    'onClick' event handler for the nodes of the task dependecy tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Node ID.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startBtnVisibility\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startBtnVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:336\n                \n            \n\n\n            \n                \n                    Determines that the \"Begin task\" button is visible or not.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateToString\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to a global function.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graph\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:61\n                            \n                        \n\n                \n                    \n                        Graph component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:77\n                            \n                        \n\n                \n                    \n                        The project which is currently managed by its owner.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            render\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:53\n                            \n                        \n\n                \n                    \n                        DagreD3 renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:93\n                            \n                        \n\n                \n                    \n                        This variable holds the selected task which is being edited.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            svg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:69\n                            \n                        \n\n                \n                    \n                        The SVG DOM element where DagreD3 can render.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:85\n                            \n                        \n\n                \n                    \n                        List of all tasks that belong to this project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Skill } from './../classes/skill';\nimport { AuthenticationService } from './../services/auth.service';\n// import { User } from 'src/app/classes/user';\nimport { DialogAddTaskComponent } from './../dialogs/dialog-add-task/dialog-add-task.component';\nimport { MatDialog } from '@angular/material';\nimport { Task } from './../classes/task';\nimport { TaskService } from './../services/task.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Project } from '../classes/projects';\nimport { ProjectService } from '../services/project.service';\nimport * as d3 from 'd3';\nimport * as dagreD3 from 'dagre-d3';\nimport { UserService } from '../services/user.service';\nimport { dateToString } from '../globals';\nimport { User } from '../classes/user';\n\n/**\n * This is the key part of the app. This component is responsible for the \n * task management (dependency tree, etc.) in a project.\n * \n * NOTE: This component is still being  implemented.\n *\n * @export\n * @class ProjectTasksComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-project-tasks',\n  templateUrl: './project-tasks.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './project-tasks.component.scss'\n  ]\n})\nexport class ProjectTasksComponent implements OnInit {\n\n  /**\n   * Reference to a global function.\n   *\n   * @public\n   * @memberof ProjectTasksComponent\n   */\n  public dateToString;\n\n  /**\n   * DagreD3 renderer.\n   *\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private render;\n\n  /**\n   * Graph component.\n   *\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private graph;\n\n  /**\n   * The SVG DOM element where DagreD3 can render.\n   *\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private svg;\n\n  /**\n   * The project which is currently managed by its owner.\n   *\n   * @type {Project}\n   * @memberof ProjectTasksComponent\n   */\n  public project: Project;\n\n  /**\n   * List of all tasks that belong to this project.\n   *\n   * @type {Task[]}\n   * @memberof ProjectTasksComponent\n   */\n  public tasks: Task[];\n\n  /**\n   * This variable holds the selected task which is being edited.\n   *\n   * @type {Task}\n   * @memberof ProjectTasksComponent\n   */\n  public selectedTask: Task;\n\n  /**\n   * \n   *\n   * @type {User[]}\n   * @memberof ProjectTasksComponent\n   */\n  public users: User[];\n\n  /**\n   * Creates an instance of ProjectTasksComponent.\n   * Sets the reference to a global helper function and initializes the\n   * 'project' variable.\n   * \n   * @param {ActivatedRoute} route\n   * @param {ProjectService} projectService\n   * @param {TaskService} taskService\n   * @param {UserService} userService\n   * @param {AuthenticationService} authService\n   * @param {MatDialog} dialog\n   * @memberof ProjectTasksComponent\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private projectService: ProjectService,\n    private taskService: TaskService,\n    private userService: UserService,\n    private authService: AuthenticationService,\n    private dialog: MatDialog\n  ) {\n    this.dateToString = dateToString;\n    this.project = new Project('', 0);\n  }\n\n  async ngOnInit() {\n    this.svg = d3.select('svg');\n    this.render = new dagreD3.render();\n\n    this.initGraph();\n  }\n\n  /**\n   * Initializes the task dependency graph.\n   *\n   * @private\n   * @returns\n   * @memberof ProjectTasksComponent\n   */\n  private async initGraph() {\n\n    const projectID: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.project = await this.projectService.getProject(projectID);\n    if (this.project.tasks === undefined) {\n      this.project.tasks = [];\n    }\n\n    console.log('PROJECT:', this.project);\n\n    const allTasks: Task[] = await this.taskService.getTasks();\n    this.tasks = allTasks.filter(task => task.project.id === this.project.id);\n\n    console.log('PROJECT TASKS:', this.tasks);\n\n    this.graph = new dagreD3.graphlib.Graph().setGraph({});\n\n    if (!this.tasks.length) {\n      return;\n    }\n\n    this.tasks.forEach(task => {\n      let fillColor = '#cd5555';  // Not available (red)\n      let textColor = '#ffffff';\n\n      task.state = 0;\n\n      if (task.complete) {  // Completed (green)\n        fillColor = '#0b6623';\n        task.state = 3;\n      } else if (task.startTime != null  && !task.complete) {  // In progress (yellow)\n        fillColor = '#ffcc00';\n        textColor = '#000000';\n        task.state = 2;\n      } else if (this.checkAvailability(task)) {  // Available to work on (white)\n        fillColor = '#ffffff';\n        textColor = '#000000';\n        task.state = 1;\n      }\n\n      this.graph.setNode(task.id, {\n        label: task.name,\n        labelStyle:\n          'font-weight: 300;'\n          + 'font-size: 16px;'\n          + 'font-family: \"Roboto Condensed\";'\n          + 'cursor: pointer;'\n          + 'fill: ' + textColor,\n        style:\n          'stroke: #000;'\n          + 'stroke-width: 2px;'\n          + 'cursor: pointer;'\n          + 'fill: ' + fillColor,\n        task: task\n      });\n    });\n\n    this.tasks.forEach(task => {\n      task.prerequisites.forEach(pre => {\n        this.graph.setEdge(pre.id, task.id, {\n          arrowhead: 'vee',\n          curve: d3.curveBasis\n        });\n      });\n    });\n\n    this.svg.selectAll('*').remove();\n    const inner = this.svg.append('g');\n\n    this.render(inner, this.graph);\n\n    this.svg.selectAll('g.node').on('click', id => this.nodeClicker(id));\n\n    const xCenterOffset = (this.svg.attr('width') - this.graph.graph().width) / 2;\n    inner.attr('transform', 'translate(' + xCenterOffset + ', 20)');\n    this.svg.attr('height', this.graph.graph().height + 40);\n  }\n\n  /**\n   * Checks if a task is available for project member to work on.\n   *\n   * @private\n   * @param {Task} task The task which is being checked.\n   * @returns {boolean}\n   *  Returns TRUE if all prerequisites of the given task are completed.\n   *  Otherwise returns FALSE.\n   * @memberof ProjectTasksComponent\n   */\n  private checkAvailability(task: Task): boolean {\n    let available = true;\n    task.prerequisites.forEach(pre => {\n      if (!this.tasks.find(t => t.id === pre.id).complete) {\n        available = false;\n      }\n    });\n    return available;\n  }\n\n  /**\n   * Adds a task to the project. It opens up a dialog ({DialogAddTaskComponent})\n   * where the project leader can provide the properties of the new task.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public addTask(): void {\n    const dialogRef = this.dialog.open(DialogAddTaskComponent, {\n      width: '350px',\n      data: {\n        project: this.project,\n        tasks: this.tasks\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(async newTask => {\n      if (newTask !== undefined) {\n        console.log('NEW TASK:', newTask);\n        console.log(typeof newTask.prerequisites);\n\n        await this.taskService.addTask(newTask);\n        this.initGraph();\n      }\n    });\n  }\n\n  /**\n   * Deletes the selected task from the project. A task can only be deleted,\n   * if it has not yet been started.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public async deleteTask() {\n    await this.taskService.deleteTask(this.selectedTask.id);\n    this.selectedTask = null;\n    this.initGraph();\n  }\n\n  /**\n   * 'onClick' event handler for the nodes of the task dependecy tree.\n   *\n   * @private\n   * @param {string} id Node ID.\n   * @memberof ProjectTasksComponent\n   */\n  private nodeClicker(id: string): void {\n    const node = this.graph.node(id);\n    this.selectedTask = node.task;\n  }\n\n  /**\n   * \"Begins\" the selected task. This is an event handler for the \"Begin task\" button.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public async beginTask() {\n    if (this.selectedTask.startTime === null) {\n      await this.taskService.beginTask(this.selectedTask.id);\n    }\n\n    // await this.taskService.assignTaskToUser(this.selectedTask.id, this.authService.currentUser);\n    this.initGraph();\n    this.selectedTask = null;\n  }\n\n  /**\n   * \"Ends\" the selected task. This is an event handler for the \"End task\" button.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public async endTask() {\n    await this.taskService.endTask(this.selectedTask.id, this.authService.currentUser);\n    this.initGraph();\n    this.selectedTask = null;\n  }\n\n  /**\n   * Determines that the \"Delete task\" button is visible or not. (The task is deletable or not.)\n   *\n   * @returns {boolean}\n   * @memberof ProjectTasksComponent\n   */\n  public deleteBtnVisibility(): boolean {\n    if (this.selectedTask.assignees.length || this.project.leader.id !== this.authService.currentUser.id || this.selectedTask.complete) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Determines that the \"Begin task\" button is visible or not.\n   *\n   * @returns {boolean}\n   * @memberof ProjectTasksComponent\n   */\n  public startBtnVisibility(): boolean {\n    // tslint:disable-next-line:max-line-length\n    // if ([1, 2].includes(this.selectedTask.state) && !(this.selectedTask.assignees.map(user => user.id).includes(this.authService.currentUser.id))) {\n    if (this.selectedTask.state === 1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Being implemented.\n   *\n   * @ignore\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private async joinTask() {\n\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  Project: {{project.name}}\n\n  \n\n    \n      add\n      (I am)LEGEND\n      BEFEJEZETT\n      FOLYAMATBAN\n      MEGKEZDHETŐ\n      BLOKKOLT\n    \n\n    \n\n  \n\n  \n\n    \n      Feladat: {{selectedTask.name}}\n      save -->\n      delete\n    \n\n    \n\n    \n\n        \n      \n\n      \n        \n          {{task.name}}\n        \n      \n\n      \n        Közreműködők: {{user.name}} \n      \n\n      \n        \n          {{user.fullName}}\n        \n      \n -->\n      \n        Csatlakozás\n      \n -->\n      \n        Állapot:\n        \n          {{selectedTask.state === 0 ? \"BLOKKOLT\" : (selectedTask.state === 1 ? \"MEGKEZDHETŐ\" : (selectedTask.state === 2 ? \"FOLYAMATBAN\" : \"BEFEJEZETT\"))}}\n        \n        Megkezd / csatlakozik\n        Befejez\n      \n\n      \n        \n          Feladat kezdete:\n          {{dateToString(selectedTask.startTime)}}\n        \n        \n          Feladat befejezése:\n          {{dateToString(selectedTask.completionTime)}}\n        \n      \n\n      \n        Befejezte:\n        {{selectedTask.completedBy}}\n      \n\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./project-tasks.component.scss\n                \n                \nh1 {\n  padding-left: 30px;\n  font-size: 40px;\n  color: rgba(255,255,255,0.5);\n  margin-top: 40px;\n}\n\n.placeholder {\n  text-align: center;\n  border: solid 1px rgba(255,255,255,0.4);\n  background: rgba(255,255,255,0.1);\n  font-size: 30px;\n}\n\n.half-width {\n  width: 50%;\n}\n\n#graph-wrapper {\n  padding-right: 150px;\n  min-height: 230px;\n\n  #graph {\n    width: 100%;\n  }\n}\n\n#legend {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 120px;\n  background-color: #222;\n\n  mat-icon {\n    top: 20px;\n    right: 20px;\n    width: 80px;\n    text-align: center;\n  }\n\n  label {\n    position: absolute;\n    bottom: 130px;\n    left: 10px;\n    width: 100px;\n    text-align: center;\n    font-size: 16px;\n    color: #ffffff;\n\n    span {\n      font-size: 10px;\n      opacity: 0.4;\n    }\n  }\n\n  .label {\n    position: absolute;\n    width: 100px;\n    left: 10px;\n    padding: 5px;\n    font-size: 12px;\n    box-sizing: border-box;\n    text-align: center;\n    font-weight: bold;\n    border-radius: 5px;\n  }\n\n  .lbl-done {\n    background-color: green;\n    color: #fff;\n    bottom: 100px;\n  }\n\n  .lbl-in-progress {\n    background-color: orange;\n    color: #000;\n    bottom: 70px;\n  }\n\n  .lbl-ready {\n    background-color: white;\n    color: #000;\n    bottom: 40px;\n  }\n\n  .lbl-blocked {\n    background-color: #cd5555;\n    color: #fff;\n    bottom: 10px;\n  }\n}\n\n#task-form-wrapper {\n\n  mat-card-header {\n\n    .btn-save {\n      right: 80px;\n    }\n  }\n\n  mat-card-content {\n\n    .custom-form-field {\n      position: relative;\n      padding: 10px 0;\n      font-size: 14px;\n      font-weight: 400;\n      color: rgba(0, 0, 0, 0.712);\n      margin-bottom: 1.25em;\n\n      .value-field {\n        font-weight: bold;\n        color: #000;\n        padding-left: 6px;\n      }\n\n      &#form-field-dates {\n\n        > span {\n          display: inline-block;\n          width: 50%;\n\n          span {\n            font-weight: bold;\n            color: #000;\n            padding-left: 6px;\n          }\n        }\n      }\n\n      #tag-state {\n\n        font-weight: bold;\n        padding: 6px 10px;\n        margin-left: 20px;\n        border-radius: 3px;\n\n        &.state-3 {\n          background-color: green;\n          color: white;\n        }\n\n        &.state-2 {\n          background-color: orange;\n          color: black;\n        }\n\n        &.state-1 {\n          background-color: white;\n          color: black;\n        }\n\n        &.state-0 {\n          background-color: #cd5555;\n          color: white;\n          }\n      }\n\n      button {\n        float: right;\n        margin: -10px 0 0 10px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Project: {{project.name}}            add      (I am)LEGEND      BEFEJEZETT      FOLYAMATBAN      MEGKEZDHETŐ      BLOKKOLT                      Feladat: {{selectedTask.name}}      save -->      delete                                                  {{task.name}}                            Közreműködők: {{user.name}}                               {{user.fullName}}               -->              Csatlakozás       -->              Állapot:                  {{selectedTask.state === 0 ? \"BLOKKOLT\" : (selectedTask.state === 1 ? \"MEGKEZDHETŐ\" : (selectedTask.state === 2 ? \"FOLYAMATBAN\" : \"BEFEJEZETT\"))}}                Megkezd / csatlakozik        Befejez                              Feladat kezdete:          {{dateToString(selectedTask.startTime)}}                          Feladat befejezése:          {{dateToString(selectedTask.completionTime)}}                            Befejezte:        {{selectedTask.completedBy}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationData.html":{"url":"interfaces/RegistrationData.html","title":"interface - RegistrationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegistrationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/dialog-registration/dialog-registration.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/classes/user';\n\nexport interface RegistrationData {\n  name: string;\n  email: string;\n}\n\n/**\n * Component of the registration dialog. The dialog contains a registration form where\n * the user can add the required information (full name, username and password) for \n * the registration process.\n *\n * @export\n * @class DialogRegistrationComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-registration',\n  templateUrl: './dialog-registration.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-registration.component.scss'\n  ]\n})\nexport class DialogRegistrationComponent implements OnInit {\n\n  /**\n   * Full name of the new user.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public name: string;\n\n  /**\n   * Username of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public userName: string;\n\n  /**\n   * Password of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd: string;\n\n  /**\n   * User password again for verification purposes.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd2: string;\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.name = this.userName = this.passwd = this.passwd2 = '';\n  }\n\n  /**\n   * Registration form validator function. It checks if all data fields are filled\n   * and the 2 passwords match. If any of these criterias are not met it pops up an\n   * error message and returns.\n   * Otherwise it sends the data to the backend and depending on the servers answer\n   * it pops up a verification or error message.\n   *\n   * @returns\n   * @memberof DialogRegistrationComponent\n   */\n  public async validateRegForm() {\n\n    if (!this.name.length || !this.userName.length || !this.passwd.length) {\n      this.snackBar.open('Minden adatot meg kell adni!', 'HIBA', { duration: 2000 });\n      return;\n    } else if (this.passwd !== this.passwd2) {\n      this.snackBar.open('A két jelszó nem egyezik meg!', 'HIBA', { duration: 2000 });\n      return;\n    }\n\n    const _user = new User(this.name, this.userName, this.passwd);\n\n    try {\n      await this.userService.registerUser(_user);\n      this.snackBar.open('Sikeres regisztráció.', '', { duration: 2000 });\n      this.dialogRef.close();\n    } catch {\n      this.snackBar.open('Sikertelen regisztráció!', 'HIBA', { duration: 2000 });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Skill.html":{"url":"classes/Skill.html","title":"class - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/skill.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a user skill.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                owners\n                            \n                            \n                                    Public\n                                requiredBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/skill.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of Skill.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of skill.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the skill.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:34\n                            \n                        \n\n                \n                    \n                        List of users having this skill.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiredBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:42\n                            \n                        \n\n                \n                    \n                        List of tasks requiring this skill.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/app/classes/user';\nimport { Task } from 'src/app/classes/task';\n\n/**\n * Representation of a user skill.\n *\n * @export\n * @class Skill\n */\nexport class Skill {\n\n  /**\n   *\n   *\n   * @type {number}\n   * @memberof Skill\n   */\n  public id: number;\n\n  /**\n   * Name of the skill.\n   *\n   * @type {string}\n   * @memberof Skill\n   */\n  public name: string;\n\n  /**\n   * List of users having this skill.\n   *\n   * @type {User[]}\n   * @memberof Skill\n   */\n  public owners: User[];\n\n  /**\n   * List of tasks requiring this skill.\n   *\n   * @type {Task[]}\n   * @memberof Skill\n   */\n  public requiredBy: Task[];\n\n  /**\n   * Creates an instance of Skill.\n   * \n   * @param {string} name Name of skill.\n   * @memberof Skill\n   */\n  constructor(name: string) {\n    this.name = name;\n    this.owners = [];\n    this.requiredBy = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkillService.html":{"url":"injectables/SkillService.html","title":"injectable - SkillService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SkillService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/skill.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                SKILLS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNewSkill\n                            \n                            \n                                    Public\n                                deleteSkill\n                            \n                            \n                                    Public\n                                editSkill\n                            \n                            \n                                    Public\n                                getAllSkills\n                            \n                            \n                                    Public\n                                getSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/skill.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNewSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewSkill(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSkill(skillID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editSkill(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllSkills\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSkills()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSkill(skillID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'skills/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/skill.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKILLS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/skill.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Skill } from './../classes/skill';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillService {\n\n  private route = 'skills/';\n  private SKILLS: Skill[];\n\n  constructor(private httpService: HttpService) { }\n\n  public getAllSkills(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public addNewSkill(skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public getSkill(skillID: number): Promise {\n    return this.httpService.get(this.route + skillID);\n  }\n\n  public deleteSkill(skillID: number): Promise {\n    return this.httpService.delete(this.route + 'delete/' + skillID);\n  }\n\n  public editSkill(skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.put(this.route + 'edit/' + skill.id, json);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/task.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a task.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignees\n                            \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                completedBy\n                            \n                            \n                                    Public\n                                endTime\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prerequisites\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                requiredBy\n                            \n                            \n                                    Public\n                                requiredSkills\n                            \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:42\n                            \n                        \n\n                \n                    \n                        List of users assigned to this task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            complete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:69\n                            \n                        \n\n                \n                    \n                        TRUE if the task is completed. Otherwise FASLE.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            completedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:95\n                            \n                        \n\n                \n                    \n                        Name of the member who completed the task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:87\n                            \n                        \n\n                \n                    \n                        Date and time when a member completed this task.\nNULL if not yet completed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:19\n                            \n                        \n\n                \n                    \n                        Task ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:104\n                            \n                        \n\n                \n                    \n                        TRUE if anybody can join to this task.\nFALSE if only the project leader can add members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:27\n                            \n                        \n\n                \n                    \n                        Name of the task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prerequisites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:51\n                            \n                        \n\n                \n                    \n                        List of prerequisites. These task have to be completed\nbefore assignees can start working on this task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiredBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:61\n                            \n                        \n\n                \n                    \n                        List of task that are requiring this task to be done.\nThese tasks cannot be started before this task is not\ncompleted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiredSkills\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/classes/task.ts:34\n                            \n                        \n\n                \n                    \n                        List of skills required by this task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:78\n                            \n                        \n\n                \n                    \n                        Date and time when members started working on\nthis task. NULL if not yet started.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:129\n                            \n                        \n\n                \n                    \n                        State of the project. (0: Not available; 1: Available; 2: In progress;\n3: Completed)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Skill } from './skill';\nimport { Project } from 'src/app/classes/projects';\nimport { User } from './user';\n\n/**\n * Representation of a task.\n *\n * @export\n * @class Task\n */\nexport class Task {\n\n  /**\n   * Task ID.\n   *\n   * @type {number}\n   * @memberof Task\n   */\n  public id: number;\n\n  /**\n   * Name of the task.\n   *\n   * @type {string}\n   * @memberof Task\n   */\n  public name: string;\n\n  /**\n   * List of skills required by this task.\n   *\n   * @memberof Task\n   */\n  public requiredSkills;\n\n  /**\n   * List of users assigned to this task.\n   *\n   * @type {User[]}\n   * @memberof Task\n   */\n  public assignees: User[];\n\n  /**\n   * List of prerequisites. These task have to be completed\n   * before assignees can start working on this task.\n   *\n   * @type {Task[]}\n   * @memberof Task\n   */\n  public prerequisites: Task[];\n\n  /**\n   * List of task that are requiring this task to be done.\n   * These tasks cannot be started before this task is not\n   * completed.\n   *\n   * @type {Task[]}\n   * @memberof Task\n   */\n  public requiredBy: Task[];\n\n  /**\n   * TRUE if the task is completed. Otherwise FASLE.\n   *\n   * @type {boolean}\n   * @memberof Task\n   */\n  public complete: boolean;\n\n  /**\n   * Date and time when members started working on\n   * this task. NULL if not yet started.\n   *\n   * @type {Date}\n   * @memberof Task\n   */\n  public startTime: Date;\n\n  /**\n   * Date and time when a member completed this task.\n   * NULL if not yet completed.\n   *\n   * @type {Date}\n   * @memberof Task\n   */\n  public endTime: Date;\n\n  /**\n   * Name of the member who completed the task.\n   *\n   * @type {string}\n   * @memberof Task\n   */\n  public completedBy: string;\n  \n  /**\n   * TRUE if anybody can join to this task.\n   * FALSE if only the project leader can add members.\n   *\n   * @type {boolean}\n   * @memberof Task\n   */\n  public isOpen: boolean;\n\n  /**\n   *\n   *\n   * @type {Project}\n   * @memberof Task\n   */\n  public project: Project;\n\n  /**\n   *\n   *\n   * @type {number}\n   * @memberof Task\n   */\n  public projectId: number;\n\n  /**\n   * State of the project. (0: Not available; 1: Available; 2: In progress;\n   * 3: Completed)\n   *\n   * @type {number}\n   * @memberof Task\n   */\n  public state: number;\n\n\n  /**\n   * Creates an instance of Task.\n   * \n   * @ignore\n   * @memberof Task\n   */\n  constructor() {\n    this.requiredSkills = [];\n    this.assignees = [];\n    this.prerequisites = [];\n    this.requiredBy = [];\n    this.complete = false;\n    this.isOpen = false;\n    this.state = 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTask\n                            \n                            \n                                    Public\n                                assignTaskToUser\n                            \n                            \n                                    Public\n                                beginTask\n                            \n                            \n                                    Public\n                                deleteTask\n                            \n                            \n                                    Public\n                                endTask\n                            \n                            \n                                    Public\n                                getTask\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Public\n                                unassignTaskFromUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assignTaskToUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignTaskToUser(taskID: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beginTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beginTask(taskID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(taskID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            endTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    endTask(taskID: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTask(taskID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unassignTaskFromUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unassignTaskFromUser(taskID: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tasks/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/task.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ProjectService } from 'src/app/services/project.service';\nimport { Observable, of } from 'rxjs';\nimport { Task } from './../classes/task';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { User } from '../classes/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  private route = 'tasks/';\n\n  constructor(private httpService: HttpService) { }\n\n  public getTasks(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public getTask(taskID: number): Promise {\n    return this.httpService.get(this.route + taskID);\n  }\n\n  public addTask(task: Task): Promise {\n    const json = JSON.stringify(task);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public deleteTask(taskID: number): Promise {\n    return this.httpService.delete(this.route + taskID + '/delete');\n  }\n\n  public assignTaskToUser(taskID: number, user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + taskID + '/assign', json);\n  }\n\n  public unassignTaskFromUser(taskID: number, user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + taskID + '/unassign', json);\n  }\n\n  public beginTask(taskID: number): Promise {\n    return this.httpService.post(this.route + taskID + '/start', '{}');\n  }\n\n  public endTask(taskID: number, user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + taskID + '/complete', json);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/user.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a user.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignedTasks\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                ownedProjects\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                skills\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, userName: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/user.ts:75\n                            \n                        \n\n                \n                    \n                            Creates an instance of User.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of user.\n\n                                                        \n                                                \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Username of user.\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Password of user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignedTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:75\n                            \n                        \n\n                \n                    \n                        List of tasks where this user is assigned to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:19\n                            \n                        \n\n                \n                    \n                        User ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:27\n                            \n                        \n\n                \n                    \n                        Full name of the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownedProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:59\n                            \n                        \n\n                \n                    \n                        List of users own projects.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:43\n                            \n                        \n\n                \n                    \n                        User's password. (Not stored on frontend.)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:51\n                            \n                        \n\n                \n                    \n                        List of projects where this user is contributing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skills\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:67\n                            \n                        \n\n                \n                    \n                        List of user's own skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:35\n                            \n                        \n\n                \n                    \n                        Username of the user.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from 'src/app/classes/task';\nimport { Skill } from './skill';\nimport { Project } from 'src/app/classes/projects';\n\n/**\n * Representation of a user.\n *\n * @export\n * @class User\n */\nexport class User {\n  \n  /**\n   * User ID.\n   *\n   * @type {number}\n   * @memberof User\n   */\n  public id: number;\n\n  /**\n   * Full name of the user.\n   *\n   * @type {string}\n   * @memberof User\n   */\n  public name: string;\n\n  /**\n   * Username of the user.\n   *\n   * @type {string}\n   * @memberof User\n   */\n  public username: string;\n\n  /**\n   * User's password. (Not stored on frontend.)\n   *\n   * @type {string}\n   * @memberof User\n   */\n  public password: string;\n\n  /**\n   * List of projects where this user is contributing.\n   *\n   * @type {Project[]}\n   * @memberof User\n   */\n  public projects: Project[];\n\n  /**\n   * List of users own projects.\n   *\n   * @type {Project[]}\n   * @memberof User\n   */\n  public ownedProjects: Project[];\n\n  /**\n   * List of user's own skills.\n   *\n   * @type {Skill[]}\n   * @memberof User\n   */\n  public skills: Skill[];\n\n  /**\n   * List of tasks where this user is assigned to.\n   *\n   * @type {Task[]}\n   * @memberof User\n   */\n  public assignedTasks: Task[];\n\n  /**\n   * Creates an instance of User.\n   * \n   * @param {string} name Name of user.\n   * @param {string} userName Username of user.\n   * @param {string} password Password of user.\n   * @memberof User\n   */\n  constructor(name: string, userName: string, password: string) {\n    this.name = name;\n    this.username = userName;\n    this.password = password;\n    this.projects = [];\n    this.ownedProjects = [];\n    this.skills = [];\n    this.assignedTasks = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Ez a komponens kezeli a felhasználók profilát.\n(Felhasználók személyes adatai, beleértve a képességeket is.)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addBlurOn\n                            \n                            \n                                    Public\n                                allSkills\n                            \n                            \n                                chipInput\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                filteredOptions\n                            \n                            \n                                matAutocomplete\n                            \n                            \n                                    Public\n                                removable\n                            \n                            \n                                    Public\n                                selectable\n                            \n                            \n                                    Public\n                                separatorKeysCodes\n                            \n                            \n                                    Public\n                                skillControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                    Public\n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                restoreUserData\n                            \n                            \n                                    Public\n                                    Async\n                                saveUserData\n                            \n                            \n                                    Async\n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(skillService: SkillService, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        skillService\n                                                  \n                                                        \n                                                                        SkillService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:79\n                \n            \n\n\n            \n                \n                    Removes a skill that is assigned to the current user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            restoreUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUserData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            saveUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUserData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:98\n                \n            \n\n\n            \n                \n                    Elmenti (frissíti) a felhasználó megadott adatait.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selected(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addBlurOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allSkills\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chipInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chipInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('auto')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            separatorKeysCodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [ENTER, COMMA]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skillControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Skill } from './../classes/skill';\nimport { AuthenticationService } from './../services/auth.service';\nimport { SkillService } from './../services/skill.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { User } from '../classes/user';\nimport { UserService } from '../services/user.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatAutocomplete, MatChipInputEvent, MatAutocompleteSelectedEvent } from '@angular/material';\n\n/**\n * Ez a komponens kezeli a felhasználók profilát.\n * (Felhasználók személyes adatai, beleértve a képességeket is.)\n */\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './user-profile.component.scss'\n  ]\n})\nexport class UserProfileComponent implements OnInit {\n\n  public currentUser: User;\n\n  public allSkills: Skill[] = [];\n\n  public skillControl = new FormControl();\n  public filteredOptions: Observable;\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\n  public selectable = true;\n  public removable = true;\n  public addBlurOn = true;\n\n  @ViewChild('chipInput') chipInput: ElementRef;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(\n    private skillService: SkillService,\n    private userService: UserService,\n    private authService: AuthenticationService\n  ) {\n    this.filteredOptions = this.skillControl.valueChanges.pipe(\n      startWith(null),\n      map((src: string | null) => src ? this._filter(src) : this.allSkills.map(skill => skill.name))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.allSkills.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0).map(skill => skill.name);\n  }\n\n  async ngOnInit() {\n    this.currentUser = new User('', '', '');\n    this.currentUser = JSON.parse(JSON.stringify(this.authService.currentUser));\n    this.allSkills = await this.skillService.getAllSkills();\n  }\n\n  public async add(event: KeyboardEvent) {\n    if (event.charCode == 13) {\n      var _skill: Skill = await this.skillService.addNewSkill(new Skill(this.skillControl.value));\n      this.currentUser = await this.userService.addSkill(this.currentUser.id, _skill);\n      this.authService.currentUser = this.currentUser;\n      this.allSkills = await this.skillService.getAllSkills();\n      this.skillControl.setValue('');\n    }\n  }\n\n  /**\n   * Removes a skill that is assigned to the current user.\n   *\n   * @param {Skill} skill\n   * @memberof UserProfileComponent\n   */\n  public async remove(skill: Skill) {\n    this.currentUser = await this.userService.removeSkill(this.currentUser.id, skill);\n    this.authService.currentUser = this.currentUser;\n  }\n\n  async selected(event: MatAutocompleteSelectedEvent) {\n    const _skill = this.allSkills.find(item => item.name === event.option.viewValue);\n\n    this.currentUser = await this.userService.addSkill(this.currentUser.id, _skill);\n    this.allSkills = await this.skillService.getAllSkills();\n\n    this.skillControl.setValue('');\n  }\n\n  /**\n   * Elmenti (frissíti) a felhasználó megadott adatait.\n   *\n   * @memberof UserProfileComponent\n   */\n  public async saveUserData() {\n    this.authService.currentUser = this.currentUser;\n    const _user = this.currentUser;\n    _user.skills = null;\n    await this.userService.editUser(_user);\n  }\n\n  public async restoreUserData() {\n    this.currentUser = await this.userService.getUser(this.currentUser.id);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n\n      Személyes adatok:\n\n      \n        \n      \n\n      \n        \n      \n\n        \n      \n\n      \n        \n      \n -->\n      \n        Mentés\n        Mégsem\n      \n\n    \n\n    \n\n      Képességek:\n\n\n      \n        \n          {{ skill.name }}\n          cancel\n        \n      \n\n      \n\n        \n\n        \n          \n            {{option}}\n          \n        \n\n      \n\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./user-profile.component.scss\n                \n                \n.transparent-panel {\n  display: inline-block;\n  width: calc(50% - 10px);\n\n  &:nth-of-type(1) {\n    margin-right: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Személyes adatok:                                                                           -->              Mentés        Mégsem                    Képességek:                        {{ skill.name }}          cancel                                                          {{option}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProjectsComponent.html":{"url":"components/UserProjectsComponent.html","title":"component - UserProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-projects/user-projects.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-projects\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./user-projects.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-projects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _project\n                            \n                            \n                                    Public\n                                ownProjects\n                            \n                            \n                                    Public\n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                refreshLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, userService: UserService, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-projects/user-projects.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-projects/user-projects.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-projects/user-projects.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            refreshLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-projects/user-projects.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-projects/user-projects.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-projects/user-projects.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-projects/user-projects.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AuthenticationService } from './../services/auth.service';\nimport { DialogCreateProjectComponent } from './../dialogs/dialog-create-project/dialog-create-project.component';\nimport { MatDialog } from '@angular/material';\nimport { Component, OnInit } from '@angular/core';\nimport { ProjectService } from './../services/project.service';\nimport { Project } from './../classes/projects';\nimport { User } from '../classes/user';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-user-projects',\n  templateUrl: './user-projects.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './user-projects.component.scss'\n  ]\n})\nexport class UserProjectsComponent implements OnInit {\n\n  public projects: Project[];\n  public ownProjects: Project[];\n  public _project: Project;\n\n  constructor(\n    private projectService: ProjectService,\n    private userService: UserService,\n    private authService: AuthenticationService,\n    private dialog: MatDialog\n  ) { }\n\n  async ngOnInit() {\n    this.refreshLists();\n  }\n\n  private async refreshLists() {\n    this.projects = await this.userService.getProjects(this.authService.currentUser.id);\n    this.ownProjects = await this.userService.getOwnProjects(this.authService.currentUser.id);\n    this.projects = this.projects.filter(project => !(this.ownProjects.map(p => p.id).includes(project.id)));\n  }\n\n  private createProject(): void {\n    const dialogRef = this.dialog.open(DialogCreateProjectComponent, { width: '350px' });\n\n    dialogRef.afterClosed().subscribe(async _name => {\n      if (_name !== '' && _name != undefined) {\n        const newProject = new Project(_name, this.authService.currentUser.id);\n        console.log('NEW PROJECT:', newProject);\n        await this.projectService.addNewProject(newProject);\n        this.refreshLists();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n      \n        Saját projectek:\n        add\n      \n\n      \n\n        \n\n          \n              {{project.name}}\n          \n\n        \n\n      \n\n  \n\n  \n\n      \n        Egyéb projectek:\n      \n\n      \n\n        \n\n          \n              {{project.name}}\n          \n\n        \n\n      \n\n  \n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./user-projects.component.scss\n                \n                \n.project-card {\n  box-sizing: border-box;\n  width: 100%;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n\n  mat-card-title {\n    font-size: 24px;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Saját projectek:        add                                            {{project.name}}                                          Egyéb projectek:                                            {{project.name}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addSkill\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                getAssignedTasks\n                            \n                            \n                                    Public\n                                getOwnProjects\n                            \n                            \n                                    Public\n                                getProjects\n                            \n                            \n                                    Public\n                                getSkillsOfUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                removeSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSkill(userID: number, skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAssignedTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssignedTasks(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOwnProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnProjects(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjects(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSkillsOfUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSkillsOfUser(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSkill(userID: number, skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../classes/user';\nimport { HttpService } from './http.service';\nimport { Skill } from '../classes/skill';\nimport { Project } from '../classes/projects';\nimport { Task } from '../classes/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private route = 'users/';\n\n  constructor(private httpService: HttpService) { }\n\n  public registerUser(user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public getUsers(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public getUser(id: number): Promise {\n    return this.httpService.get(this.route + id);\n  }\n\n  public deleteUser(id: number): Promise {\n    return this.httpService.delete(this.route + id);\n  }\n\n  public editUser(user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + user.id + '/edit', json);\n  }\n\n  public getSkillsOfUser(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/skills');\n  }\n\n  public addSkill(userID: number, skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.put(this.route + userID + '/skills/add', json);\n  }\n\n  public removeSkill(userID: number, skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.put(this.route + userID + '/skills/remove', json);\n  }\n\n  public getOwnProjects(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/ownedProjects');\n  }\n\n  public getProjects(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/projects');\n  }\n\n  public getAssignedTasks(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/assignedTasks');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/classes/projects.ts\n            \n            class\n            Project\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/classes/skill.ts\n            \n            class\n            Skill\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/classes/task.ts\n            \n            class\n            Task\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/classes/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-add-member/dialog-add-member.component.ts\n            \n            component\n            DialogAddMemberComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-add-task/dialog-add-task.component.ts\n            \n            component\n            DialogAddTaskComponent\n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-create-project/dialog-create-project.component.ts\n            \n            component\n            DialogCreateProjectComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-registration/dialog-registration.component.ts\n            \n            component\n            DialogRegistrationComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-registration/dialog-registration.component.ts\n            \n            interface\n            RegistrationData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            function\n            dateToString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/project-tasks/project-tasks.component.ts\n            \n            component\n            ProjectTasksComponent\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/skill.service.ts\n            \n            injectable\n            SkillService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/user-projects/user-projects.component.ts\n            \n            component\n            UserProjectsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^7.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^7.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            component : ^1.1.0\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            dagre : ^0.8.2\n        \n            dagre-d3 : ^0.6.1\n        \n            jsdom : ^13.0.0\n        \n            rxjs : ~6.2.0\n        \n            tar : ^4.4.8\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dateToString   (src/.../globals.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/globals.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            dateToString\n                        \n                        \n                    \n                \n            \n            \n                \ndateToString(date)\n                \n            \n\n\n\n\n            \n                \n                    Creates the string representation of a date object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date object which will be converted to string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        String representation of the given date.\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFRONTEND\nThis project was generated with Angular CLI version 6.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogAddMemberComponent\n\nDialogAddMemberComponent\n\nAppModule -->\n\nDialogAddMemberComponent->AppModule\n\n\n\n\n\nDialogAddTaskComponent\n\nDialogAddTaskComponent\n\nAppModule -->\n\nDialogAddTaskComponent->AppModule\n\n\n\n\n\nDialogCreateProjectComponent\n\nDialogCreateProjectComponent\n\nAppModule -->\n\nDialogCreateProjectComponent->AppModule\n\n\n\n\n\nDialogRegistrationComponent\n\nDialogRegistrationComponent\n\nAppModule -->\n\nDialogRegistrationComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nAppModule -->\n\nProjectMembersComponent->AppModule\n\n\n\n\n\nProjectTasksComponent\n\nProjectTasksComponent\n\nAppModule -->\n\nProjectTasksComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserProjectsComponent\n\nUserProjectsComponent\n\nAppModule -->\n\nUserProjectsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
