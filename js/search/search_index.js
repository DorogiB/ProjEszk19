var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.285,1,0.833]],["body/components/AppComponent.html",[0,0.51,1,1.559,2,1.743,3,0.383,4,0.332,5,1.417,6,1.531,7,1.531,8,1.531,9,0.332,10,3.631,11,1.531,12,2.165,13,1.853,14,2.208,15,1.743,16,5.776,17,1.743,18,5.333,19,0.471,20,0.03,21,1.417,22,0.608,23,1.656,24,2.119,25,0.383,26,0.102,27,1.311,28,1.884,29,1.743,30,1.531,31,2.13,32,1.531,33,0.536,34,1.531,35,1.121,36,1.97,37,1.379,38,1.531,39,1.121,40,1.531,41,1.121,42,1.311,43,1.531,44,1.035,45,1.531,46,1.035,47,1.121,48,1.531,49,1.121,50,1.531,51,1.035,52,0.825,53,1.531,54,1.035,55,1.531,56,1.035,57,0.604,58,1.531,59,1.035,60,1.212,61,1.531,62,1.531,63,0.02,64,0.024,65,0.02]],["title/modules/AppModule.html",[66,2.099,67,2.099]],["body/modules/AppModule.html",[1,1.643,3,0.294,4,0.255,9,0.255,13,0.93,19,0.583,20,0.031,22,0.466,25,0.294,26,0.078,27,1.005,35,1.578,37,1.41,39,1.578,41,1.578,42,1.359,44,1.457,46,1.401,47,0.86,49,1.518,51,1.401,52,0.695,54,1.401,56,1.401,57,0.509,59,1.401,63,0.015,64,0.021,65,0.015,66,2.165,67,4.35,68,1.953,69,2.165,70,4.264,71,4.264,72,3.765,73,2.43,74,2.785,75,2.785,76,2.785,77,2.785,78,3.448,79,3.765,80,2.785,81,2.165,82,3.325,83,4.493,84,3.765,85,5.09,86,3.765,87,2.165,88,3.765,89,3.325,90,3.325,91,2.165,92,2.785,93,4.493,94,3.325,95,4.493,96,3.325,97,4.493,98,3.325,99,4.493,100,3.325,101,4.493,102,3.325,103,3.203,104,1.953,105,2.785,106,2.165,107,2.785,108,3.325,109,2.785,110,2.43,111,2.785,112,2.785,113,2.785,114,4.493,115,4.493,116,4.493,117,4.493,118,4.493,119,4.493,120,4.493,121,4.493,122,2.165,123,4.493,124,4.493,125,4.493,126,1.087,127,4.493,128,5.09,129,1.953,130,2.165,131,2.785,132,2.165,133,2.785,134,2.165,135,2.785,136,2.165,137,2.785,138,2.165,139,2.785,140,2.165,141,2.785,142,4.493,143,2.43]],["title/classes/AppPage.html",[26,0.076,144,2.356]],["body/classes/AppPage.html",[3,0.431,4,0.374,9,0.374,14,2.021,19,0.431,20,0.031,25,0.431,26,0.115,29,1.596,63,0.022,64,0.026,65,0.022,87,3.179,144,4.187,145,2.609,146,4.09,147,0.431,148,1.159,149,6.272,150,6.272,151,0.803,152,4.881,153,0.973,154,4.881,155,4.09,156,1.602,157,4.881,158,4.881,159,4.881]],["title/modules/AppRoutingModule.html",[66,2.099,78,1.894]],["body/modules/AppRoutingModule.html",[0,0.549,3,0.389,4,0.337,9,0.337,19,0.571,20,0.031,22,0.618,25,0.389,26,0.104,46,1.286,47,1.139,51,1.286,52,0.833,54,1.286,56,1.286,57,0.61,59,1.286,63,0.02,64,0.025,65,0.02,68,2.587,73,3.219,78,3.164,84,3.689,88,4.512,91,2.868,92,3.689,106,2.868,107,3.689,130,2.868,131,3.689,132,2.868,133,3.689,134,2.868,135,3.689,160,4.403,161,4.403,162,3.788,163,5.385,164,1.978,165,4.048,166,4.403,167,1.139,168,4.544,169,4.403,170,5.078,171,4.403,172,4.403,173,4.403,174,4.403]],["title/guards/AuthGuard.html",[165,2.099,175,2.356]],["body/guards/AuthGuard.html",[3,0.385,4,0.334,9,0.334,14,1.805,19,0.547,20,0.031,22,0.611,23,2.308,24,2.132,25,0.385,26,0.103,33,0.538,63,0.02,64,0.024,65,0.02,110,3.912,147,0.385,148,1.083,151,0.751,153,0.74,156,1.497,164,2.404,165,3.485,170,5.193,176,4.359,177,3.652,178,0.909,179,4.359,180,4.672,181,4.359,182,0.994,183,0.606,184,0.994,185,2.86,186,4.359,187,6.039,188,4.233,189,6.039,190,4.359,191,3.771,192,2.617,193,3.912,194,1.497,195,2.561,196,2.132,197,1.425,198,1.178,199,3.186,200,2.132,201,3.652,202,2.839,203,2.33]],["title/injectables/AuthenticationService.html",[23,1.232,194,0.902]],["body/injectables/AuthenticationService.html",[3,0.325,4,0.282,9,0.282,14,1.523,19,0.501,20,0.031,22,0.516,23,2.309,25,0.424,26,0.113,33,0.37,47,1.243,57,0.731,63,0.017,64,0.022,65,0.017,81,3.129,147,0.325,148,0.973,151,0.751,153,0.909,156,1.344,164,1.652,167,0.951,178,0.625,180,3.912,182,0.683,183,0.606,184,0.683,192,2.617,194,1.344,196,1.799,198,1.057,200,2.775,201,3.081,204,1.799,205,3.081,206,1.057,207,3.129,208,2.568,209,0.951,210,0.743,211,0.976,212,4.484,213,2.046,214,5.675,215,4.805,216,1.373,217,3.666,218,3.678,219,5.675,220,3.513,221,3.288,222,2.568,223,4.805,224,5.675,225,3.678,226,2.159,227,1.406,228,1.299,229,3.678,230,4.026,231,4.026,232,2.161,233,2.405,234,2.161,235,1.178,236,1.966,237,1.453,238,2.395,239,4.805,240,3.678,241,5.352,242,4.755,243,1.837,244,3.678,245,3.678,246,3.678,247,2.395,248,4.805,249,3.678,250,2.395,251,3.678]],["title/components/DialogAddMemberComponent.html",[0,0.285,35,0.833]],["body/components/DialogAddMemberComponent.html",[0,0.472,1,0.723,2,1.303,3,0.247,4,0.214,5,0.914,6,0.988,7,0.988,8,0.988,9,0.214,11,0.988,12,2.034,13,1.741,15,1.303,17,1.303,19,0.491,20,0.031,21,1.654,22,0.392,25,0.352,26,0.094,27,0.846,28,1.408,29,1.303,30,0.988,31,1.788,32,0.988,33,0.467,34,0.988,35,1.58,36,2.084,37,1.696,38,0.988,39,0.723,40,0.988,41,0.723,42,0.846,43,0.988,44,0.668,45,0.988,46,0.668,47,0.723,48,0.988,49,0.723,50,0.988,51,0.668,52,0.986,53,0.988,54,0.668,55,0.988,56,0.668,57,0.718,58,0.988,59,0.668,60,1.299,61,0.988,62,0.988,63,0.013,64,0.018,65,0.013,126,0.914,138,3.726,147,0.247,148,0.807,151,0.78,153,0.475,178,0.677,182,0.519,183,0.662,184,0.519,197,1.518,198,1.224,206,0.877,208,3.126,209,0.723,210,0.617,211,0.945,213,1.775,222,2.481,235,1.114,237,1.404,243,1.523,252,3.058,253,2.343,254,3.621,255,2.341,256,1.922,257,1.821,258,4.643,259,3.985,260,3.89,261,2.911,262,3.89,263,2.674,264,1.788,265,2.797,266,2.236,267,2.464,268,3.985,269,1.408,270,1.523,271,3.699,272,2.705,273,3.699,274,3.699,275,4.643,276,3.023,277,3.89,278,2.728,279,2.797,280,2.797,281,2.475,282,3.339,283,2.973,284,2.044,285,3.339,286,2.797,287,2.797,288,3.985,289,2.913,290,3.339,291,2.343,292,2.343,293,1.257,294,1.495,295,1.821,296,1.643,297,1.65,298,3.985,299,2.797,300,2.343,301,2.797,302,2.797,303,2.797,304,2.797,305,2.913,306,3.985,307,2.913,308,2.913,309,2.595,310,2.341,311,1.158,312,1.821,313,1.495,314,1.069,315,1.158,316,1.257,317,1.821]],["title/components/DialogAddTaskComponent.html",[0,0.285,39,0.833]],["body/components/DialogAddTaskComponent.html",[0,0.385,1,0.454,2,0.916,3,0.155,4,0.134,5,0.574,6,0.621,7,0.621,8,0.621,9,0.134,11,0.621,12,1.847,13,1.581,15,0.916,17,0.916,19,0.491,20,0.031,21,1.305,22,0.246,25,0.248,26,0.066,27,0.531,28,0.99,29,0.916,30,0.621,31,1.41,32,0.621,33,0.509,34,0.621,35,0.454,36,1.947,37,1.69,38,0.621,39,1.571,40,0.621,41,0.454,42,0.531,43,0.621,44,0.419,45,0.621,46,0.419,47,0.454,48,0.621,49,0.454,50,0.621,51,0.419,52,0.874,53,0.621,54,0.419,55,0.621,56,0.419,57,0.317,58,0.621,59,0.419,60,0.491,61,0.621,62,0.621,63,0.008,64,0.013,65,0.008,126,0.574,129,1.032,140,3.907,147,0.155,148,0.567,151,0.835,153,0.741,156,0.491,167,1.032,178,0.476,182,0.741,183,0.692,184,0.741,191,2.599,195,1.032,197,1.143,198,1.023,200,0.859,203,2.484,206,0.769,208,2.707,209,0.454,210,0.434,211,0.997,213,2.089,216,1.178,222,2.484,227,1.777,228,1.966,235,1.26,237,1.406,243,1.337,252,3.207,254,2.599,256,1.448,257,1.144,261,2.273,263,1.259,264,1.41,267,0.727,269,0.99,270,1.071,271,2.917,272,2.484,273,2.917,274,2.917,276,1.825,281,2.8,284,2.556,285,2.348,291,1.472,292,1.472,297,1.16,305,2.049,307,2.049,309,1.825,310,1.646,311,0.727,312,1.144,313,0.939,314,0.671,315,0.727,316,0.789,317,1.144,318,1.472,319,2.477,320,2.348,321,2.345,322,1.825,323,2.802,324,2.049,325,2.802,326,2.802,327,2.599,328,3.438,329,1.278,330,2.484,331,3.497,332,2.802,333,4.086,334,3.497,335,2.93,336,2.93,337,2.93,338,2.93,339,3.894,340,3.497,341,3.497,342,2.93,343,2.93,344,2.93,345,2.348,346,2.348,347,2.348,348,1.472,349,2.976,350,3.067,351,3.497,352,2.802,353,2.397,354,2.348,355,1.756,356,2.802,357,3.344,358,2.802,359,3.991,360,1.646,361,2.802,362,2.802,363,3.188,364,2.917,365,2.802,366,2.802,367,2.049,368,2.802,369,2.802,370,2.802,371,2.802,372,2.348,373,2.802,374,3.654,375,1.756,376,2.348,377,3.991,378,3.991,379,1.825,380,1.756,381,2.802,382,1.756,383,2.049,384,2.802,385,1.756,386,3.991,387,2.049,388,1.825,389,1.825,390,1.756,391,2.802,392,1.756,393,2.802,394,2.802,395,1.756,396,2.802,397,2.93,398,2.348,399,1.756,400,1.756,401,1.756,402,2.348,403,2.556,404,1.756,405,2.802,406,1.756,407,1.756,408,3.991,409,3.991,410,3.991,411,1.756,412,1.058,413,2.93,414,2.93,415,1.756,416,2.802,417,2.802,418,1.472,419,1.472,420,1.472,421,1.472,422,1.472,423,1.032,424,1.472,425,1.472,426,1.284,427,1.284,428,1.472,429,1.472,430,1.756,431,1.472,432,1.472,433,1.472,434,1.472,435,1.472,436,3.344,437,1.472,438,1.472,439,1.472,440,1.472,441,1.472,442,1.756,443,1.756,444,2.802,445,1.472,446,1.472,447,1.756,448,1.472,449,1.472,450,1.472,451,1.472,452,1.756,453,1.756,454,1.756,455,1.472,456,1.472,457,1.284,458,1.756,459,1.756,460,1.756,461,1.756,462,1.756,463,1.756,464,3.344,465,2.348,466,2.348,467,2.348,468,2.802]],["title/components/DialogCreateProjectComponent.html",[0,0.285,41,0.833]],["body/components/DialogCreateProjectComponent.html",[0,0.516,1,0.926,2,1.544,3,0.316,4,0.274,5,1.171,6,1.265,7,1.265,8,1.265,9,0.274,11,1.265,12,2.113,13,1.809,15,1.544,17,1.544,19,0.417,20,0.031,21,1.836,22,0.502,25,0.417,26,0.111,27,1.083,28,1.669,29,1.544,30,1.265,31,1.985,32,1.265,33,0.565,34,1.265,35,0.926,36,2.14,37,1.221,38,1.265,39,0.926,40,1.265,41,1.604,42,1.965,43,1.265,44,0.855,45,1.265,46,0.855,47,0.926,48,1.265,49,0.926,50,1.265,51,0.855,52,0.98,53,1.265,54,0.855,55,1.265,56,0.855,57,0.535,58,1.265,59,0.855,60,1.002,61,1.265,62,1.265,63,0.016,64,0.022,65,0.016,126,1.171,136,3.441,147,0.316,148,0.956,151,0.662,153,0.608,183,0.535,197,1.727,206,0.788,209,0.926,210,0.731,211,0.817,216,1.163,226,1.609,235,1.039,236,1.914,237,1.083,252,2.824,256,2.187,257,2.332,264,1.985,269,1.265,270,1.369,297,1.955,305,3.452,307,3.452,309,3.075,310,2.774,311,1.483,312,2.332,313,1.914,314,1.369,315,1.483,316,1.609,317,2.332,329,1.341,469,3.001,470,5.283,471,4.722,472,5.283,473,3.581,474,3.581,475,3.862,476,2.309,477,1.914]],["title/components/DialogRegistrationComponent.html",[0,0.285,44,0.769]],["body/components/DialogRegistrationComponent.html",[0,0.451,1,0.644,2,1.198,3,0.22,4,0.191,5,0.814,6,0.88,7,0.88,8,0.88,9,0.191,11,0.88,12,1.992,13,1.705,15,1.198,17,1.198,19,0.423,20,0.031,21,1.567,22,0.349,25,0.384,26,0.086,27,0.754,28,1.295,29,1.198,30,0.88,31,1.694,32,0.88,33,0.6,34,0.88,35,0.644,36,2.061,37,1.24,38,0.88,39,0.644,40,0.88,41,0.644,42,0.754,43,0.88,44,1.404,45,0.88,46,0.595,47,1.321,48,0.88,49,0.644,50,0.88,51,0.595,52,0.567,53,0.88,54,0.595,55,0.88,56,0.595,57,0.69,58,0.88,59,0.595,60,0.697,61,0.88,62,0.88,63,0.011,64,0.017,65,0.011,104,3.33,122,3.122,126,0.814,147,0.22,148,0.742,151,0.775,153,0.868,156,1.025,167,0.644,178,0.622,182,0.463,183,0.655,184,0.463,197,1.421,198,0.957,206,0.548,207,3.122,209,0.644,210,0.567,211,0.958,213,1.662,216,1.353,217,3.139,221,2.952,226,1.119,232,1.464,235,1.124,238,1.622,243,0.952,247,1.622,250,3.122,252,3.029,256,1.8,257,1.622,261,2.345,264,1.694,266,2.111,272,1.959,276,2.387,297,1.517,310,2.153,311,1.517,312,1.622,313,1.959,314,0.952,315,1.031,316,1.119,317,1.622,321,3.002,324,2.679,327,2.387,329,1.319,360,2.153,364,1.821,367,2.679,387,3.505,388,3.83,389,3.48,475,3.505,476,1.792,478,1.821,479,3.505,480,3.643,481,3.071,482,3.643,483,3.643,484,4.017,485,2.491,486,3.178,487,3.665,488,2.491,489,2.491,490,3.071,491,2.679,492,2.679,493,3.071,494,1.959,495,3.071,496,3.071,497,3.071,498,3.505,499,2.817,500,3.505,501,2.153,502,2.387,503,3.071,504,3.071,505,2.679,506,4.017,507,2.491,508,2.491,509,4.017,510,4.017,511,3.071,512,3.071,513,2.491,514,2.087,515,1.464,516,1.622,517,2.087,518,1.464,519,2.679,520,3.643,521,3.071,522,2.087,523,2.087,524,2.087,525,2.087,526,2.087,527,3.071,528,2.087,529,2.087,530,3.178,531,3.505,532,3.505,533,2.087,534,2.087,535,2.087,536,2.087,537,2.087,538,1.821,539,2.087,540,2.087,541,2.087,542,3.906,543,2.087,544,1.821,545,1.622,546,2.563,547,1.464,548,1.464,549,1.959,550,2.087,551,1.332,552,1.332,553,1.332,554,1.821,555,1.821,556,1.332,557,1.332,558,1.332,559,1.821,560,2.087,561,2.491,562,1.218,563,1.792,564,1.464,565,1.622]],["title/injectables/HttpService.html",[194,0.902,233,1.448]],["body/injectables/HttpService.html",[3,0.223,4,0.193,5,1.68,9,0.193,14,1.046,19,0.327,20,0.031,22,0.354,25,0.327,26,0.087,33,0.54,63,0.012,64,0.017,65,0.012,143,1.847,147,0.223,148,0.75,151,0.798,153,1.083,156,1.502,167,0.653,178,0.429,182,1.111,183,0.729,184,0.997,192,3.117,194,1.036,196,1.236,198,1.131,204,1.236,206,1.182,208,1.979,209,0.653,210,0.573,211,0.96,216,1.448,222,3.154,227,0.966,228,0.893,233,2.609,235,1.182,237,1.721,254,2.412,271,2.707,272,3.523,329,0.603,357,3.673,477,1.351,502,3.843,505,4.66,566,2.117,567,3.103,568,3.703,569,3.703,570,5.139,571,2.836,572,4.827,573,4.827,574,4.827,575,3.703,576,2.527,577,4.499,578,3.703,579,3.703,580,2.527,581,6.374,582,6.495,583,2.79,584,5.901,585,5.901,586,3.672,587,3.703,588,2.527,589,3.703,590,6.399,591,2.527,592,5.37,593,5.37,594,3.703,595,2.527,596,3.703,597,2.527,598,3.703,599,3.103,600,2.527,601,2.527,602,2.527,603,3.703,604,1.485,605,2.527,606,3.703,607,2.527,608,2.527,609,2.527,610,2.527,611,5.139,612,5.139,613,2.527,614,2.527,615,2.527,616,2.527]],["title/components/LoginFormComponent.html",[0,0.285,46,0.769]],["body/components/LoginFormComponent.html",[0,0.455,1,0.659,2,1.218,3,0.225,4,0.195,5,0.833,6,0.9,7,0.9,8,0.9,9,0.195,11,0.9,12,2.001,13,1.712,15,1.218,17,1.218,19,0.476,20,0.031,21,1.584,22,0.357,23,1.852,24,1.246,25,0.329,26,0.088,27,0.771,28,1.317,29,1.218,30,0.9,31,1.713,32,0.9,33,0.443,34,0.9,35,0.659,36,1.981,37,0.964,38,0.9,39,0.659,40,0.9,41,0.659,42,0.771,43,0.9,44,0.89,45,0.9,46,1.328,47,1.618,48,0.9,49,0.659,50,0.9,51,0.608,52,0.75,53,0.9,54,0.608,55,0.9,56,0.608,57,0.422,58,0.9,59,0.608,60,0.713,61,0.9,62,0.9,63,0.012,64,0.017,65,0.012,91,3.623,103,1.497,104,1.497,105,2.135,122,3.156,126,0.833,129,1.497,147,0.225,148,0.754,151,0.756,153,0.748,164,1.145,167,1.139,168,2.724,178,0.633,180,4.067,182,0.473,183,0.499,184,0.473,185,2.756,197,1.44,198,0.969,206,0.561,207,2.427,208,1.992,209,0.659,210,0.576,211,0.9,213,1.684,217,3.269,221,2.879,226,1.979,235,0.82,238,1.66,243,1.424,247,1.66,250,2.427,261,1.822,264,1.713,272,2.59,273,2.724,313,1.992,314,1.971,321,3.03,329,1.052,363,2.724,379,3.156,388,3.508,389,2.427,403,3.22,476,1.246,486,3.22,492,2.724,494,1.992,498,2.724,499,3.165,500,2.724,501,2.189,502,2.427,530,1.863,531,1.863,532,1.863,542,2.724,544,1.863,545,1.66,546,3.049,549,2.59,550,2.135,551,2.59,552,1.992,553,2.59,554,3.22,555,3.22,556,2.354,557,1.362,558,2.354,559,2.724,560,2.135,562,2.154,563,2.721,565,1.66,617,4.661,618,2.135,619,3.726,620,3.726,621,3.726,622,3.543,623,3.726,624,4.405,625,3.726,626,4.405,627,4.847,628,4.847,629,2.548,630,3.358,631,3.726,632,2.548,633,2.548,634,3.122,635,3.726,636,3.726,637,3.726,638,3.726,639,3.726,640,3.122,641,3.122,642,3.726,643,3.122,644,3.122,645,2.548,646,3.726,647,2.548,648,4.847,649,2.548,650,2.548,651,3.726,652,2.135,653,2.548,654,3.726,655,2.548,656,2.548,657,2.548,658,2.548,659,2.548,660,5.157,661,2.548,662,1.66,663,3.726,664,3.726,665,3.726,666,2.548,667,2.548,668,2.59,669,1.145,670,2.189,671,1.497,672,2.548,673,2.189,674,1.497,675,1.497,676,1.497,677,1.497,678,2.135,679,1.497,680,1.497,681,1.362,682,2.588,683,1.497,684,2.548,685,2.548,686,3.122,687,2.135,688,2.135,689,2.189,690,3.726,691,2.135,692,1.497,693,1.497]],["title/components/NavbarComponent.html",[0,0.285,49,0.833]],["body/components/NavbarComponent.html",[0,0.5,1,0.846,2,1.453,3,0.289,4,0.25,5,1.069,6,1.156,7,1.156,8,1.156,9,0.25,11,1.156,12,2.086,13,1.804,15,1.453,17,1.453,19,0.446,20,0.031,21,1.77,22,0.459,23,1.929,24,1.599,25,0.392,26,0.105,27,0.989,28,1.57,29,1.453,30,1.156,31,1.913,32,1.156,33,0.447,34,1.156,35,0.846,36,1.77,37,1.149,38,1.156,39,0.846,40,1.156,41,0.846,42,0.989,43,1.156,44,0.781,45,1.156,46,0.781,47,0.846,48,1.156,49,1.612,50,1.156,51,0.781,52,0.838,53,1.156,54,0.781,55,1.156,56,0.781,57,0.613,58,1.156,59,0.781,60,0.915,61,1.156,62,1.156,63,0.015,64,0.02,65,0.015,147,0.392,148,0.899,151,0.708,153,0.555,164,1.469,168,3.248,178,0.555,183,0.613,185,2.375,197,1.65,198,0.72,200,2.173,206,0.72,209,0.846,210,0.687,211,0.924,226,1.469,230,3.723,235,1.192,236,1.748,237,1.344,264,1.913,269,1.156,270,1.25,311,1.354,314,1.698,315,1.84,372,4.537,412,1.766,558,1.748,562,1.599,563,1.599,565,2.13,583,1.997,641,4.893,668,2.698,669,2.268,678,2.74,681,1.748,694,2.74,695,4.444,696,4.444,697,4.444,698,5.047,699,4.444,700,5.663,701,5.663,702,3.27,703,3.723,704,4.444,705,3.248,706,4.444,707,4.444,708,3.27,709,2.648,710,3.27,711,3.69,712,3.27,713,2.391,714,2.894,715,3.27,716,3.27,717,4.444,718,4.444,719,3.248,720,4.444,721,4.444,722,4.444,723,3.723,724,4.444,725,3.27,726,1.921,727,3.27,728,2.611,729,1.921,730,2.611,731,3.27,732,3.27,733,3.27,734,2.13,735,2.74]],["title/classes/Project.html",[26,0.076,52,0.499]],["body/classes/Project.html",[3,0.311,4,0.27,9,0.27,19,0.311,20,0.031,25,0.413,26,0.11,33,0.64,52,1.037,57,0.689,63,0.016,64,0.021,65,0.016,145,1.883,147,0.311,151,0.867,178,0.598,182,0.654,183,0.737,184,0.654,206,1.028,209,0.911,210,0.723,211,1.025,216,1.34,235,1.36,237,1.413,269,1.65,270,1.785,278,3.411,319,2.84,322,3.413,412,1.976,518,2.07,709,2.978,736,2.951,737,2.744,738,5.807,739,6.182,740,3.415,741,4.671,742,4.079,743,4.245,744,3.914,745,3.523,746,3.523,747,3.523,748,3.523,749,5.58,750,3.523,751,3.523,752,4.671,753,3.523]],["title/components/ProjectMembersComponent.html",[0,0.285,51,0.769]],["body/components/ProjectMembersComponent.html",[0,0.41,1,0.516,2,1.013,3,0.176,4,0.153,5,0.652,6,0.705,7,0.705,8,0.705,9,0.153,11,0.705,12,1.903,13,1.629,15,1.013,17,1.013,19,0.48,20,0.031,21,1.4,22,0.28,25,0.274,26,0.073,27,0.604,28,1.095,29,1.013,30,0.705,31,1.513,32,0.705,33,0.431,34,0.705,35,0.801,36,1.85,37,1.269,38,0.705,39,0.516,40,0.705,41,0.516,42,0.604,43,0.705,44,0.477,45,0.705,46,0.477,47,0.516,48,0.705,49,0.516,50,0.705,51,1.39,52,1.001,53,0.705,54,0.477,55,0.705,56,0.477,57,0.705,58,0.705,59,0.477,60,1.433,61,0.705,62,0.705,63,0.009,64,0.014,65,0.009,103,1.173,126,0.652,134,3.742,138,1.3,139,1.672,147,0.176,148,0.627,151,0.794,153,0.727,156,0.558,164,0.897,167,1.108,178,0.526,182,0.576,183,0.659,184,0.576,197,1.242,198,0.836,206,0.682,209,0.516,210,0.479,211,0.982,213,2.078,226,1.393,227,0.763,228,0.705,235,1.165,237,0.604,243,2.024,255,1.821,256,1.573,260,3.183,261,0.976,262,4.112,263,1.393,264,1.513,266,1.958,267,2.12,277,2.597,278,3.376,281,2.659,282,2.597,283,1.821,290,2.597,293,0.897,294,1.067,295,1.3,296,1.173,297,1.283,300,3.183,308,2.266,311,2.411,314,2.251,315,1.283,316,1.707,329,0.74,363,1.459,383,2.266,412,1.149,476,0.976,499,1.821,545,1.3,546,2.737,547,1.173,548,1.173,549,2.479,551,1.067,552,1.067,553,1.657,556,2.289,557,1.067,558,2.031,562,1.516,563,2.095,564,1.173,571,1.821,583,1.393,604,2.232,622,2.266,630,3.02,644,2.597,652,1.672,662,1.3,668,2.289,669,2.443,670,1.173,671,1.173,673,2.232,674,2.516,675,2.725,676,1.821,677,1.821,679,2.516,680,1.821,681,2.031,682,2.232,683,1.173,689,1.173,692,1.821,693,1.821,711,3.131,713,2.777,714,2.474,719,2.266,726,1.173,728,2.516,729,3.009,730,2.232,742,2.266,744,2.597,754,4.201,755,1.672,756,1.672,757,3.799,758,3.099,759,3.799,760,3.799,761,4.283,762,4.283,763,3.099,764,1.672,765,3.099,766,1.996,767,1.996,768,3.799,769,1.996,770,3.099,771,1.996,772,3.099,773,3.099,774,3.099,775,1.996,776,1.996,777,1.996,778,3.099,779,1.996,780,1.996,781,3.099,782,1.459,783,2.474,784,3.589,785,3.183,786,3.799,787,1.996,788,1.459,789,1.996,790,1.996,791,1.996,792,3.799,793,1.996,794,1.996,795,1.996,796,1.996,797,1.996,798,1.996,799,1.996,800,1.996,801,3.588,802,3.099,803,3.099,804,3.099,805,2.597,806,3.099,807,3.099,808,1.3,809,1.3,810,2.474,811,1.3,812,1.3,813,3.618,814,1.3,815,1.3,816,1.3,817,3.02,818,2.474,819,1.3,820,2.018,821,1.3,822,1.3,823,1.3,824,2.018,825,2.018,826,1.3,827,1.3,828,1.3,829,1.3,830,1.3,831,1.3,832,1.3,833,1.3,834,2.018,835,1.3,836,1.672,837,1.996,838,1.672,839,1.672,840,3.589,841,1.996,842,3.799,843,3.099,844,1.996,845,1.996]],["title/injectables/ProjectService.html",[194,0.902,267,1.334]],["body/injectables/ProjectService.html",[3,0.284,4,0.246,9,0.246,14,1.332,19,0.475,20,0.031,22,0.451,25,0.388,26,0.103,33,0.598,52,0.97,57,0.609,60,1.23,63,0.015,64,0.02,65,0.015,147,0.284,148,0.89,151,0.862,153,1.029,156,1.694,167,1.294,182,1.105,183,0.686,184,1.105,192,3.161,194,1.23,196,1.574,198,1.184,204,1.574,206,0.708,208,2.349,209,0.832,210,0.68,211,1.023,216,1.184,221,1.72,227,1.23,228,1.137,233,2.53,234,1.891,235,0.967,236,1.72,237,0.973,255,2.941,267,2.406,269,1.137,270,1.23,274,3.213,278,1.891,293,1.446,294,1.72,320,3.682,329,0.768,412,1.946,477,1.72,583,2.249,586,3.415,783,4.046,846,2.696,847,4.395,848,3.682,849,4.395,850,4.395,851,5.005,852,4.395,853,4.395,854,4.395,855,5.379,856,4.395,857,4.395,858,4.395,859,4.395,860,3.218,861,4.395,862,3.218,863,4.395,864,3.218,865,4.395,866,3.218,867,3.218,868,4.395,869,3.218,870,4.395,871,3.218,872,4.395,873,5.379,874,3.218,875,3.218,876,3.26,877,4.395,878,3.26,879,2.096,880,2.096,881,2.352,882,3.218,883,3.218,884,3.218,885,3.218]],["title/components/ProjectTasksComponent.html",[0,0.285,54,0.769]],["body/components/ProjectTasksComponent.html",[0,0.398,1,0.307,2,0.662,3,0.105,4,0.091,5,0.388,6,0.419,7,0.937,8,1.244,9,0.091,11,0.419,12,1.651,13,1.466,15,0.662,17,0.662,19,0.476,20,0.031,21,1.025,22,0.166,23,1.346,24,0.58,25,0.179,26,0.048,27,0.613,28,0.716,29,1.025,30,0.419,31,1.108,32,0.419,33,0.354,34,0.419,35,0.307,36,1.526,37,0.992,38,0.419,39,0.811,40,0.419,41,0.307,42,0.359,43,0.419,44,0.283,45,0.419,46,0.283,47,0.307,48,0.419,49,0.307,50,0.419,51,0.283,52,0.942,53,0.419,54,1.395,55,0.419,56,0.283,57,0.464,58,0.419,59,0.283,60,0.332,61,0.419,62,0.419,63,0.005,64,0.009,65,0.005,103,0.697,109,0.994,110,0.867,111,0.994,112,0.994,113,0.994,126,0.388,132,3.633,140,0.773,141,0.994,143,0.867,147,0.105,148,0.41,151,0.775,153,0.927,156,1.073,164,0.533,167,0.992,178,0.344,182,0.492,183,0.545,184,0.492,185,1.676,188,2.574,193,3.294,197,0.867,198,1.325,199,1.481,200,1.722,202,2.293,203,1.882,206,0.583,209,0.307,210,0.485,211,0.938,213,2.033,216,0.69,220,1.481,226,1.409,228,0.419,231,1.697,232,0.697,235,1.215,236,0.634,237,1.306,243,1.566,254,1.319,255,1.19,256,1.098,261,0.58,263,1.191,264,1.108,266,1.722,267,1.865,269,0.716,270,0.774,281,0.991,289,3.156,293,0.533,294,0.634,295,0.773,296,0.697,297,0.839,308,1.481,311,1.992,313,2.408,314,1.839,315,1.588,316,1.409,319,2.204,321,1.558,322,1.319,329,0.841,330,2.633,350,2.647,353,0.453,360,1.842,364,1.938,376,1.697,379,2.498,412,0.359,423,0.697,424,0.994,445,0.994,446,0.994,448,0.994,449,0.994,457,1.481,464,3.213,465,2.221,476,0.58,491,1.481,494,1.882,499,1.19,501,1.19,545,0.773,546,2.952,547,1.19,548,0.697,549,2.496,551,2.19,552,1.083,553,2.05,554,2.292,555,2.292,556,2.572,557,0.634,558,1.417,559,0.867,562,2.415,563,2.839,564,1.842,565,1.727,571,1.842,577,0.994,583,1.191,604,1.19,622,1.481,630,2.293,634,3.213,640,1.697,662,0.773,668,2.05,669,2.314,670,1.842,671,0.697,673,2.647,674,1.842,675,2.407,676,1.842,677,1.19,679,2.069,680,2.647,681,1.417,682,1.842,683,0.697,686,2.627,687,2.221,689,0.697,691,1.697,692,1.558,693,1.558,703,2.627,709,1.722,711,2.574,713,0.867,714,0.773,726,2.069,728,2.536,729,2.069,730,1.558,734,2.498,735,0.994,742,1.481,754,4.078,756,0.994,764,0.994,782,1.938,783,0.773,784,2.627,785,0.994,788,0.867,801,1.481,808,0.773,809,0.773,810,1.319,811,0.773,812,0.773,813,2.668,814,1.319,815,0.773,816,0.773,817,2.934,818,1.727,819,0.773,820,1.319,821,0.773,822,0.773,823,2.498,824,0.773,825,0.773,826,1.319,827,2.042,828,0.773,829,1.727,830,0.773,831,1.319,832,1.319,833,0.773,834,1.319,835,0.773,836,0.994,839,0.994,886,0.994,887,2.026,888,2.026,889,2.026,890,3.135,891,2.026,892,2.026,893,2.026,894,4.097,895,2.651,896,2.651,897,2.026,898,2.574,899,3.775,900,3.521,901,2.651,902,2.95,903,2.627,904,2.627,905,2.026,906,3.135,907,2.627,908,2.627,909,3.135,910,2.026,911,3.135,912,2.026,913,3.135,914,3.135,915,2.026,916,2.627,917,1.186,918,2.026,919,1.186,920,2.026,921,3.135,922,2.026,923,1.186,924,2.995,925,2.651,926,2.026,927,1.697,928,2.221,929,1.186,930,3.135,931,3.135,932,2.026,933,1.186,934,2.026,935,2.026,936,1.481,937,1.186,938,2.026,939,1.697,940,1.186,941,1.186,942,2.026,943,1.186,944,2.026,945,2.026,946,2.026,947,2.651,948,1.186,949,1.186,950,1.186,951,1.186,952,2.026,953,1.186,954,3.521,955,2.026,956,1.186,957,2.026,958,2.026,959,1.186,960,1.186,961,2.026,962,0.867,963,0.994,964,1.186,965,1.186,966,1.186,967,1.186,968,1.186,969,1.186,970,3.521,971,2.026,972,2.026,973,2.651,974,1.186,975,2.026,976,1.186,977,1.186,978,2.026,979,3.521,980,1.186,981,3.135,982,3.135,983,2.026,984,2.651,985,1.186,986,1.697,987,1.186,988,1.697,989,1.186,990,1.186,991,2.026,992,1.186,993,3.521,994,1.186,995,2.651,996,1.186,997,1.186,998,1.186,999,2.026,1000,1.186,1001,2.026,1002,1.186,1003,2.026,1004,1.186,1005,1.186,1006,1.186,1007,1.186,1008,1.186,1009,1.186,1010,1.186,1011,1.186,1012,1.186,1013,1.186,1014,1.186,1015,1.186,1016,2.026,1017,1.186,1018,1.186,1019,1.186,1020,1.186,1021,1.186,1022,1.186,1023,1.186,1024,1.186,1025,1.186,1026,1.186,1027,1.186,1028,1.186,1029,2.651,1030,0.994,1031,1.186,1032,1.186,1033,1.186,1034,1.186,1035,3.135,1036,1.186,1037,1.186,1038,1.186,1039,1.186,1040,1.186,1041,1.186,1042,1.186,1043,1.186,1044,0.994,1045,1.186,1046,1.186,1047,1.186,1048,1.186,1049,1.186,1050,1.186,1051,2.026,1052,3.135,1053,3.135,1054,3.135,1055,3.135,1056,2.026,1057,2.651,1058,2.026,1059,2.026,1060,2.026,1061,2.026,1062,3.835,1063,2.026,1064,2.026,1065,2.026,1066,2.026,1067,2.026,1068,2.026,1069,2.026,1070,2.026,1071,2.026,1072,1.186,1073,1.186,1074,1.186,1075,1.186,1076,1.186,1077,2.026,1078,1.186,1079,1.186,1080,1.186,1081,1.186,1082,1.186,1083,2.026,1084,1.186,1085,2.651,1086,1.186,1087,2.026,1088,1.186,1089,3.135,1090,0.994,1091,2.026,1092,1.186,1093,1.186,1094,1.186,1095,1.186,1096,1.186,1097,1.186,1098,1.186,1099,1.186,1100,1.186,1101,1.186,1102,0.994,1103,0.994,1104,0.994,1105,1.186,1106,2.026]],["title/interfaces/RegistrationData.html",[515,1.894,516,2.099]],["body/interfaces/RegistrationData.html",[0,0.451,3,0.296,4,0.257,9,0.257,12,1.095,13,0.937,15,1.095,17,1.095,19,0.483,20,0.031,21,1.67,22,0.47,25,0.451,26,0.106,33,0.604,36,1.923,37,0.866,44,1.435,47,1.168,57,0.666,63,0.015,64,0.021,65,0.015,104,1.968,122,2.942,126,1.095,147,0.296,153,0.767,156,1.264,167,0.866,178,0.569,183,0.666,197,1.476,198,1.124,207,2.942,210,0.699,211,0.883,213,1.281,216,1.417,217,3.002,221,2.731,232,1.968,235,1.256,238,2.182,243,1.281,247,2.182,250,2.942,252,1.791,256,1.387,261,2.209,264,1.184,266,1.953,272,1.791,276,2.182,297,1.387,321,2.654,324,2.449,327,2.182,329,1.306,360,1.968,367,2.449,387,3.302,388,3.718,389,3.328,475,3.302,476,1.639,478,2.449,479,3.302,480,2.807,481,2.807,482,2.807,483,2.807,484,2.807,486,2.449,490,2.807,491,2.449,492,2.449,493,2.807,494,1.791,495,2.807,496,2.807,497,2.807,498,3.302,499,2.654,500,3.302,501,1.968,502,2.182,503,2.807,504,2.807,505,2.449,506,3.784,509,3.784,510,3.784,511,2.807,512,2.807,514,2.807,515,1.968,516,2.942,517,4.582,518,1.968,519,3.302,520,4.281,521,3.784,522,2.807,523,2.807,524,2.807,525,2.807,526,2.807,527,3.784,528,2.807,529,2.807,530,3.735,531,3.998,532,3.998,533,2.807,534,2.807,535,2.807,536,2.807,537,2.807,538,2.449,539,2.807,540,2.807,541,2.807,542,3.302,543,2.807,544,2.449,1107,3.35]],["title/classes/Skill.html",[26,0.076,353,1.232]],["body/classes/Skill.html",[3,0.347,4,0.301,9,0.301,19,0.443,20,0.031,25,0.443,26,0.118,33,0.651,57,0.696,63,0.018,64,0.023,65,0.018,145,2.099,147,0.347,151,0.843,178,0.667,182,0.729,183,0.723,184,0.729,206,1.103,209,1.015,210,0.776,211,1.008,216,1.375,232,2.307,235,1.323,237,1.188,263,2.252,269,1.771,270,1.916,281,2.845,319,2.452,330,2.408,353,2.551,412,1.67,426,2.871,518,2.307,709,2.701,737,2.945,740,3.665,1108,3.29,1109,5.522,1110,4.627,1111,5.013,1112,3.927,1113,3.927,1114,3.927,1115,5.013,1116,4.2,1117,3.927,1118,3.29]],["title/injectables/SkillService.html",[194,0.902,349,1.894]],["body/injectables/SkillService.html",[3,0.335,4,0.29,9,0.29,14,1.568,19,0.48,20,0.031,22,0.531,25,0.335,26,0.089,33,0.598,63,0.017,64,0.022,65,0.017,147,0.335,148,0.992,151,0.881,153,1.009,156,1.663,167,1.267,178,0.643,182,1.104,183,0.702,184,1.104,192,3.13,194,1.371,196,1.853,198,1.34,204,1.853,210,0.758,211,1.016,216,0.834,227,1.448,228,1.339,233,2.736,234,2.226,328,3.492,329,0.904,349,2.878,353,2.463,412,1.841,423,2.226,477,2.025,571,2.226,583,2.439,586,3.372,876,3.19,878,2.467,879,2.467,880,2.467,881,2.77,1119,3.174,1120,4.899,1121,4.899,1122,4.899,1123,5.74,1124,4.899,1125,2.77,1126,4.899,1127,4.899,1128,3.789,1129,4.899,1130,3.789,1131,5.74,1132,4.899,1133,3.789,1134,3.789,1135,4.899,1136,3.789,1137,3.789,1138,4.104,1139,3.789]],["title/classes/Task.html",[26,0.076,330,1.334]],["body/classes/Task.html",[3,0.24,4,0.208,9,0.208,19,0.404,20,0.031,25,0.345,26,0.092,33,0.571,37,1.01,52,0.94,57,0.599,63,0.012,64,0.018,65,0.012,145,1.454,147,0.24,151,0.875,178,0.462,183,0.741,188,3.869,193,4.027,200,2.444,202,3.254,203,2.671,206,0.599,209,0.704,210,0.605,211,1.034,216,1.212,235,1.382,236,1.454,255,2.936,263,1.756,269,0.961,270,1.04,278,2.936,281,2.84,283,2.296,319,1.911,322,2.545,327,2.545,328,2.296,330,2.79,353,1.494,412,1.788,427,1.989,494,2.089,501,2.296,669,1.756,709,2.588,734,2.978,737,2.296,743,4.387,783,2.978,924,3.653,927,4.434,928,5.228,936,4.027,986,3.274,988,3.274,1090,3.274,1110,3.831,1116,3.274,1118,2.28,1140,2.28,1141,5.292,1142,3.831,1143,4.572,1144,4.572,1145,4.572,1146,4.572,1147,4.572,1148,2.721,1149,2.721,1150,3.908,1151,2.721,1152,2.721,1153,4.997,1154,2.721,1155,2.721,1156,3.908,1157,3.908,1158,2.721,1159,2.721,1160,4.997,1161,3.274,1162,4.997,1163,2.721,1164,2.721,1165,2.721,1166,2.721,1167,2.721,1168,2.721,1169,2.721,1170,2.721,1171,2.721,1172,2.721,1173,2.721,1174,2.721]],["title/injectables/TaskService.html",[194,0.902,350,1.894]],["body/injectables/TaskService.html",[3,0.29,4,0.251,9,0.251,14,1.36,19,0.517,20,0.031,22,0.461,25,0.29,26,0.077,33,0.612,57,0.741,63,0.015,64,0.02,65,0.015,147,0.29,148,0.902,151,0.875,153,1.033,156,1.702,167,1.403,178,0.558,182,1.13,183,0.699,184,1.13,191,2.139,192,3.169,194,1.247,195,1.93,196,1.606,198,1.113,204,1.606,210,0.689,211,1.025,216,0.723,227,1.255,228,1.161,233,2.628,234,1.93,267,1.36,293,1.476,319,2.18,329,0.784,330,2.348,350,2.618,412,1.974,428,2.752,477,1.756,571,1.93,583,2.273,586,3.575,876,2.902,878,2.902,879,2.139,880,3.294,903,3.734,904,3.734,907,3.734,908,3.734,962,2.401,1125,2.401,1142,2.752,1161,2.752,1175,2.752,1176,4.457,1177,4.457,1178,5.425,1179,4.457,1180,4.457,1181,4.457,1182,3.285,1183,4.457,1184,3.285,1185,6.343,1186,4.457,1187,3.285,1188,4.457,1189,3.285,1190,4.457,1191,3.285,1192,4.457,1193,3.285,1194,3.285,1195,4.457,1196,3.285,1197,3.285,1198,4.238,1199,3.285,1200,3.285]],["title/classes/User.html",[26,0.076,57,0.365]],["body/classes/User.html",[3,0.287,4,0.248,9,0.248,19,0.444,20,0.031,25,0.39,26,0.104,33,0.632,52,0.922,57,0.758,60,1.668,63,0.015,64,0.02,65,0.015,145,1.735,147,0.287,151,0.863,178,0.551,182,0.603,183,0.736,184,0.603,206,0.973,209,0.839,210,0.684,211,1.024,216,1.447,217,3.72,221,3.384,235,1.354,237,1.521,263,1.986,269,1.562,270,1.69,281,2.968,283,2.597,319,2.162,328,3.318,330,2.235,353,2.159,412,1.521,426,2.373,427,2.373,479,3.232,518,1.907,519,2.373,643,4.523,709,2.762,737,2.597,740,3.232,1201,2.719,1202,4.212,1203,4.212,1204,4.421,1205,3.246,1206,3.246,1207,3.246,1208,3.246,1209,3.704,1210,3.704,1211,3.246,1212,4.421,1213,3.246,1214,3.246,1215,3.246,1216,2.719,1217,3.246,1218,3.246,1219,3.246]],["title/components/UserProfileComponent.html",[0,0.285,56,0.769]],["body/components/UserProfileComponent.html",[0,0.34,1,0.528,2,1.031,3,0.18,4,0.156,5,0.668,6,0.722,7,0.722,8,0.722,9,0.156,11,0.722,12,1.913,13,1.637,15,1.031,17,1.031,19,0.503,20,0.031,21,1.26,22,0.286,23,1.657,24,0.999,25,0.18,26,0.048,27,0.618,28,1.115,29,1.031,30,0.722,31,1.656,32,0.722,33,0.519,34,0.722,35,0.528,36,1.417,37,1.121,38,0.722,39,0.528,40,0.722,41,0.528,42,0.618,43,0.722,44,0.488,45,0.722,46,0.488,47,0.528,48,0.722,49,0.528,50,0.722,51,0.488,52,0.488,53,0.722,54,0.488,55,0.722,56,1.183,57,0.67,58,0.722,59,0.488,60,0.571,61,0.722,62,0.722,63,0.009,64,0.014,65,0.009,106,4.008,126,0.668,129,1.2,147,0.18,148,0.639,151,0.858,153,0.877,156,0.571,167,0.997,178,0.536,182,0.87,183,0.644,184,0.87,185,2.06,191,2.51,195,1.2,197,1.031,198,1.09,199,2.818,200,1.543,203,2.648,206,0.449,210,0.488,211,1.005,212,3.229,213,2.338,216,1.09,227,1.893,228,1.825,235,0.694,237,0.618,242,4.685,243,2.092,256,1.596,264,1.532,266,1.974,283,1.853,284,2.306,289,2.306,293,0.918,296,1.2,297,1.306,309,2.054,310,1.853,311,2.208,314,2.039,315,1.306,316,1.417,329,0.92,333,3.632,335,3.229,336,3.229,337,3.229,338,3.229,339,4.15,342,3.229,343,3.229,344,3.229,345,2.643,348,1.711,349,2.91,353,2.237,354,2.643,374,1.711,379,2.054,383,2.306,397,3.229,398,2.643,402,2.643,403,2.818,412,0.954,413,3.229,414,3.229,418,1.711,419,1.711,420,1.711,421,1.711,422,1.711,423,1.2,425,1.711,429,1.711,431,1.711,432,1.711,433,1.711,434,1.711,435,1.711,436,3.632,437,1.711,438,1.711,439,1.711,440,1.711,441,1.711,450,3.229,451,3.229,455,1.711,456,1.711,466,2.643,467,2.643,538,1.493,546,2.505,547,1.2,548,1.2,549,2.06,551,1.091,552,1.091,553,1.686,556,1.686,558,1.091,562,1.543,563,1.885,564,1.2,604,1.2,668,2.06,669,0.918,670,1.2,671,1.2,673,1.853,674,1.853,675,2.265,676,1.853,677,1.853,679,1.853,680,1.853,681,2.06,682,2.265,683,1.2,689,1.2,692,1.2,693,1.2,723,3.632,726,1.2,728,1.853,729,2.265,730,2.265,808,2.054,809,2.054,810,1.33,811,1.33,812,1.33,813,3.052,814,1.33,815,1.33,816,1.33,817,2.054,818,2.51,819,1.33,820,1.33,821,1.33,822,1.33,823,1.33,824,1.33,825,1.33,826,1.33,827,1.33,828,1.33,829,1.33,830,1.33,831,1.33,832,1.33,833,1.33,834,2.054,835,1.33,838,1.711,840,1.711,1102,1.711,1103,1.711,1104,1.711,1220,4.499,1221,1.711,1222,3.155,1223,3.155,1224,3.155,1225,3.155,1226,4.336,1227,3.155,1228,3.155,1229,3.155,1230,3.155,1231,1.711,1232,3.855,1233,3.155,1234,3.855,1235,3.155,1236,4.336,1237,4.336,1238,3.155,1239,2.042,1240,3.155,1241,3.855,1242,2.042,1243,2.042,1244,3.155,1245,2.042,1246,3.155,1247,2.042,1248,2.042,1249,3.155,1250,3.155,1251,3.155,1252,3.155,1253,3.155,1254,3.155,1255,4.336,1256,2.042,1257,2.042,1258,2.042,1259,2.042,1260,2.042,1261,2.042,1262,2.042,1263,2.042,1264,2.042,1265,2.042,1266,2.042,1267,2.042,1268,2.042,1269,2.042,1270,2.042,1271,2.042,1272,3.155,1273,3.155,1274,2.042,1275,2.042,1276,2.042,1277,2.042,1278,2.042,1279,3.155,1280,3.155,1281,2.042]],["title/components/UserProjectsComponent.html",[0,0.285,59,0.769]],["body/components/UserProjectsComponent.html",[0,0.402,1,0.697,2,1.268,3,0.238,4,0.206,5,0.881,6,0.952,7,0.952,8,0.952,9,0.206,11,0.952,12,2.021,13,1.729,15,1.268,17,1.268,19,0.512,20,0.031,21,1.486,22,0.378,23,1.901,24,1.318,25,0.238,26,0.063,27,0.815,28,1.371,29,1.268,30,0.952,31,1.758,32,0.952,33,0.457,34,0.952,35,0.697,36,1.85,37,1.286,38,0.952,39,0.697,40,0.952,41,1.003,42,1.375,43,0.952,44,0.643,45,0.952,46,0.643,47,0.697,48,0.952,49,0.697,50,0.952,51,0.643,52,0.938,53,0.952,54,0.643,55,0.952,56,0.643,57,0.668,58,0.952,59,1.188,60,1.536,61,0.952,62,0.952,63,0.012,64,0.018,65,0.012,103,1.583,126,0.881,130,3.772,136,1.755,137,2.257,147,0.238,148,0.785,151,0.794,153,0.772,167,1.003,178,0.659,182,0.5,183,0.563,184,0.5,185,2.43,197,1.268,198,1.245,210,0.6,211,0.948,213,2.099,226,1.743,243,1.738,256,1.882,264,1.758,266,2.163,267,2.273,293,1.211,294,1.44,295,1.755,296,1.583,297,1.606,311,2.442,314,2.255,315,1.115,316,1.743,329,0.643,457,1.969,476,1.318,546,2.935,547,1.583,548,1.583,549,2.659,551,1.44,552,1.44,553,2.074,556,2.43,557,1.44,562,1.897,563,2.224,564,1.583,604,1.583,630,3.24,662,1.755,668,2.43,669,1.743,670,1.583,671,1.583,673,2.279,674,2.279,675,2.923,676,2.279,677,2.279,679,2.279,680,1.583,681,2.43,682,2.671,683,1.583,688,2.257,689,1.583,692,2.279,693,2.279,719,3.636,726,1.583,728,2.279,729,3.097,730,2.671,788,1.969,801,3.636,805,3.251,808,1.755,809,1.755,810,2.527,811,1.755,812,1.755,813,3.685,814,1.755,815,2.527,816,1.755,817,2.961,818,2.961,819,1.755,820,1.755,821,1.755,822,1.755,823,1.755,824,1.755,825,2.527,826,1.755,827,1.755,828,1.755,829,1.755,830,1.755,831,1.755,832,1.755,833,1.755,834,2.527,835,1.755,1030,2.257,1044,2.257,1216,3.251,1220,4.234,1231,2.257,1282,2.257,1283,4.547,1284,3.88,1285,4.547,1286,4.547,1287,4.975,1288,4.975,1289,2.694,1290,3.88,1291,2.694,1292,2.694,1293,2.694,1294,2.694,1295,2.694,1296,3.88,1297,2.694,1298,2.694,1299,2.694,1300,2.694,1301,2.694,1302,2.694,1303,2.694,1304,4.547,1305,3.88,1306,2.694,1307,2.694,1308,3.88,1309,2.694,1310,2.694]],["title/injectables/UserService.html",[194,0.902,266,1.232]],["body/injectables/UserService.html",[3,0.267,4,0.231,9,0.231,14,1.249,19,0.503,20,0.031,22,0.423,25,0.267,26,0.071,33,0.623,52,0.467,57,0.686,60,0.844,63,0.014,64,0.019,65,0.014,147,0.267,148,0.851,151,0.884,153,1.053,156,1.734,167,1.353,178,0.513,182,1.151,183,0.708,184,1.151,192,3.2,194,1.176,196,1.476,198,1.065,204,1.476,210,0.651,211,1.032,216,0.664,227,1.154,228,1.066,233,2.561,234,1.773,263,1.889,266,1.607,293,1.356,294,1.613,328,1.773,329,0.721,330,1.249,346,3.523,347,3.523,353,2.409,412,1.988,423,1.773,477,1.613,583,2.174,586,3.504,709,2.56,876,3.711,878,1.965,879,1.965,880,3.151,881,2.206,962,2.206,1125,2.206,1138,3.523,1198,3.523,1202,2.529,1203,2.529,1311,2.529,1312,4.205,1313,4.205,1314,4.205,1315,4.205,1316,4.205,1317,4.205,1318,4.205,1319,5.234,1320,4.205,1321,4.205,1322,4.205,1323,3.018,1324,6.254,1325,4.205,1326,3.018,1327,4.205,1328,3.018,1329,4.205,1330,3.018,1331,4.205,1332,3.018,1333,4.205,1334,3.018,1335,4.205,1336,3.018,1337,4.205,1338,3.018,1339,3.018,1340,4.205,1341,3.018,1342,4.205,1343,3.018,1344,3.018,1345,3.018,1346,3.018]],["title/coverage.html",[1347,3.686]],["body/coverage.html",[0,0.571,1,0.999,9,0.296,10,3.235,20,0.031,23,1.476,26,0.141,35,0.999,37,1.495,39,0.999,41,0.999,42,1.5,44,0.922,46,0.922,49,0.999,51,0.922,52,0.597,54,0.922,56,0.922,57,0.437,59,0.922,63,0.018,64,0.023,65,0.018,91,2.515,104,2.914,106,2.515,130,2.515,132,2.515,134,2.515,136,2.515,138,2.515,140,2.515,144,2.823,146,3.235,165,2.515,175,2.823,177,3.235,183,0.437,194,1.712,205,3.235,233,1.735,252,3.196,253,3.235,266,1.476,267,1.599,318,3.235,329,0.922,330,1.599,349,2.269,350,2.269,353,1.476,360,2.269,469,3.235,478,3.625,515,2.269,516,2.515,557,3.196,566,3.235,617,3.235,618,3.235,669,2.92,694,3.235,714,2.515,736,3.235,754,3.625,755,3.235,846,3.235,886,3.235,898,2.823,916,4.844,1108,3.235,1119,3.235,1140,3.235,1175,3.235,1201,3.235,1220,3.625,1221,3.235,1282,3.235,1311,3.235,1347,3.235,1348,3.861,1349,3.861,1350,3.861,1351,5.479,1352,5.979,1353,3.861,1354,3.861,1355,3.861,1356,3.861,1357,3.861,1358,3.861,1359,3.861,1360,3.861,1361,3.861,1362,3.861,1363,3.861,1364,3.861,1365,4.959,1366,3.861,1367,3.235,1368,3.861,1369,3.861,1370,3.861,1371,4.959,1372,3.861,1373,3.861,1374,3.861,1375,3.861,1376,3.861,1377,3.861,1378,3.861,1379,3.861,1380,3.861,1381,3.861,1382,3.861,1383,3.861,1384,3.235,1385,4.155,1386,3.235,1387,4.155,1388,3.235,1389,3.235,1390,3.861,1391,3.861]],["title/dependencies.html",[69,2.525,1392,2.691]],["body/dependencies.html",[20,0.031,22,0.676,63,0.022,64,0.026,65,0.022,69,3.138,86,4.763,87,3.702,126,1.575,129,2.831,164,2.165,195,2.831,782,3.523,963,4.037,1393,4.819,1394,4.819,1395,4.819,1396,5.685,1397,4.819,1398,6.522,1399,4.819,1400,4.819,1401,4.819,1402,4.819,1403,4.819,1404,4.819,1405,4.819,1406,4.819,1407,4.819,1408,4.819,1409,4.819,1410,4.819,1411,4.819]],["title/miscellaneous/functions.html",[1412,1.753,1413,3.248]],["body/miscellaneous/functions.html",[20,0.029,33,0.504,63,0.023,64,0.027,65,0.023,147,0.443,153,0.851,182,0.931,184,0.931,206,1.103,216,1.392,220,3.663,222,3.109,269,1.771,737,3.417,743,4.623,898,4.252,1367,4.199,1412,3.263,1413,4.199,1414,5.011,1415,5.011,1416,5.011]],["title/index.html",[147,0.238,936,1.967,1417,2.691]],["body/index.html",[0,0.521,4,0.348,13,1.271,20,0.025,33,0.457,52,0.849,63,0.021,64,0.025,65,0.021,81,2.958,155,3.806,329,1.085,567,4.598,599,4.598,848,4.941,939,5.132,1209,3.806,1210,3.806,1418,4.543,1419,5.897,1420,5.897,1421,4.543,1422,4.543,1423,4.543,1424,6.271,1425,6.446,1426,4.543,1427,4.543,1428,4.543,1429,4.543,1430,4.543,1431,4.543,1432,4.543,1433,4.543,1434,4.543,1435,4.543,1436,5.897,1437,4.543,1438,6.271,1439,4.543,1440,4.543,1441,4.543,1442,4.543,1443,4.543,1444,3.806,1445,5.488,1446,5.488,1447,6.125,1448,4.543,1449,5.488,1450,4.543,1451,4.543,1452,4.543,1453,5.897,1454,4.543,1455,4.543,1456,4.543,1457,4.543]],["title/modules.html",[68,2.585]],["body/modules.html",[20,0.027,63,0.024,64,0.027,65,0.024,67,3.376,68,3.046,78,3.046,87,3.376,899,4.343,902,4.343,924,3.789,1458,5.184,1459,5.931]],["title/overview.html",[1460,3.686]],["body/overview.html",[1,1.658,2,1.446,20,0.031,27,1.338,35,1.507,39,1.507,41,1.507,44,1.391,46,1.391,49,1.507,51,1.391,54,1.391,56,1.391,59,1.391,63,0.02,64,0.025,65,0.02,66,2.88,67,4.42,68,2.598,69,2.88,70,3.705,71,3.705,72,3.705,73,3.233,74,3.705,75,3.705,76,3.705,77,3.705,78,3.424,79,4.524,80,3.705,81,2.88,145,2.364,162,2.88,175,3.233,204,2.163,494,2.364,515,2.598,734,3.516,1460,3.705,1461,4.423,1462,4.423,1463,5.399]],["title/routes.html",[162,2.865]],["body/routes.html",[20,0.027,63,0.024,64,0.027,65,0.024,162,3.429]],["title/miscellaneous/variables.html",[705,2.834,1412,1.753]],["body/miscellaneous/variables.html",[20,0.031,63,0.022,64,0.026,65,0.022,147,0.431,183,0.688,202,3.179,203,3.061,222,3.061,227,2.324,228,2.148,705,3.568,1384,4.09,1385,5.255,1386,4.09,1387,4.09,1388,4.799,1389,4.799,1412,3.179,1444,4.799,1464,5.728,1465,4.881,1466,4.881,1467,4.881,1468,4.881]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":669,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["0).map(skill",{"_index":441,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["0.4",{"_index":1086,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0.6",{"_index":821,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["0.6.3",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["0.712",{"_index":1099,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0.8",{"_index":837,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["0.8.26",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":823,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["000000",{"_index":991,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0b6623",{"_index":985,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["0px",{"_index":730,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["1",{"_index":734,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"overview.html":{}}}],["1.1.9",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["1.25em",{"_index":1100,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["1.9.0",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":714,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["10/10",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":557,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1085,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["10px",{"_index":680,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["11",{"_index":1461,"title":{},"body":{"overview.html":{}}}],["120px",{"_index":1081,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["12px",{"_index":1088,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["13",{"_index":1269,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["13/15",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":1084,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["14px",{"_index":1096,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["15",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":1078,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["16px",{"_index":316,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["18/20",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":682,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["2",{"_index":494,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{},"overview.html":{}}}],["2.5.4",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1021,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["2000",{"_index":532,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["20px",{"_index":558,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["222",{"_index":1082,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["222222",{"_index":685,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["230px",{"_index":1080,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["24px",{"_index":825,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["25px",{"_index":688,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UserProjectsComponent.html":{}}}],["26px",{"_index":816,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["28px",{"_index":828,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["2].includes(this.selectedtask.state",{"_index":1046,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["2px",{"_index":1002,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["3",{"_index":986,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["3/19",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":552,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["300px",{"_index":672,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["30px",{"_index":674,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["32px",{"_index":818,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["336699",{"_index":690,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["350px",{"_index":662,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["36px",{"_index":550,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{}}}],["3px",{"_index":832,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["4/4",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1024,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["400",{"_index":1097,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["40px",{"_index":679,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["42",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":731,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5",{"_index":1463,"title":{},"body":{"overview.html":{}}}],["5/6",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1077,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["5px",{"_index":1087,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["6",{"_index":1462,"title":{},"body":{"overview.html":{}}}],["6.2.4",{"_index":1422,"title":{},"body":{"index.html":{}}}],["6.3.3",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":666,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["66",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":687,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["7.2.0",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":819,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["70px",{"_index":735,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["75",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1083,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["83",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":830,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["9/12",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["_filter",{"_index":345,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["_filter(value",{"_index":354,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["_name",{"_index":1304,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["_project",{"_index":1285,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["_skill",{"_index":333,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["_task",{"_index":334,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["_user",{"_index":538,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{}}}],["_user.skills",{"_index":1276,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["absolute",{"_index":827,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["access",{"_index":849,"title":{},"body":{"injectables/ProjectService.html":{}}}],["accessors",{"_index":575,"title":{},"body":{"injectables/HttpService.html":{}}}],["actions",{"_index":312,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{}}}],["activatedroute",{"_index":711,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["activatedroutesnapshot",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["adatai",{"_index":1227,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["adatait",{"_index":1253,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["adatok",{"_index":1279,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["adatot",{"_index":526,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["add",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["add(event",{"_index":1240,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["add/remove",{"_index":778,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["addbluron",{"_index":335,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["added",{"_index":290,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["addmember",{"_index":851,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addmember(projectid",{"_index":859,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addnewproject",{"_index":852,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addnewproject(project",{"_index":861,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addnewskill",{"_index":1120,"title":{},"body":{"injectables/SkillService.html":{}}}],["addnewskill(skill",{"_index":1127,"title":{},"body":{"injectables/SkillService.html":{}}}],["adds",{"_index":376,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["addskill",{"_index":346,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/UserService.html":{}}}],["addskill(event",{"_index":373,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["addskill(userid",{"_index":1322,"title":{},"body":{"injectables/UserService.html":{}}}],["addtask",{"_index":903,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["addtask(task",{"_index":1181,"title":{},"body":{"injectables/TaskService.html":{}}}],["adni",{"_index":529,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["again",{"_index":511,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["align",{"_index":554,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["allskills",{"_index":336,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["alltasks",{"_index":445,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["alltasks.filter(task",{"_index":448,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["already",{"_index":282,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["always",{"_index":707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["am)legend",{"_index":1051,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["angular",{"_index":1419,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/keycodes",{"_index":421,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["angular/common",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"components/ProjectTasksComponent.html":{}}}],["angular/compiler",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"dependencies.html":{}}}],["answer",{"_index":505,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"interfaces/RegistrationData.html":{}}}],["anybody",{"_index":1156,"title":{},"body":{"classes/Task.html":{}}}],["api",{"_index":569,"title":{},"body":{"injectables/HttpService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"index.html":{}}}],["app.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":605,"title":{},"body":{"injectables/HttpService.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":144,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":78,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrowhead",{"_index":1006,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["artifacts",{"_index":1439,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1199,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":283,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["assignedtasks",{"_index":1202,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["assignedusers",{"_index":260,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["assignees",{"_index":1141,"title":{},"body":{"classes/Task.html":{}}}],["assigntasktouser",{"_index":1176,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigntasktouser(taskid",{"_index":1183,"title":{},"body":{"injectables/TaskService.html":{}}}],["associated",{"_index":752,"title":{},"body":{"classes/Project.html":{}}}],["async",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["auser.id).includes(user.id",{"_index":304,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["auth.guard",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authentication",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["authenticationservice",{"_index":23,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":165,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["authservice.currentuser.name",{"_index":718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auto",{"_index":677,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["autocomplete",{"_index":358,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["automatically",{"_index":1430,"title":{},"body":{"index.html":{}}}],["available",{"_index":924,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"modules.html":{}}}],["await",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["backend",{"_index":272,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["backend's",{"_index":850,"title":{},"body":{"injectables/ProjectService.html":{}}}],["background",{"_index":562,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["bar",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basic",{"_index":608,"title":{},"body":{"injectables/HttpService.html":{}}}],["befejez",{"_index":1065,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["befejezett",{"_index":1052,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["befejezte",{"_index":1070,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["befejezése",{"_index":1068,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["before",{"_index":1160,"title":{},"body":{"classes/Task.html":{}}}],["begin",{"_index":921,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["begins",{"_index":920,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["begintask",{"_index":904,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["begintask(taskid",{"_index":1186,"title":{},"body":{"injectables/TaskService.html":{}}}],["being",{"_index":894,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["bejelentkezés",{"_index":660,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["beleértve",{"_index":1228,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["belong",{"_index":961,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["black",{"_index":1106,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["block",{"_index":1104,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["blocked",{"_index":1093,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["blokkolt",{"_index":1055,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["body",{"_index":590,"title":{},"body":{"injectables/HttpService.html":{}}}],["bold",{"_index":686,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["boolean",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":675,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["bottom",{"_index":817,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["box",{"_index":729,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["browse",{"_index":1459,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":157,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":559,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["btoa(`${username}:${password",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["build",{"_index":1438,"title":{},"body":{"index.html":{}}}],["button",{"_index":313,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["calc(50",{"_index":838,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/UserProfileComponent.html":{}}}],["called",{"_index":361,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["canactivate",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":466,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["card",{"_index":813,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["catch",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["cd5555",{"_index":564,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["center",{"_index":555,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["change",{"_index":1432,"title":{},"body":{"index.html":{}}}],["check",{"_index":1456,"title":{},"body":{"index.html":{}}}],["checkavailability",{"_index":905,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["checkavailability(task",{"_index":922,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["checked",{"_index":926,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["checks",{"_index":491,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["child",{"_index":1310,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["child(1",{"_index":843,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["child(2",{"_index":844,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["child(2n",{"_index":841,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["chip",{"_index":410,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["chipinput",{"_index":337,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/Project.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":145,"title":{},"body":{"classes/AppPage.html":{},"classes/Project.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"overview.html":{}}}],["classes/projects",{"_index":294,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["classes/skill",{"_index":423,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["classes/task",{"_index":962,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["classes/user",{"_index":293,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1420,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":646,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["cluster_appmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1434,"title":{},"body":{"index.html":{}}}],["color",{"_index":563,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["combobox",{"_index":359,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["comma",{"_index":414,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["common",{"_index":256,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["communication",{"_index":271,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{}}}],["complete",{"_index":1142,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["completed",{"_index":928,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["completedby",{"_index":1143,"title":{},"body":{"classes/Task.html":{}}}],["compodoc/compodoc",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"overview.html":{}}}],["condensed",{"_index":998,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["console.log('login",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('new",{"_index":1030,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["console.log('project",{"_index":972,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["console.log(await",{"_index":652,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["console.log(json",{"_index":884,"title":{},"body":{"injectables/ProjectService.html":{}}}],["console.log(selecteduser",{"_index":789,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["console.log(typeof",{"_index":1031,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["const",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(dialog",{"_index":629,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(dialogref",{"_index":485,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["constructor(httpclient",{"_index":576,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(httpservice",{"_index":1125,"title":{},"body":{"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(name",{"_index":740,"title":{},"body":{"classes/Project.html":{},"classes/Skill.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":477,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(projectservice",{"_index":1289,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["constructor(route",{"_index":764,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["constructor(skillservice",{"_index":348,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(userservice",{"_index":265,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["contains",{"_index":276,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["content",{"_index":604,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["context",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributes",{"_index":781,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["contributing",{"_index":1212,"title":{},"body":{"classes/User.html":{}}}],["control",{"_index":405,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["converted",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1347,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["createproject",{"_index":1287,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["creates",{"_index":269,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["criterias",{"_index":496,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["csatlakozik",{"_index":1064,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["csatlakozás",{"_index":1060,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["current",{"_index":1246,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["currently",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProjectTasksComponent.html":{}}}],["currentuser",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["cursor",{"_index":692,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["curve",{"_index":1008,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["custom",{"_index":1094,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["d3",{"_index":782,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"dependencies.html":{}}}],["d3.curvebasis",{"_index":1009,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["d3.select('svg",{"_index":967,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dagre",{"_index":963,"title":{},"body":{"components/ProjectTasksComponent.html":{},"dependencies.html":{}}}],["dagred3",{"_index":954,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dagred3.graphlib.graph().setgraph",{"_index":976,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dagred3.render",{"_index":969,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["data",{"_index":261,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["date",{"_index":743,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["dates",{"_index":1101,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["datetostring",{"_index":898,"title":{},"body":{"components/ProjectTasksComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["datetostring(date",{"_index":1415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datetostring(selectedtask.completiontime",{"_index":1069,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["datetostring(selectedtask.starttime",{"_index":1067,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deadline",{"_index":738,"title":{},"body":{"classes/Project.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":284,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["default",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":151,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["definitely",{"_index":772,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["deletable",{"_index":932,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["delete",{"_index":571,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{}}}],["delete(route",{"_index":579,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletebtnvisibility",{"_index":906,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deleted",{"_index":935,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deleteproject",{"_index":853,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deleteproject(projectid",{"_index":863,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deletes",{"_index":934,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["deleteskill",{"_index":1121,"title":{},"body":{"injectables/SkillService.html":{}}}],["deleteskill(skillid",{"_index":1129,"title":{},"body":{"injectables/SkillService.html":{}}}],["deletetask",{"_index":907,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["deletetask(taskid",{"_index":1188,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteuser",{"_index":1312,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1325,"title":{},"body":{"injectables/UserService.html":{}}}],["dependecy",{"_index":946,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":890,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["depending",{"_index":503,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["description",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["details",{"_index":845,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["determines",{"_index":930,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["dev",{"_index":1427,"title":{},"body":{"index.html":{}}}],["development",{"_index":1423,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["dialogaddmembercomponent",{"_index":35,"title":{"components/DialogAddMemberComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogaddtaskcomponent",{"_index":39,"title":{"components/DialogAddTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogcreateprojectcomponent",{"_index":41,"title":{"components/DialogCreateProjectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":476,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProjectsComponent.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":788,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["dialogregistrationcomponent",{"_index":44,"title":{"components/DialogRegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogs/dialog",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["different",{"_index":417,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["directive",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1437,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1441,"title":{},"body":{"index.html":{}}}],["display",{"_index":1102,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["dist",{"_index":1440,"title":{},"body":{"index.html":{}}}],["divider",{"_index":834,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["documentation",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["done",{"_index":1090,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["duration",{"_index":531,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["during",{"_index":510,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["duty",{"_index":621,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["dv",{"_index":717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["e2e",{"_index":1451,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":146,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":847,"title":{},"body":{"injectables/ProjectService.html":{}}}],["edit",{"_index":881,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/UserService.html":{}}}],["edited",{"_index":958,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["editproject",{"_index":854,"title":{},"body":{"injectables/ProjectService.html":{}}}],["editproject(project",{"_index":865,"title":{},"body":{"injectables/ProjectService.html":{}}}],["editskill",{"_index":1122,"title":{},"body":{"injectables/SkillService.html":{}}}],["editskill(skill",{"_index":1132,"title":{},"body":{"injectables/SkillService.html":{}}}],["edituser",{"_index":1313,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(user",{"_index":1327,"title":{},"body":{"injectables/UserService.html":{}}}],["egyezik",{"_index":537,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["egyéb",{"_index":1308,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["element",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["element(by.css('app",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":397,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["elements",{"_index":365,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["elmenti",{"_index":1249,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["email",{"_index":517,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["end",{"_index":939,"title":{},"body":{"components/ProjectTasksComponent.html":{},"index.html":{}}}],["endpoint",{"_index":584,"title":{},"body":{"injectables/HttpService.html":{}}}],["endpoints",{"_index":274,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/ProjectService.html":{}}}],["ends",{"_index":938,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["endtask",{"_index":908,"title":{},"body":{"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{}}}],["endtask(taskid",{"_index":1190,"title":{},"body":{"injectables/TaskService.html":{}}}],["endtime",{"_index":1144,"title":{},"body":{"classes/Task.html":{}}}],["enter",{"_index":413,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["entrycomponents",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["etc",{"_index":891,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["event",{"_index":379,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["event.charcode",{"_index":1268,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["event.input",{"_index":453,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["event.option.viewvalue",{"_index":1275,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["event.value",{"_index":454,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["example",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["execute",{"_index":1449,"title":{},"body":{"index.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["ez",{"_index":1222,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["false",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":547,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["fasle",{"_index":1150,"title":{},"body":{"classes/Task.html":{}}}],["feladat",{"_index":464,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["felhasznál",{"_index":1251,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["felhasználók",{"_index":723,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["felvétele",{"_index":307,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{}}}],["ffcc00",{"_index":990,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["fff",{"_index":829,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["ffffff",{"_index":565,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["field",{"_index":364,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["fields",{"_index":492,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1433,"title":{},"body":{"index.html":{}}}],["fill",{"_index":999,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["fillcolor",{"_index":979,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["filled",{"_index":493,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["filtered",{"_index":368,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["filteredoptions",{"_index":338,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["filters",{"_index":356,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["filtervalue",{"_index":437,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["final",{"_index":366,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["fixed",{"_index":727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flag",{"_index":1443,"title":{},"body":{"index.html":{}}}],["float",{"_index":839,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["folyamatban",{"_index":1053,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["font",{"_index":546,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["footer",{"_index":835,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["form",{"_index":321,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["form's",{"_index":635,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["form.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.html",{"_index":625,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.scss",{"_index":624,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts",{"_index":618,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:24",{"_index":631,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:27",{"_index":647,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":632,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:49",{"_index":633,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":645,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form/login",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":403,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["formgroup",{"_index":648,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["frissíti",{"_index":1250,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["frontend",{"_index":1210,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fuck",{"_index":393,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["full",{"_index":479,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["function",{"_index":360,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["functions",{"_index":1413,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1452,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1436,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1418,"title":{},"body":{"index.html":{}}}],["get(route",{"_index":587,"title":{},"body":{"injectables/HttpService.html":{}}}],["getallprojects",{"_index":855,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getallskills",{"_index":1123,"title":{},"body":{"injectables/SkillService.html":{}}}],["getassignedtasks",{"_index":1314,"title":{},"body":{"injectables/UserService.html":{}}}],["getassignedtasks(userid",{"_index":1329,"title":{},"body":{"injectables/UserService.html":{}}}],["getmembers",{"_index":856,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getmembers(projectid",{"_index":868,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getoptions",{"_index":600,"title":{},"body":{"injectables/HttpService.html":{}}}],["getownprojects",{"_index":1315,"title":{},"body":{"injectables/UserService.html":{}}}],["getownprojects(userid",{"_index":1331,"title":{},"body":{"injectables/UserService.html":{}}}],["getparagraphtext",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["getproject",{"_index":857,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getproject(projectid",{"_index":870,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojects",{"_index":1316,"title":{},"body":{"injectables/UserService.html":{}}}],["getprojects(userid",{"_index":1333,"title":{},"body":{"injectables/UserService.html":{}}}],["getskill",{"_index":1124,"title":{},"body":{"injectables/SkillService.html":{}}}],["getskill(skillid",{"_index":1135,"title":{},"body":{"injectables/SkillService.html":{}}}],["getskillsofuser",{"_index":1317,"title":{},"body":{"injectables/UserService.html":{}}}],["getskillsofuser(userid",{"_index":1335,"title":{},"body":{"injectables/UserService.html":{}}}],["gettask",{"_index":1177,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettask(taskid",{"_index":1192,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasks",{"_index":1178,"title":{},"body":{"injectables/TaskService.html":{}}}],["getting",{"_index":1417,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1318,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(id",{"_index":1337,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1319,"title":{},"body":{"injectables/UserService.html":{}}}],["give",{"_index":323,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["given",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProjectTasksComponent.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":914,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["globals",{"_index":964,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["go",{"_index":1455,"title":{},"body":{"index.html":{}}}],["going",{"_index":509,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["graph",{"_index":899,"title":{},"body":{"components/ProjectTasksComponent.html":{},"modules.html":{}}}],["green",{"_index":984,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["guard",{"_index":175,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":545,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["h1')).gettext",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["h2",{"_index":678,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["half",{"_index":1076,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["handler",{"_index":634,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["having",{"_index":1115,"title":{},"body":{"classes/Skill.html":{}}}],["header",{"_index":814,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["headers",{"_index":603,"title":{},"body":{"injectables/HttpService.html":{}}}],["headers['authorization",{"_index":607,"title":{},"body":{"injectables/HttpService.html":{}}}],["height",{"_index":831,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["help",{"_index":1453,"title":{},"body":{"index.html":{}}}],["helper",{"_index":915,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["hiba",{"_index":530,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["hidden",{"_index":812,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["holds",{"_index":957,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["hover",{"_index":689,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["http",{"_index":592,"title":{},"body":{"injectables/HttpService.html":{}}}],["http.service",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1429,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":598,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclient",{"_index":577,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectTasksComponent.html":{}}}],["httpclientmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":602,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpheaders(headers",{"_index":609,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpservice",{"_index":233,"title":{"injectables/HttpService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["icon",{"_index":826,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["id",{"_index":709,"title":{},"body":{"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":749,"title":{},"body":{"classes/Project.html":{}}}],["ignore",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogCreateProjectComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["implemented",{"_index":895,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["implements",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":317,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":147,"title":{"index.html":{}},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":324,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["initgraph",{"_index":909,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["initializes",{"_index":703,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["inject",{"_index":291,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{}}}],["inject(mat_dialog_data",{"_index":285,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{}}}],["injectable",{"_index":194,"title":{"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":275,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["inline",{"_index":1103,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["inner",{"_index":1011,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["inner.attr('transform",{"_index":1019,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["input",{"_index":363,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["instance",{"_index":270,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["interface",{"_index":515,"title":{"interfaces/RegistrationData.html":{}},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1107,"title":{},"body":{"interfaces/RegistrationData.html":{}}}],["isopen",{"_index":1145,"title":{},"body":{"classes/Task.html":{}}}],["item.name",{"_index":456,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["j",{"_index":305,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{}}}],["jelsz",{"_index":535,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["join",{"_index":1157,"title":{},"body":{"classes/Task.html":{}}}],["jointask",{"_index":1050,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["js",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":586,"title":{},"body":{"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["json.parse(json.stringify(this.authservice.currentuser",{"_index":1267,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["json.stringify(member",{"_index":883,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(project",{"_index":877,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(skill",{"_index":1138,"title":{},"body":{"injectables/SkillService.html":{},"injectables/UserService.html":{}}}],["json.stringify(task",{"_index":1197,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(user",{"_index":1198,"title":{},"body":{"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["karma",{"_index":1450,"title":{},"body":{"index.html":{}}}],["kell",{"_index":528,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["key",{"_index":887,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["keyboard_backspace",{"_index":721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["keyboardevent",{"_index":1241,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["keypress",{"_index":362,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["kezdete",{"_index":1066,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["kezeli",{"_index":1224,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["kilépés",{"_index":724,"title":{},"body":{"components/NavbarComponent.html":{}}}],["knows",{"_index":394,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["komponens",{"_index":1223,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["képességek",{"_index":1280,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["képességeket",{"_index":1229,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["két",{"_index":534,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["közreműködők",{"_index":1058,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["label",{"_index":995,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["labelstyle",{"_index":996,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["last",{"_index":842,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["lbl",{"_index":1089,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["leader",{"_index":322,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Project.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["leaderid",{"_index":739,"title":{},"body":{"classes/Project.html":{}}}],["left",{"_index":728,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["legend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"overview.html":{}}}],["length",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["line",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["line:max",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["list",{"_index":281,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["literal",{"_index":351,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["llapot",{"_index":1061,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["logged",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["login(username",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginform",{"_index":626,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":46,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logs",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["managed",{"_index":952,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["management",{"_index":889,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["map",{"_index":419,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["map((src",{"_index":432,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["margin",{"_index":314,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["mat",{"_index":311,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["mat_dialog_data",{"_index":292,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{}}}],["matautocomplete",{"_index":339,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["matautocompletemodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompleteselectedevent",{"_index":1255,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["matbuttonmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":367,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["matcheckboxmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":371,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipinputevent",{"_index":374,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["matchipsmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":630,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["matdialogmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":475,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["matdividermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":409,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["matgridlistmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["matsnackbarmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["meg",{"_index":527,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["megadott",{"_index":1252,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["megkezd",{"_index":1063,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["megkezdhet",{"_index":1054,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["member",{"_index":255,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["member'},{'name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["member.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{}}}],["member.component.html",{"_index":259,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.scss",{"_index":258,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts",{"_index":253,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"coverage.html":{}}}],["member.component.ts:32",{"_index":287,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:41",{"_index":280,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:50",{"_index":268,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:63",{"_index":286,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:66",{"_index":279,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member/dialog",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{}}}],["membername",{"_index":873,"title":{},"body":{"injectables/ProjectService.html":{}}}],["memberof",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["members",{"_index":278,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"classes/Task.html":{}}}],["members'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["members.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["members.component.html",{"_index":758,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.scss",{"_index":757,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts",{"_index":755,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{}}}],["members.component.ts:110",{"_index":771,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:124",{"_index":769,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":777,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:42",{"_index":775,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:50",{"_index":779,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:58",{"_index":780,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:66",{"_index":765,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:72",{"_index":776,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:75",{"_index":766,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:87",{"_index":767,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{}}}],["mentés",{"_index":309,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/UserProfileComponent.html":{}}}],["message",{"_index":500,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["met",{"_index":497,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["methods",{"_index":148,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":1079,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["miscellaneous",{"_index":1412,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["module's",{"_index":642,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1454,"title":{},"body":{"index.html":{}}}],["mycontrol",{"_index":340,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["mégsem",{"_index":310,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":369,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["navbar",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["navbar.component.html",{"_index":699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":49,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1428,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["nem",{"_index":536,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["new",{"_index":329,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newproject",{"_index":1305,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["newtask",{"_index":1029,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["newtask.prerequisites",{"_index":1032,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["next",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{}}}],["ng",{"_index":1425,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":264,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["node",{"_index":947,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["node.task",{"_index":1037,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nodeclicker",{"_index":910,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nodeclicker(id",{"_index":942,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nodes",{"_index":945,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["none",{"_index":822,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["not(:last",{"_index":1309,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["note",{"_index":892,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["nth",{"_index":840,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/UserProfileComponent.html":{}}}],["null",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":412,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["nyílt",{"_index":468,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["object",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddTaskComponent.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{}}}],["onclick",{"_index":944,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["one",{"_index":706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["onsubmit",{"_index":627,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["opacity",{"_index":820,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["openaddmemberdialog",{"_index":761,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["openregdialog",{"_index":628,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["opens",{"_index":622,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["option",{"_index":467,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["option.name.tolowercase().indexof(filtervalue",{"_index":440,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["optional",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":357,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{}}}],["orange",{"_index":1091,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["otherwise",{"_index":501,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{}}}],["out",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":811,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["overview",{"_index":1460,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownedprojects",{"_index":1203,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["owner",{"_index":742,"title":{},"body":{"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["owners",{"_index":1109,"title":{},"body":{"classes/Skill.html":{}}}],["ownprojects",{"_index":1286,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["p.id).includes(project.id",{"_index":1302,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["package",{"_index":1392,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":673,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["page",{"_index":644,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["panel",{"_index":809,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["param",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"injectables/HttpService.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["parameter",{"_index":372,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/NavbarComponent.html":{}}}],["parameters",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(this.route.snapshot.parammap.get('pid",{"_index":713,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["parseint(this.route.snapshot.parammap.get('uid",{"_index":716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["part",{"_index":888,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["passwd",{"_index":482,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["passwd2",{"_index":483,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["password",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["passwords",{"_index":495,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["patch",{"_index":572,"title":{},"body":{"injectables/HttpService.html":{}}}],["patch(route",{"_index":589,"title":{},"body":{"injectables/HttpService.html":{}}}],["path",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["pid",{"_index":700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["placeholder",{"_index":1072,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["pointer",{"_index":693,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["pops",{"_index":498,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["position",{"_index":726,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["post",{"_index":573,"title":{},"body":{"injectables/HttpService.html":{}}}],["post(route",{"_index":594,"title":{},"body":{"injectables/HttpService.html":{}}}],["pre.id).complete",{"_index":1027,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["prerequisites",{"_index":927,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["prerequisities",{"_index":326,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["private",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["process",{"_index":389,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["prod",{"_index":1442,"title":{},"body":{"index.html":{}}}],["production",{"_index":1444,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["profile",{"_index":1230,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["profile.component",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":1233,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":1232,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1221,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:105",{"_index":1247,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1260,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1258,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1265,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:32",{"_index":1261,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1264,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1263,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1262,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1257,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1259,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:39",{"_index":1238,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:52",{"_index":1239,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1243,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1242,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":1245,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:84",{"_index":1256,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":1248,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilát",{"_index":1225,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["progress",{"_index":988,"title":{},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["project",{"_index":52,"title":{"classes/Project.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["project's",{"_index":744,"title":{},"body":{"classes/Project.html":{},"components/ProjectMembersComponent.html":{}}}],["project'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["project(_name",{"_index":1306,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["project.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/UserProjectsComponent.html":{}}}],["project.component.html",{"_index":471,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.component.scss",{"_index":470,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.component.ts",{"_index":469,"title":{},"body":{"components/DialogCreateProjectComponent.html":{},"coverage.html":{}}}],["project.component.ts:27",{"_index":474,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.component.ts:38",{"_index":473,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["project.id",{"_index":882,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.members.includes(user.id",{"_index":795,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["project.name",{"_index":801,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["project/dialog",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/DialogCreateProjectComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projectek",{"_index":719,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/UserProjectsComponent.html":{}}}],["projectekben",{"_index":807,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["projectid",{"_index":783,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["projectmemberscomponent",{"_index":51,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectname",{"_index":472,"title":{},"body":{"components/DialogCreateProjectComponent.html":{}}}],["projects",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["projects.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects.component.html",{"_index":1284,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.scss",{"_index":1283,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts",{"_index":1282,"title":{},"body":{"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projects.component.ts:20",{"_index":1295,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:21",{"_index":1294,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:22",{"_index":1290,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:31",{"_index":1292,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:35",{"_index":1293,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects.component.ts:41",{"_index":1291,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["projects/:pid/members",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/:pid/tasks",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/user",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projectservice",{"_index":267,"title":{"injectables/ProjectService.html":{}},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["projecttasks",{"_index":341,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["projecttaskscomponent",{"_index":54,"title":{"components/ProjectTasksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["promise.reject",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise.resolve(this.currentuser",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["properties",{"_index":210,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["property",{"_index":408,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["protractor",{"_index":155,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":918,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["provided",{"_index":391,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["providedin",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":320,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/ProjectService.html":{}}}],["public",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{}}}],["purposes",{"_index":512,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["put",{"_index":574,"title":{},"body":{"injectables/HttpService.html":{}}}],["put(route",{"_index":596,"title":{},"body":{"injectables/HttpService.html":{}}}],["radius",{"_index":676,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["raleway",{"_index":548,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["reactiveformsmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":1457,"title":{},"body":{"index.html":{}}}],["ready",{"_index":1092,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["red",{"_index":980,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["reference",{"_index":913,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["refreshlists",{"_index":1288,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["reg",{"_index":560,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{}}}],["register:hover",{"_index":561,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registered",{"_index":396,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["registeruser",{"_index":1320,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(user",{"_index":1340,"title":{},"body":{"injectables/UserService.html":{}}}],["registration",{"_index":388,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["registration'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["registration.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/LoginFormComponent.html":{}}}],["registration.component.html",{"_index":481,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["registration.component.scss",{"_index":480,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["registration.component.ts",{"_index":478,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["registration.component.ts:36",{"_index":507,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":513,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":508,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:60",{"_index":487,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:68",{"_index":488,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration.component.ts:82",{"_index":489,"title":{},"body":{"components/DialogRegistrationComponent.html":{}}}],["registration/dialog",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["registrationdata",{"_index":516,"title":{"interfaces/RegistrationData.html":{}},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["regisztráci",{"_index":542,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["relative",{"_index":1095,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["reload",{"_index":1431,"title":{},"body":{"index.html":{}}}],["removable",{"_index":342,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["remove",{"_index":1235,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["remove(skill",{"_index":1244,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["removemember",{"_index":858,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removemember(projectid",{"_index":872,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removemember/0",{"_index":885,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removes",{"_index":383,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"components/UserProfileComponent.html":{}}}],["removeskill",{"_index":347,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/UserService.html":{}}}],["removeskill(skilltoremove",{"_index":381,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["removeskill(userid",{"_index":1342,"title":{},"body":{"injectables/UserService.html":{}}}],["removeuser",{"_index":762,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["render",{"_index":900,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["renderer",{"_index":955,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["representation",{"_index":737,"title":{},"body":{"classes/Project.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["representing",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["represents",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavbarComponent.html":{}}}],["request",{"_index":582,"title":{},"body":{"injectables/HttpService.html":{}}}],["requested",{"_index":623,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["require",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":327,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Task.html":{}}}],["requiredby",{"_index":1110,"title":{},"body":{"classes/Skill.html":{},"classes/Task.html":{}}}],["requiredskills",{"_index":1146,"title":{},"body":{"classes/Task.html":{}}}],["requirements",{"_index":378,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["requiring",{"_index":1116,"title":{},"body":{"classes/Skill.html":{},"classes/Task.html":{}}}],["reset",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsible",{"_index":254,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/ProjectTasksComponent.html":{}}}],["rest",{"_index":568,"title":{},"body":{"injectables/HttpService.html":{}}}],["restoreuserdata",{"_index":1236,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":156,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":153,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":1098,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":684,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["rgba(0,0,0,0.4",{"_index":833,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["rgba(0,0,0,0.6",{"_index":732,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rgba(255,255,255,0.1",{"_index":1075,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["rgba(255,255,255,0.15",{"_index":671,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["rgba(255,255,255,0.3",{"_index":667,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["rgba(255,255,255,0.4",{"_index":1074,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["rgba(255,255,255,0.5",{"_index":836,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["rgba(255,255,255,0.6",{"_index":683,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["right",{"_index":315,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["roboto",{"_index":997,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpService.html":{},"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["route",{"_index":583,"title":{},"body":{"injectables/HttpService.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["router",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginFormComponent.html":{}}}],["routermodule",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":162,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":641,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{}}}],["routing.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1424,"title":{},"body":{"index.html":{}}}],["running",{"_index":1445,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddTaskComponent.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":420,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["résztvev",{"_index":306,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["résztvevők",{"_index":802,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["részvétel",{"_index":806,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["saját",{"_index":805,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/UserProjectsComponent.html":{}}}],["save",{"_index":1057,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["saveuserdata",{"_index":1237,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["scaffolding",{"_index":1435,"title":{},"body":{"index.html":{}}}],["select",{"_index":768,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selectable",{"_index":343,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["selected",{"_index":289,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["selected(event",{"_index":1254,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["selectedtask",{"_index":901,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selectedtask.completedby",{"_index":1071,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selectedtask.name",{"_index":1056,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selectedtask.state",{"_index":1062,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["selecteduser",{"_index":262,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["selecteduser.name",{"_index":803,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selecteduser.username",{"_index":804,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["selectuser",{"_index":763,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["selectuser(user",{"_index":770,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["send",{"_index":638,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["sends",{"_index":502,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["sent",{"_index":585,"title":{},"body":{"injectables/HttpService.html":{}}}],["separatorkeyscodes",{"_index":344,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["separators",{"_index":416,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["serve",{"_index":1426,"title":{},"body":{"index.html":{}}}],["server",{"_index":599,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["servers",{"_index":504,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["service",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"injectables/ProjectService.html":{}}}],["services/auth.service",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["services/project.service",{"_index":295,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["services/skill.service",{"_index":422,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["services/task.service",{"_index":424,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["services/user.service",{"_index":296,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["sets",{"_index":640,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["shadow",{"_index":681,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["simple",{"_index":620,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["size",{"_index":549,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["sizing",{"_index":810,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["skill",{"_index":353,"title":{"classes/Skill.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["skill(this.skillcontrol.value",{"_index":1271,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["skill(value",{"_index":458,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["skill.id",{"_index":1139,"title":{},"body":{"injectables/SkillService.html":{}}}],["skill.name",{"_index":436,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["skillcontrol",{"_index":1234,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["skillid",{"_index":1131,"title":{},"body":{"injectables/SkillService.html":{}}}],["skills",{"_index":328,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["skills/add",{"_index":1345,"title":{},"body":{"injectables/UserService.html":{}}}],["skills/remove",{"_index":1346,"title":{},"body":{"injectables/UserService.html":{}}}],["skillservice",{"_index":349,"title":{"injectables/SkillService.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"injectables/SkillService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["skilltoremove",{"_index":384,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["skilltoremove.id",{"_index":463,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["snackbar",{"_index":486,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["solid",{"_index":1073,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["something",{"_index":773,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["sort",{"_index":774,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["span",{"_index":670,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["spec\\.ts",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":433,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../globals.ts",{"_index":1414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:10",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:17",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/classes/projects",{"_index":427,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["src/app/classes/projects.ts",{"_index":736,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/app/classes/projects.ts:17",{"_index":745,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:25",{"_index":750,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:33",{"_index":746,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:41",{"_index":747,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:49",{"_index":748,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:57",{"_index":751,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/projects.ts:65",{"_index":741,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/skill.ts",{"_index":1108,"title":{},"body":{"classes/Skill.html":{},"coverage.html":{}}}],["src/app/classes/skill.ts:18",{"_index":1112,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/skill.ts:26",{"_index":1113,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/skill.ts:34",{"_index":1114,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/skill.ts:42",{"_index":1111,"title":{},"body":{"classes/Skill.html":{}}}],["src/app/classes/task",{"_index":426,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Skill.html":{},"classes/User.html":{}}}],["src/app/classes/task.ts",{"_index":1140,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/classes/task.ts:104",{"_index":1155,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:112",{"_index":1163,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:120",{"_index":1164,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:129",{"_index":1168,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:19",{"_index":1154,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:27",{"_index":1158,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:34",{"_index":1166,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:42",{"_index":1148,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:51",{"_index":1159,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:61",{"_index":1165,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:69",{"_index":1149,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:78",{"_index":1167,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:87",{"_index":1152,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.ts:95",{"_index":1151,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/user",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{}}}],["src/app/classes/user.ts",{"_index":1201,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/classes/user.ts:19",{"_index":1205,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:27",{"_index":1206,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:35",{"_index":1214,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:43",{"_index":1208,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:51",{"_index":1211,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:59",{"_index":1207,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:67",{"_index":1213,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.ts:75",{"_index":1204,"title":{},"body":{"classes/User.html":{}}}],["src/app/dialogs/dialog",{"_index":252,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"coverage.html":{}}}],["src/app/globals.ts",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login",{"_index":617,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:33",{"_index":708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:54",{"_index":702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/project",{"_index":754,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":205,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth.service.ts:41",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth.service.ts:61",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/http.service.ts",{"_index":566,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts:103",{"_index":580,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:16",{"_index":601,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:36",{"_index":578,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:48",{"_index":588,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:62",{"_index":595,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:76",{"_index":597,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:90",{"_index":591,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/project.service",{"_index":428,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"injectables/TaskService.html":{}}}],["src/app/services/project.service.ts",{"_index":846,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/services/project.service.ts:24",{"_index":875,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:35",{"_index":867,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:39",{"_index":862,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:44",{"_index":871,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:48",{"_index":864,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:52",{"_index":866,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:57",{"_index":869,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:61",{"_index":860,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project.service.ts:68",{"_index":874,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/skill.service.ts",{"_index":1119,"title":{},"body":{"injectables/SkillService.html":{},"coverage.html":{}}}],["src/app/services/skill.service.ts:10",{"_index":1137,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:11",{"_index":1126,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:15",{"_index":1134,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:19",{"_index":1128,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:24",{"_index":1136,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:28",{"_index":1130,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/skill.service.ts:32",{"_index":1133,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/app/services/task.service.ts",{"_index":1175,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:13",{"_index":1180,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:17",{"_index":1194,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:21",{"_index":1193,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:25",{"_index":1182,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:30",{"_index":1189,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:34",{"_index":1184,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:39",{"_index":1196,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:44",{"_index":1187,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:48",{"_index":1191,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/user.service",{"_index":514,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["src/app/services/user.service.ts",{"_index":1311,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1321,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1341,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":1339,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1338,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:31",{"_index":1326,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:35",{"_index":1328,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":1336,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:44",{"_index":1323,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:49",{"_index":1343,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:54",{"_index":1332,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:58",{"_index":1334,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":1330,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user",{"_index":1220,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1161,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["startbtnvisibility",{"_index":911,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["started",{"_index":936,"title":{"index.html":{}},"body":{"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["starttime",{"_index":1147,"title":{},"body":{"classes/Task.html":{}}}],["startwith",{"_index":418,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["startwith(null",{"_index":431,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["state",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{}}}],["statements",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":893,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["stored",{"_index":1209,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["stores",{"_index":288,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["string",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["stringified",{"_index":593,"title":{},"body":{"injectables/HttpService.html":{}}}],["stroke",{"_index":1001,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["style",{"_index":1000,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["styles.scss",{"_index":297,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["styles.scss,./dialog",{"_index":257,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{}}}],["styles.scss,./project",{"_index":756,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["styles.scss,./user",{"_index":1231,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["submit",{"_index":636,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subtitle",{"_index":824,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["successful",{"_index":639,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["such",{"_index":325,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["support",{"_index":1458,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":902,"title":{},"body":{"components/ProjectTasksComponent.html":{},"modules.html":{}}}],["személyes",{"_index":1226,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["szerkesztés",{"_index":722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["t",{"_index":581,"title":{},"body":{"injectables/HttpService.html":{}}}],["t.id",{"_index":1026,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["table",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1105,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["takes",{"_index":637,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["task",{"_index":330,"title":{"classes/Task.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["task's",{"_index":377,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task'},{'name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["task.complete",{"_index":983,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["task.component.css",{"_index":331,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.html",{"_index":332,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts",{"_index":318,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:101",{"_index":415,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:108",{"_index":392,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:110",{"_index":399,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:111",{"_index":352,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:128",{"_index":400,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:145",{"_index":355,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:150",{"_index":380,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:164",{"_index":375,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:186",{"_index":382,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:39",{"_index":406,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:47",{"_index":395,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:55",{"_index":390,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:64",{"_index":385,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:71",{"_index":411,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:78",{"_index":407,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:85",{"_index":404,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.component.ts:93",{"_index":401,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["task.id",{"_index":1005,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.name",{"_index":465,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["task.prerequisites.foreach(pre",{"_index":1003,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.project.id",{"_index":449,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["task.starttime",{"_index":987,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task.state",{"_index":982,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["task/dialog",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":1185,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks",{"_index":319,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"classes/Project.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{}}}],["tasks'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["tasks.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["tasks.component.html",{"_index":897,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.scss",{"_index":896,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts",{"_index":886,"title":{},"body":{"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["tasks.component.ts:101",{"_index":912,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:128",{"_index":941,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:142",{"_index":940,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:230",{"_index":923,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:246",{"_index":917,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:272",{"_index":933,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:285",{"_index":943,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:295",{"_index":919,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:310",{"_index":937,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:322",{"_index":929,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:336",{"_index":948,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:45",{"_index":949,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:53",{"_index":953,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:61",{"_index":950,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:69",{"_index":959,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:77",{"_index":951,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:85",{"_index":960,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks.component.ts:93",{"_index":956,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["tasks/project",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["taskservice",{"_index":350,"title":{"injectables/TaskService.html":{}},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["temporary",{"_index":386,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["test",{"_index":1448,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1447,"title":{},"body":{"index.html":{}}}],["text",{"_index":553,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["textcolor",{"_index":981,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["theprojectmapper",{"_index":663,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this._filter(src",{"_index":434,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._task",{"_index":442,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.projectid",{"_index":443,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.requiredskills",{"_index":461,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.requiredskills.filter(skill",{"_index":462,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this._task.requiredskills.push(_skill.id",{"_index":460,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.allskills",{"_index":450,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.allskills.filter(option",{"_index":439,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.allskills.find(item",{"_index":455,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.allskills.map(skill",{"_index":435,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.assignedtasks",{"_index":1219,"title":{},"body":{"classes/User.html":{}}}],["this.assignedusers",{"_index":300,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["this.assignedusers.map(auser",{"_index":303,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.assignees",{"_index":1170,"title":{},"body":{"classes/Task.html":{}}}],["this.authservice.currentuser",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.currentuser.id",{"_index":1044,"title":{},"body":{"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["this.authservice.login",{"_index":653,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.login('atesz",{"_index":659,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.login(username",{"_index":658,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.checkavailability(task",{"_index":992,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.complete",{"_index":1172,"title":{},"body":{"classes/Task.html":{}}}],["this.currentuser",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["this.data.project.id",{"_index":444,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.datetostring",{"_index":965,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.dialog.open(dialogaddmembercomponent",{"_index":787,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.dialog.open(dialogaddtaskcomponent",{"_index":1028,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.dialog.open(dialogcreateprojectcomponent",{"_index":1303,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.dialog.open(dialogregistrationcomponent",{"_index":661,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.dialogref.close",{"_index":543,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.filteredoptions",{"_index":429,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.graph",{"_index":975,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.graph().height",{"_index":1023,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.graph().width",{"_index":1018,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.node(id",{"_index":1036,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.setedge(pre.id",{"_index":1004,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.graph.setnode(task.id",{"_index":994,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.httpclient.delete(this.url",{"_index":616,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.get(this.url",{"_index":610,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.patch(this.url",{"_index":615,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.post(this.url",{"_index":613,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpclient.put(this.url",{"_index":614,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpservice.delete(this.route",{"_index":879,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.httpservice.get('users/1",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpservice.get(this.route",{"_index":876,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.httpservice.post('users/login",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpservice.post(this.route",{"_index":878,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.httpservice.put(this.route",{"_index":880,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.initgraph",{"_index":970,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.isopen",{"_index":1173,"title":{},"body":{"classes/Task.html":{}}}],["this.leaderid",{"_index":753,"title":{},"body":{"classes/Project.html":{}}}],["this.loginform",{"_index":650,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('password').value",{"_index":657,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('username').value",{"_index":656,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.valid",{"_index":655,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.matautocomplete.isopen",{"_index":452,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.mycontrol.valuechanges.pipe",{"_index":430,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.name",{"_index":518,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"classes/Project.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"classes/User.html":{}}}],["this.name.length",{"_index":522,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.nodeclicker(id",{"_index":1015,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.options",{"_index":611,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.ownedprojects",{"_index":1217,"title":{},"body":{"classes/User.html":{}}}],["this.owners",{"_index":1117,"title":{},"body":{"classes/Skill.html":{}}}],["this.ownprojects",{"_index":1298,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.ownprojects.map(p",{"_index":1301,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.passwd",{"_index":520,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.passwd.length",{"_index":524,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.passwd2",{"_index":521,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.password",{"_index":1215,"title":{},"body":{"classes/User.html":{}}}],["this.pid",{"_index":712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.prerequisites",{"_index":1171,"title":{},"body":{"classes/Task.html":{}}}],["this.project",{"_index":784,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["this.project.id",{"_index":974,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.project.leader.id",{"_index":1043,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.project.tasks",{"_index":971,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.projects",{"_index":1216,"title":{},"body":{"classes/User.html":{},"components/UserProjectsComponent.html":{}}}],["this.projects.filter(project",{"_index":1300,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.projectservice.addmember(this.project.id",{"_index":790,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.addnewproject(newproject",{"_index":1307,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.projectservice.getallprojects",{"_index":793,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.getmembers(projectid",{"_index":786,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.getmembers(this.data.id",{"_index":301,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.projectservice.getproject(projectid",{"_index":785,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["this.projectservice.getuserownprojects(user.id).subscribe(projects",{"_index":797,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.getuserprojects(user.id).subscribe(projects",{"_index":796,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projectservice.removemember(this.project.id",{"_index":799,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.projecttasks",{"_index":447,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.refreshlists",{"_index":1296,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.render",{"_index":968,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.render(inner",{"_index":1013,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.requiredby",{"_index":1118,"title":{},"body":{"classes/Skill.html":{},"classes/Task.html":{}}}],["this.requiredskills",{"_index":1169,"title":{},"body":{"classes/Task.html":{}}}],["this.router.navigate",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["this.router.navigate([`/users/${this.authservice.currentuser.id}/projects",{"_index":654,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.selectedtask",{"_index":1035,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.assignees.length",{"_index":1042,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.assignees.map(user",{"_index":1047,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.complete",{"_index":1045,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.starttime",{"_index":1038,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selectedtask.state",{"_index":1049,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.selecteduser",{"_index":791,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.selecteduser.username",{"_index":800,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.skillcontrol.setvalue",{"_index":1273,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.skillcontrol.valuechanges.pipe",{"_index":1266,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.skills",{"_index":1218,"title":{},"body":{"classes/User.html":{}}}],["this.skillservice.addnewskill(_skill",{"_index":459,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["this.skillservice.addnewskill(new",{"_index":1270,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.skillservice.getallskills",{"_index":451,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('a",{"_index":533,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.snackbar.open('minden",{"_index":525,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.snackbar.open('sikeres",{"_index":541,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.snackbar.open('sikertelen",{"_index":544,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.state",{"_index":1174,"title":{},"body":{"classes/Task.html":{}}}],["this.svg",{"_index":966,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.append('g",{"_index":1012,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.attr('height",{"_index":1022,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.attr('width",{"_index":1017,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.selectall('*').remove",{"_index":1010,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.svg.selectall('g.node').on('click",{"_index":1014,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks",{"_index":973,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks.find(t",{"_index":1025,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks.foreach(task",{"_index":978,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.tasks.length",{"_index":977,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.addtask(newtask",{"_index":1033,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.assigntasktouser(this.selectedtask.id",{"_index":1040,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.begintask(this.selectedtask.id",{"_index":1039,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.deletetask(this.selectedtask.id",{"_index":1034,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.endtask(this.selectedtask.id",{"_index":1041,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["this.taskservice.gettasks",{"_index":446,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["this.uid",{"_index":715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.username",{"_index":519,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["this.username.length",{"_index":523,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.userownprojects",{"_index":798,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.userprojects",{"_index":792,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.userprojects.filter(project",{"_index":794,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["this.users",{"_index":298,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.users.filter(user",{"_index":302,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.userservice.addskill(this.currentuser.id",{"_index":1272,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.edituser(_user",{"_index":1277,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.getownprojects(this.authservice.currentuser.id",{"_index":1299,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.userservice.getprojects(this.authservice.currentuser.id",{"_index":1297,"title":{},"body":{"components/UserProjectsComponent.html":{}}}],["this.userservice.getuser(this.currentuser.id",{"_index":1278,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.getusers",{"_index":299,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["this.userservice.registeruser(_user",{"_index":540,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["this.userservice.removeskill(this.currentuser.id",{"_index":1274,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["those",{"_index":370,"title":{},"body":{"components/DialogAddTaskComponent.html":{}}}],["through",{"_index":273,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/LoginFormComponent.html":{}}}],["time",{"_index":1153,"title":{},"body":{"classes/Task.html":{}}}],["title",{"_index":815,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["token",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["toolbar",{"_index":725,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":668,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["topromise",{"_index":612,"title":{},"body":{"injectables/HttpService.html":{}}}],["translate",{"_index":1020,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["transparent",{"_index":808,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["true",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Task.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/RegistrationData.html":{}}}],["tslib",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectTasksComponent.html":{}}}],["two",{"_index":704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["type",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"injectables/HttpService.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(1",{"_index":1281,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["uid",{"_index":701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["unassign",{"_index":1200,"title":{},"body":{"injectables/TaskService.html":{}}}],["unassigntaskfromuser",{"_index":1179,"title":{},"body":{"injectables/TaskService.html":{}}}],["unassigntaskfromuser(taskid",{"_index":1195,"title":{},"body":{"injectables/TaskService.html":{}}}],["undefined",{"_index":457,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["unit",{"_index":1446,"title":{},"body":{"index.html":{}}}],["up",{"_index":499,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{}}}],["url",{"_index":570,"title":{},"body":{"injectables/HttpService.html":{}}}],["use",{"_index":848,"title":{},"body":{"injectables/ProjectService.html":{},"index.html":{}}}],["used",{"_index":387,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["user",{"_index":57,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"classes/Skill.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":643,"title":{},"body":{"components/LoginFormComponent.html":{},"classes/User.html":{}}}],["user(this.name",{"_index":539,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["user.fullname",{"_index":1059,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["user.id",{"_index":1344,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id).includes(this.authservice.currentuser.id",{"_index":1048,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["user.name",{"_index":308,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["userid",{"_index":1324,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RegistrationData.html":{},"classes/User.html":{}}}],["userownprojects",{"_index":759,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["userprofilecomponent",{"_index":56,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprojects",{"_index":760,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["userprojectscomponent",{"_index":59,"title":{"components/UserProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":263,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"classes/Skill.html":{},"classes/Task.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["users/:uid/profile",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/:uid/projects",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["userservice",{"_index":266,"title":{"injectables/UserService.html":{}},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"interfaces/RegistrationData.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["v1.0.4",{"_index":664,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["vagy",{"_index":665,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validateregform",{"_index":484,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["validator",{"_index":490,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["validators",{"_index":649,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.required",{"_index":651,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["value",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogAddTaskComponent.html":{},"injectables/HttpService.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectTasksComponent.html":{},"injectables/SkillService.html":{},"injectables/TaskService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":438,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["var",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddTaskComponent.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["variable",{"_index":916,"title":{},"body":{"components/ProjectTasksComponent.html":{},"coverage.html":{}}}],["variables",{"_index":705,"title":{"miscellaneous/variables.html":{}},"body":{"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["vee",{"_index":1007,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["verification",{"_index":506,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"interfaces/RegistrationData.html":{}}}],["version",{"_index":1421,"title":{},"body":{"index.html":{}}}],["very",{"_index":619,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["via",{"_index":567,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["viewchild",{"_index":425,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["viewchild('auto",{"_index":402,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["viewchild('chipinput",{"_index":398,"title":{},"body":{"components/DialogAddTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["visible",{"_index":931,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["void",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DialogCreateProjectComponent.html":{},"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProjectsComponent.html":{}}}],["want",{"_index":277,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["weight",{"_index":551,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["white",{"_index":993,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["width",{"_index":556,"title":{},"body":{"components/DialogRegistrationComponent.html":{},"components/LoginFormComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProjectsComponent.html":{}}}],["window.localstorage.getitem('token",{"_index":606,"title":{},"body":{"injectables/HttpService.html":{}}}],["window.localstorage.setitem('token",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["work",{"_index":925,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["working",{"_index":1162,"title":{},"body":{"classes/Task.html":{}}}],["wrapper",{"_index":691,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProjectTasksComponent.html":{}}}],["xcenteroffset",{"_index":1016,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["yellow",{"_index":989,"title":{},"body":{"components/ProjectTasksComponent.html":{}}}],["z",{"_index":733,"title":{},"body":{"components/NavbarComponent.html":{}}}],["zone.js",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogAddMemberComponent\n\nDialogAddMemberComponent\n\nAppModule -->\n\nDialogAddMemberComponent->AppModule\n\n\n\n\n\nDialogAddTaskComponent\n\nDialogAddTaskComponent\n\nAppModule -->\n\nDialogAddTaskComponent->AppModule\n\n\n\n\n\nDialogCreateProjectComponent\n\nDialogCreateProjectComponent\n\nAppModule -->\n\nDialogCreateProjectComponent->AppModule\n\n\n\n\n\nDialogRegistrationComponent\n\nDialogRegistrationComponent\n\nAppModule -->\n\nDialogRegistrationComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nAppModule -->\n\nProjectMembersComponent->AppModule\n\n\n\n\n\nProjectTasksComponent\n\nProjectTasksComponent\n\nAppModule -->\n\nProjectTasksComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserProjectsComponent\n\nUserProjectsComponent\n\nAppModule -->\n\nUserProjectsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DialogAddMemberComponent\n                        \n                        \n                            DialogAddTaskComponent\n                        \n                        \n                            DialogCreateProjectComponent\n                        \n                        \n                            DialogRegistrationComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            ProjectTasksComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserProjectsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogAddMemberComponent\n                        \n                        \n                            DialogAddTaskComponent\n                        \n                        \n                            DialogCreateProjectComponent\n                        \n                        \n                            DialogRegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogRegistrationComponent } from './dialogs/dialog-registration/dialog-registration.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n// tslint:disable-next-line:max-line-length\nimport { MatToolbarModule, MatGridListModule, MatAutocompleteModule, MatChipsModule, MatIconModule, MatDatepickerModule, MatNativeDateModule, MatSelectModule, MatSnackBar, MatSnackBarModule, MatDividerModule, MatCheckboxModule } from '@angular/material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UserProjectsComponent } from './user-projects/user-projects.component';\nimport { ProjectTasksComponent } from './project-tasks/project-tasks.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport { DialogCreateProjectComponent } from './dialogs/dialog-create-project/dialog-create-project.component';\nimport { DialogAddMemberComponent } from './dialogs/dialog-add-member/dialog-add-member.component';\nimport { DialogAddTaskComponent } from './dialogs/dialog-add-task/dialog-add-task.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    UserProfileComponent,\n    NavbarComponent,\n    UserProjectsComponent,\n    ProjectTasksComponent,\n    ProjectMembersComponent,\n    DialogRegistrationComponent,\n    DialogCreateProjectComponent,\n    DialogAddMemberComponent,\n    DialogAddTaskComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatIconModule,\n    MatDatepickerModule,\n    FormsModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    BrowserModule,\n    FormsModule,\n    MatDividerModule,\n    HttpClientModule,\n    MatCheckboxModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    DialogRegistrationComponent,\n    DialogCreateProjectComponent,\n    DialogAddMemberComponent,\n    DialogAddTaskComponent,\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ProjectTasksComponent } from './project-tasks/project-tasks.component';\nimport { UserProjectsComponent } from './user-projects/user-projects.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '',                       component: LoginFormComponent, },\n  { path: 'users/:uid/projects',    component: UserProjectsComponent,   canActivate: [AuthGuard] },\n  { path: 'users/:uid/profile',     component: UserProfileComponent,    canActivate: [AuthGuard] },\n  { path: 'projects/:pid/tasks',    component: ProjectTasksComponent,   canActivate: [AuthGuard] },\n  { path: 'projects/:pid/members',  component: ProjectMembersComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Router } from '@angular/router';\nimport { AuthenticationService } from './services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean {\n    if (this.authService.currentUser === null) {\n      this.router.navigate(['']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Authentication service.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Logs in the user with the given username and password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        An object, representing the logged in user.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:61\n                \n            \n\n\n            \n                \n                    Logs out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                        Represents the currently logged in user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { User } from 'src/app/classes/user';\nimport { HttpService } from './http.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Authentication service.\n *\n * @export\n * @class AuthenticationService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Represents the currently logged in user.\n   *\n   * @type {User}\n   * @memberof AuthenticationService\n   */\n  public currentUser: User = null;\n\n  /**\n   * @ignore\n   */\n  constructor(\n    private httpService: HttpService,\n    private router: Router\n  ) { }\n\n  /**\n   * Logs in the user with the given username and password.\n   *\n   * @param {string} username Username\n   * @param {string} password Password\n   * @returns {Promise} An object, representing the logged in user.\n   * @memberof AuthenticationService\n   */\n  public async login(username: string, password: string): Promise {\n    try {\n      const token = btoa(`${username}:${password}`);\n      window.localStorage.setItem('token', token);\n      this.currentUser = await this.httpService.post('users/login', username);\n      // this.currentUser = await this.httpService.get('users/1');\n      return Promise.resolve(this.currentUser);\n    } catch (e) {\n      console.log('LOGIN ERROR:', e);\n      this.currentUser = null;\n      window.localStorage.setItem('token', '');\n      return Promise.reject();\n    }\n  }\n\n  /**\n   * Logs out the user.\n   *\n   * @memberof AuthenticationService\n   */\n  public logout(): void {\n    this.currentUser = null;\n    window.localStorage.setItem('token', '');\n    this.router.navigate(['']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddMemberComponent.html":{"url":"components/DialogAddMemberComponent.html","title":"component - DialogAddMemberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogAddMemberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-add-member/dialog-add-member.component.ts\n\n\n    \n        Description\n    \n    \n        This component is responsible for \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-member\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-add-member.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-add-member.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignedUsers\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                selectedUser\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, projectService: ProjectService, data: Project)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of DialogAddMemberComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service. This service is responsible for the communication with the backend through the '/users/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Project service. This service is responsible for the communication with the backend through the '/projects/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Project\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data injected into this dialog. It contains the project object where we want to add members.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            assignedUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:41\n                            \n                        \n\n                \n                    \n                        List of users that are already assigned to the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:63\n                            \n                        \n\n                \n                    \n                        The data injected into this dialog. It contains the project object where we want to add members.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:32\n                            \n                        \n\n                \n                    \n                        Stores the selected user which will be added to the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-member/dialog-add-member.component.ts:50\n                            \n                        \n\n                \n                    \n                        List of all other (not assigned) users.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { User } from './../../classes/user';\nimport { Project } from './../../classes/projects';\nimport { ProjectService } from './../../services/project.service';\nimport { UserService } from './../../services/user.service';\n\n/**\n * This component is responsible for \n *\n * @export\n * @class DialogAddMemberComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-add-member',\n  templateUrl: './dialog-add-member.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-add-member.component.scss'\n  ]\n})\nexport class DialogAddMemberComponent implements OnInit {\n\n  /**\n   * Stores the selected user which will be added to the project.\n   *\n   * @public\n   * @type {User}\n   * @memberof DialogAddMemberComponent\n   */\n  public selectedUser: User;\n\n  /**\n   * List of users that are already assigned to the project.\n   *\n   * @private\n   * @type {User[]}\n   * @memberof DialogAddMemberComponent\n   */\n  private assignedUsers: User[];\n\n  /**\n   * List of all other (not assigned) users.\n   *\n   * @public\n   * @type {User[]}\n   * @memberof DialogAddMemberComponent\n   */\n  public users: User[];\n\n  /**\n   * Creates an instance of DialogAddMemberComponent.\n   * \n   * @param {UserService} userService User service. This service is responsible for the communication with the backend through the '/users/*' endpoints.\n   * @param {ProjectService} projectService Project service. This service is responsible for the communication with the backend through the '/projects/*' endpoints.\n   * @param {Project} data The data injected into this dialog. It contains the project object where we want to add members.\n   * @memberof DialogAddMemberComponent\n   */\n  constructor(\n    private userService: UserService,\n    private projectService: ProjectService,\n    @Inject(MAT_DIALOG_DATA) public data: Project\n  ) { }\n\n  async ngOnInit() {\n    this.users = await this.userService.getUsers();\n    this.assignedUsers = await this.projectService.getMembers(this.data.id);\n    this.users = this.users.filter(user => !(this.assignedUsers.map(aUser => aUser.id).includes(user.id)));\n  }\n}\n\n    \n\n    \n        \nÚj résztvevő felvétele\n\n\n\n  \n    \n        {{user.name}}\n    \n  \n\n\n\n\n  Mentés\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-add-member.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Új résztvevő felvétele              {{user.name}}        Mentés  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddMemberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddTaskComponent.html":{"url":"components/DialogAddTaskComponent.html","title":"component - DialogAddTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogAddTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-add-task/dialog-add-task.component.ts\n\n\n    \n        Description\n    \n    \n        The component of the 'Add tasks' dialog. This dialog provides a form \nwhere the project leader can give information (such as name, prerequisities and \nand required skills) about the new task in the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-task\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-add-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog-add-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _skill\n                            \n                            \n                                    Public\n                                _task\n                            \n                            \n                                    Public\n                                addBlurOn\n                            \n                            \n                                    Public\n                                allSkills\n                            \n                            \n                                chipInput\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                filteredOptions\n                            \n                            \n                                matAutocomplete\n                            \n                            \n                                    Public\n                                myControl\n                            \n                            \n                                    Public\n                                projectTasks\n                            \n                            \n                                    Public\n                                removable\n                            \n                            \n                                    Public\n                                selectable\n                            \n                            \n                                    Public\n                                separatorKeysCodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                    Public\n                                    Async\n                                addSkill\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                removeSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(skillService: SkillService, taskService: TaskService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:111\n                            \n                        \n\n                \n                    \n                            Creates an instance of DialogAddTaskComponent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        skillService\n                                                  \n                                                        \n                                                                        SkillService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Skill service. This service is responsible for the communication\nwith the backend through the '/skills/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Task service. This service is responsible for the communication\nwith the backend through the '/tasks/*' endpoints.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:145\n                \n            \n\n\n            \n                \n                    Filters the options of the skill autocomplete combobox. This function is called\nafter every keypress.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value of the input field. Elements of the final list will match this string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        The filtered list. It contains the names of those skills that matches the parameter.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSkill(event: MatChipInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:164\n                \n            \n\n\n            \n                \n                    Adds a skill to the task's skill requirements.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatChipInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSkill(skillToRemove: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:186\n                \n            \n\n\n            \n                \n                    Removes a skill from the task's skill requirements.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillToRemove\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _skill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:64\n                            \n                        \n\n                \n                    \n                        Temporary skill object. It is used in the registration process of the \nnew required skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:55\n                            \n                        \n\n                \n                    \n                        Temporary object of the new task. This will be provided to the backend.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addBlurOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:108\n                            \n                        \n\n                \n                    \n                        Fuck knows...???\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allSkills\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:47\n                            \n                        \n\n                \n                    \n                        List of all skills of all users that have ever registered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chipInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chipInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:93\n                            \n                        \n\n                \n                    \n                        Async list of the skill combobox options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('auto')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            myControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:85\n                            \n                        \n\n                \n                    \n                        Form control object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of all tasks in the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:78\n                            \n                        \n\n                \n                    \n                        Property of the Material chip list of skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:71\n                            \n                        \n\n                \n                    \n                        Property of the Material chip list of skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            separatorKeysCodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [ENTER, COMMA]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-add-task/dialog-add-task.component.ts:101\n                            \n                        \n\n                \n                    \n                        Separators of the different skills in the input field.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { startWith, map } from 'rxjs/operators';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { SkillService } from './../../services/skill.service';\nimport { Skill } from './../../classes/skill';\nimport { TaskService } from './../../services/task.service';\nimport { MAT_DIALOG_DATA, MatAutocomplete, MatChipInputEvent } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { Task } from 'src/app/classes/task';\nimport { Project } from 'src/app/classes/projects';\nimport { ProjectService } from 'src/app/services/project.service';\n\n/**\n * The component of the 'Add tasks' dialog. This dialog provides a form \n * where the project leader can give information (such as name, prerequisities and \n * and required skills) about the new task in the project.\n *\n * @export\n * @class DialogAddTaskComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-add-task',\n  templateUrl: './dialog-add-task.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-add-task.component.css'\n  ]\n})\nexport class DialogAddTaskComponent implements OnInit {\n\n  /**\n   * List of all tasks in the project.\n   *\n   * @type {Task[]}\n   * @memberof DialogAddTaskComponent\n   */\n  public projectTasks: Task[];\n\n  /**\n   * List of all skills of all users that have ever registered.\n   *\n   * @type {Skill[]}\n   * @memberof DialogAddTaskComponent\n   */\n  public allSkills: Skill[] = [];\n\n  /**\n   * Temporary object of the new task. This will be provided to the backend.\n   *\n   * @type {Task}\n   * @memberof DialogAddTaskComponent\n   */\n  public _task: Task;\n\n  /**\n   * Temporary skill object. It is used in the registration process of the \n   * new required skills.\n   *\n   * @type {Skill}\n   * @memberof DialogAddTaskComponent\n   */\n  public _skill: Skill;\n\n  /**\n   * Property of the Material chip list of skills.\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public selectable = true;\n\n  /**\n   * Property of the Material chip list of skills.\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public removable = true;\n\n  /**\n   * Form control object.\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public myControl = new FormControl();\n\n  /**\n   * Async list of the skill combobox options.\n   *\n   * @type {Observable}\n   * @memberof DialogAddTaskComponent\n   */\n  public filteredOptions: Observable;\n\n  /**\n   * Separators of the different skills in the input field.\n   *\n   * @type {number[]}\n   * @memberof DialogAddTaskComponent\n   */\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  /**\n   * Fuck knows...???\n   *\n   * @memberof DialogAddTaskComponent\n   */\n  public addBlurOn = true;\n\n  @ViewChild('chipInput') chipInput: ElementRef;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  /**\n   * Creates an instance of DialogAddTaskComponent. \n   * \n   * @param {SkillService} skillService\n   *  Skill service. This service is responsible for the communication\n   *  with the backend through the '/skills/*' endpoints.\n   * @param {TaskService} taskService\n   *  Task service. This service is responsible for the communication\n   *  with the backend through the '/tasks/*' endpoints.\n   * @param {{ project: Project, tasks: Task[] }} data\n   * @memberof DialogAddTaskComponent\n   */\n  constructor(\n    private skillService: SkillService,\n    private taskService: TaskService,\n    @Inject(MAT_DIALOG_DATA) public data: { project: Project, tasks: Task[] }\n  ) {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(null),\n      map((src: string | null) => src ? this._filter(src) : this.allSkills.map(skill => skill.name))\n    );\n  }\n\n  /**\n   * Filters the options of the skill autocomplete combobox. This function is called\n   * after every keypress.\n   *\n   * @private\n   * @param {string} value The value of the input field. Elements of the final list will match this string.\n   * @returns {string[]} The filtered list. It contains the names of those skills that matches the parameter.\n   * @memberof DialogAddTaskComponent\n   */\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.allSkills.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0).map(skill => skill.name);\n  }\n\n  async ngOnInit() {\n    this._task = new Task();\n    this._task.projectId = this.data.project.id;\n    const allTasks: Task[] = await this.taskService.getTasks();\n    this.projectTasks = allTasks.filter(task => task.project.id === this.data.project.id);\n    this.allSkills = await this.skillService.getAllSkills();\n  }\n\n  /**\n   * Adds a skill to the task's skill requirements.\n   *\n   * @param {MatChipInputEvent} event\n   * @memberof DialogAddTaskComponent\n   */\n  public async addSkill(event: MatChipInputEvent) {\n    if (!this.matAutocomplete.isOpen) {\n      const input = event.input;\n      const value = event.value;\n\n      let _skill = this.allSkills.find(item => item.name === value);\n\n      if (_skill === undefined) {\n        _skill = new Skill(value);\n        _skill = await this.skillService.addNewSkill(_skill);\n      }\n\n      this._task.requiredSkills.push(_skill.id);\n    }\n  }\n\n  /**\n   * Removes a skill from the task's skill requirements.\n   *\n   * @param {Skill} skillToRemove\n   * @memberof DialogAddTaskComponent\n   */\n  public async removeSkill(skillToRemove: Skill) {\n    this._task.requiredSkills = this._task.requiredSkills.filter(skill => skill !== skillToRemove.id);\n  }\n}\n\n    \n\n    \n        \nÚj feladat felvétele\n\n\n\n  \n    \n  \n\n  \n    \n      {{task.name}}\n    \n  \n\n  \n\n    \n      \n        {{ skill.name }}\n        cancel\n      \n    \n\n    \n\n    \n      \n        {{option}}\n      \n    \n\n  \n\n  Nyílt feladat?\n\n\n\n\n  Mentés\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-add-task.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Új feladat felvétele                    {{task.name}}                          {{ skill.name }}        cancel                                {{option}}              Nyílt feladat?  Mentés  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogCreateProjectComponent.html":{"url":"components/DialogCreateProjectComponent.html","title":"component - DialogCreateProjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogCreateProjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-create-project/dialog-create-project.component.ts\n\n\n    \n        Description\n    \n    \n        The component of the 'New project' dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-create-project\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-create-project.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-create-project.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                projectName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-create-project/dialog-create-project.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-create-project/dialog-create-project.component.ts:27\n                            \n                        \n\n                \n                    \n                        Name of the new project.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef } from '@angular/material';\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * The component of the 'New project' dialog.\n *\n * @export\n * @class DialogCreateProjectComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-create-project',\n  templateUrl: './dialog-create-project.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-create-project.component.scss'\n  ]\n})\nexport class DialogCreateProjectComponent implements OnInit {\n\n  /**\n   * Name of the new project.\n   *\n   * @type {string}\n   * @memberof DialogCreateProjectComponent\n   */\n  public projectName: string;\n\n  /**\n   * Creates an instance of DialogCreateProjectComponent.\n   * \n   * @ignore\n   * @param {MatDialogRef} dialogRef\n   * @memberof DialogCreateProjectComponent\n   */\n  constructor(private dialogRef: MatDialogRef) { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \nÚj project felvétele\n\n\n  \n    \n  \n\n\n\n  Mentés\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-create-project.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Új project felvétele          Mentés  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogCreateProjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogRegistrationComponent.html":{"url":"components/DialogRegistrationComponent.html","title":"component - DialogRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/dialog-registration/dialog-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the registration dialog. The dialog contains a registration form where\nthe user can add the required information (full name, username and password) for \nthe registration process.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-registration\n            \n\n            \n                styleUrls\n                ../common-dialog-styles.scss,./dialog-registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                passwd\n                            \n                            \n                                    Public\n                                passwd2\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                validateRegForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, snackBar: MatSnackBar, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validateRegForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRegForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:82\n                \n            \n\n\n            \n                \n                    Registration form validator function. It checks if all data fields are filled\nand the 2 passwords match. If any of these criterias are not met it pops up an\nerror message and returns.\nOtherwise it sends the data to the backend and depending on the servers answer\nit pops up a verification or error message.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:36\n                            \n                        \n\n                \n                    \n                        Full name of the new user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                        Password of the new user. This is going to be used for authentication during the login process.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passwd2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:60\n                            \n                        \n\n                \n                    \n                        User password again for verification purposes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialogs/dialog-registration/dialog-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Username of the new user. This is going to be used for authentication during the login process.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/classes/user';\n\nexport interface RegistrationData {\n  name: string;\n  email: string;\n}\n\n/**\n * Component of the registration dialog. The dialog contains a registration form where\n * the user can add the required information (full name, username and password) for \n * the registration process.\n *\n * @export\n * @class DialogRegistrationComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-registration',\n  templateUrl: './dialog-registration.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-registration.component.scss'\n  ]\n})\nexport class DialogRegistrationComponent implements OnInit {\n\n  /**\n   * Full name of the new user.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public name: string;\n\n  /**\n   * Username of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public userName: string;\n\n  /**\n   * Password of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd: string;\n\n  /**\n   * User password again for verification purposes.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd2: string;\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.name = this.userName = this.passwd = this.passwd2 = '';\n  }\n\n  /**\n   * Registration form validator function. It checks if all data fields are filled\n   * and the 2 passwords match. If any of these criterias are not met it pops up an\n   * error message and returns.\n   * Otherwise it sends the data to the backend and depending on the servers answer\n   * it pops up a verification or error message.\n   *\n   * @returns\n   * @memberof DialogRegistrationComponent\n   */\n  public async validateRegForm() {\n\n    if (!this.name.length || !this.userName.length || !this.passwd.length) {\n      this.snackBar.open('Minden adatot meg kell adni!', 'HIBA', { duration: 2000 });\n      return;\n    } else if (this.passwd !== this.passwd2) {\n      this.snackBar.open('A két jelszó nem egyezik meg!', 'HIBA', { duration: 2000 });\n      return;\n    }\n\n    const _user = new User(this.name, this.userName, this.passwd);\n\n    try {\n      await this.userService.registerUser(_user);\n      this.snackBar.open('Sikeres regisztráció.', '', { duration: 2000 });\n      this.dialogRef.close();\n    } catch {\n      this.snackBar.open('Sikertelen regisztráció!', 'HIBA', { duration: 2000 });\n    }\n  }\n}\n\n    \n\n    \n        \nRegisztráció\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n\n  Regisztráció\n  Mégsem\n\n\n    \n\n    \n                \n                    ../common-dialog-styles.scss\n                \n                \nmat-dialog-actions button {\n  margin-right: 16px !important;\n}\n\n                \n                    ./dialog-registration.component.scss\n                \n                \nh1 {\n  font-family: \"Raleway\";\n  font-size: 36px;\n  font-weight: 300;\n  text-align: center;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\nbutton {\n  font-size: 20px;\n}\n\n#btn-reg-register:hover {\n  background-color: #cd5555;\n  color: #ffffff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Regisztráció                                  Regisztráció  Mégsem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is responsible for communication with the backend via REST API.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(route: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:103\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a DELETE request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(route: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:48\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a GET request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(route: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:90\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a PATCH request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the HTTP request. (Stringified JSON.)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(route: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a POST request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the HTTP request. (Stringified JSON.)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(route: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends a PUT request to the backend and returns its answer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Backend endpoint where the request is sent.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the HTTP request. (Stringified JSON.)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The answer of the backend. (Type T JSON object.)\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/http.service.ts:36\n                            \n                        \n\n                \n                    \n                        URL of the backend server.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/http.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n/**\n * This service is responsible for communication with the backend via REST API.\n *\n * @export\n * @class HttpService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private get options() {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n\n    if (window.localStorage.getItem('token')) {\n      headers['Authorization'] = `Basic ${window.localStorage.getItem('token')}`;\n    }\n\n    return {\n      headers: new HttpHeaders(headers)\n    };\n  }\n\n  /**\n   * URL of the backend server.\n   *\n   * @private\n   * @memberof HttpService\n   */\n  private URL = 'http://localhost:8080/';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Sends a GET request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public get(route: string): Promise {\n    return this.httpClient.get(this.URL + route, this.options)\n    .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a POST request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @param {string} body The body of the HTTP request. (Stringified JSON.)\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public post(route: string, body: string): Promise {\n    return this.httpClient.post(this.URL + route, body, this.options)\n      .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a PUT request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @param {string} body The body of the HTTP request. (Stringified JSON.)\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public put(route: string, body: string): Promise {\n    return this.httpClient.put(this.URL + route, body, this.options)\n      .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a PATCH request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @param {string} body The body of the HTTP request. (Stringified JSON.)\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public patch(route: string, body: string): Promise {\n    return this.httpClient.patch(this.URL + route, body, this.options)\n      .toPromise() as Promise;\n  }\n\n  /**\n   * Sends a DELETE request to the backend and returns its answer.\n   *\n   * @template T\n   * @param {string} route Backend endpoint where the request is sent.\n   * @returns {Promise} The answer of the backend. (Type T JSON object.)\n   * @memberof HttpService\n   */\n  public delete(route: string): Promise {\n    return this.httpClient.delete(this.URL + route, this.options)\n      .toPromise() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        The component of the login form. It has 2 very simple duty: it sends the \nauthentication data (username, password) to the backend, or opens up the\nregistration dialog if requested.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                openRegDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, router: Router, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-form/login-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:49\n                \n            \n\n\n            \n                \n                    The event handler of the login form's submit event. It takes the username and\npassword from the input fields and send them to the backend through the \n'authService' service. If the login process is successful it sets the \nrouting module's path to the user's project page. Otherwise it pops up an\nerror message.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openRegDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openRegDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:72\n                \n            \n\n\n            \n                \n                    Opens up the registration dialog if the 'Registration' button is clicked.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogRegistrationComponent } from './../dialogs/dialog-registration/dialog-registration.component';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AuthenticationService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * The component of the login form. It has 2 very simple duty: it sends the \n * authentication data (username, password) to the backend, or opens up the\n * registration dialog if requested.\n *\n * @export\n * @class LoginFormComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n  public loginForm: FormGroup;\n\n  constructor(\n    public dialog: MatDialog,\n    private authService: AuthenticationService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() { }\n\n  /**\n   * The event handler of the login form's submit event. It takes the username and\n   * password from the input fields and send them to the backend through the \n   * 'authService' service. If the login process is successful it sets the \n   * routing module's path to the user's project page. Otherwise it pops up an\n   * error message.\n   *\n   * @memberof LoginFormComponent\n   */\n  async onSubmit() {\n    // console.log(await this.authService.login('', ''));\n    // this.router.navigate([`/users/${this.authService.currentUser.id}/projects`]);\n\n    // if (this.loginForm.valid) {\n      const username = this.loginForm.get('username').value;\n      const password = this.loginForm.get('password').value;\n\n      try {\n        await this.authService.login(username, password);\n        // await this.authService.login('atesz', 'a');\n        this.router.navigate([`/users/${this.authService.currentUser.id}/projects`]);\n      } catch {\n        this.snackBar.open('SIKERTELEN BEJELENTKEZÉS!', 'HIBA', { duration: 2000 });\n      }\n    // }\n  }\n\n  /**\n   * Opens up the registration dialog if the 'Registration' button is clicked.\n   *\n   * @memberof LoginFormComponent\n   */\n  public openRegDialog(): void {\n    const dialogRef = this.dialog.open(DialogRegistrationComponent, {\n      width: '350px'\n    });\n  }\n}\n\n    \n\n    \n        \nTheProjectMapper v1.0.4 \n\n\n\n  Bejelentkezés\n\n  \n\n    \n      \n    \n\n    \n      \n    \n\n    BEJELENTKEZÉS\n    \n      vagy\n      Regisztráció\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                \nh1 {\n  font-size: 60px;\n  font-weight: 300;\n  text-align: center;\n  color: rgba(255,255,255,0.3);\n  margin-top: 0;\n\n  span {\n    font-size: 36px;\n  }\n}\n\n#login-form {\n\n  background-color: rgba(255,255,255,0.15);\n  width: 300px;\n  padding: 30px;\n  border-radius: 20px;\n  margin: auto;\n\n  h2 {\n    font-weight: 300;\n    text-align: center;\n    font-size: 40px;\n    margin-top: 10px;\n    text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n  }\n\n  #btn-login {\n    width: 100%;\n    background-color: rgba(0,0,0,0.1);\n    color: #222222;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 6px;\n    margin-top: 25px;\n\n    &:hover {\n      background-color: #336699;\n      color: #ffffff;\n    }\n  }\n\n  #reg-btn-wrapper {\n    margin-top: 20px;\n    text-align: center;\n\n    span {\n      font-weight: bold;\n      cursor: pointer;\n\n      &:hover {\n        color: #336699;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'TheProjectMapper v1.0.4   Bejelentkezés                                  BEJELENTKEZÉS          vagy      Regisztráció      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        This component represents the top navigation bar in the app.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pid\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Initializes the two variables (uid, pid) from the routing path.\nOne of them will always be NULL.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                        Routing parameter: project ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Routing parameter: user ID.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/auth.service';\n\n/**\n * This component represents the top navigation bar in the app.\n *\n * @export\n * @class NavbarComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  /**\n   * Routing parameter: user ID.\n   *\n   * @type {number}\n   * @memberof NavbarComponent\n   */\n  public uid: number;\n\n  /**\n   * Routing parameter: project ID.\n   *\n   * @type {number}\n   * @memberof NavbarComponent\n   */\n  public pid: number;\n\n  /**\n   * Creates an instance of NavbarComponent.\n   * \n   * @ignore\n   * @param {AuthenticationService} authService\n   * @param {ActivatedRoute} route\n   * @memberof NavbarComponent\n   */\n  constructor(\n    public authService: AuthenticationService,\n    private route: ActivatedRoute\n  ) { }\n\n  /**\n   * Initializes the two variables (uid, pid) from the routing path.\n   * One of them will always be NULL.\n   *\n   * @memberof NavbarComponent\n   */\n  ngOnInit() {\n    this.pid = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.uid = parseInt(this.route.snapshot.paramMap.get('uid'), 10);\n  }\n}\n\n    \n\n    \n        \n\n\n  Üdv {{authService.currentUser.name}}\n\n  Projectek\n  Profil\n\n  \n    keyboard_backspace\n  \n  Szerkesztés\n  Felhasználók\n\n  \n\n  Kilépés\n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                \nmat-toolbar {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 4px rgba(0,0,0,0.6);\n  z-index: 1;\n\n  h2 {\n    margin-right: 70px;\n    margin-left: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Üdv {{authService.currentUser.name}}  Projectek  Profil      keyboard_backspace    Szerkesztés  Felhasználók    Kilépés'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/projects.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a project.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deadline\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                leader\n                            \n                            \n                                    Public\n                                leaderId\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                tasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, leaderId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/projects.ts:65\n                            \n                        \n\n                \n                    \n                            Creates an instance of Project.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of the project.\n\n                                                        \n                                                \n                                                \n                                                        leaderId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User ID of the project owner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:65\n                            \n                        \n\n                \n                    \n                        Date of project's deadline.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:17\n                            \n                        \n\n                \n                    \n                        Project ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            leader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:33\n                            \n                        \n\n                \n                    \n                        The owner of the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            leaderId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:41\n                            \n                        \n\n                \n                    \n                        ???\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:49\n                            \n                        \n\n                \n                    \n                        IDs of project members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:25\n                            \n                        \n\n                \n                    \n                        Name of the project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/projects.ts:57\n                            \n                        \n\n                \n                    \n                        IDs of tasks associated with the project.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\n\n/**\n * Representation of a project.\n *\n * @export\n * @class Project\n */\nexport class Project {\n  \n  /**\n   * Project ID.\n   *\n   * @type {number}\n   * @memberof Project\n   */\n  public id: number;\n\n  /**\n   * Name of the project.\n   *\n   * @type {string}\n   * @memberof Project\n   */\n  public name: string;\n\n  /**\n   * The owner of the project.\n   *\n   * @type {User}\n   * @memberof Project\n   */\n  public leader: User;\n\n  /**\n   * ???\n   *\n   * @type {number}\n   * @memberof Project\n   */\n  public leaderId: number;\n\n  /**\n   * IDs of project members.\n   *\n   * @type {number[]}\n   * @memberof Project\n   */\n  public members: number[];\n\n  /**\n   * IDs of tasks associated with the project.\n   *\n   * @type {number[]}\n   * @memberof Project\n   */\n  public tasks: number[];\n\n  /**\n   * Date of project's deadline.\n   *\n   * @type {Date}\n   * @memberof Project\n   */\n  public deadline: Date;\n\n  /**\n   * Creates an instance of Project.\n   * \n   * @param {string} name Name of the project.\n   * @param {number} leaderId User ID of the project owner.\n   * @memberof Project\n   */\n  constructor(name: string, leaderId: number) {\n    this.name = name;\n    this.leaderId = leaderId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the project members page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignedUsers\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                selectedUser\n                            \n                            \n                                    Public\n                                userOwnProjects\n                            \n                            \n                                    Public\n                                userProjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                openAddMemberDialog\n                            \n                            \n                                    Public\n                                    Async\n                                removeUser\n                            \n                            \n                                    Public\n                                    Async\n                                selectUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UserService, projectService: ProjectService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openAddMemberDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openAddMemberDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:87\n                \n            \n\n\n            \n                \n                    Opens up a dialog where the project owner can select which members should be added\nto the project.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:124\n                \n            \n\n\n            \n                \n                    Removes a user from the project's members list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            selectUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:110\n                \n            \n\n\n            \n                \n                    Definitely does something but what????\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Some sort of user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignedUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of the already assigned project members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                    \n                        \n                            Default value : new Project('', 0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:34\n                            \n                        \n\n                \n                    \n                        The project where we want to add/remove members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:50\n                            \n                        \n\n                \n                    \n                        ???\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userOwnProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:58\n                            \n                        \n\n                \n                    \n                        List of the users own projects.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-members/project-members.component.ts:66\n                            \n                        \n\n                \n                    \n                        List of projects where the user contributes.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { DialogAddMemberComponent } from './../dialogs/dialog-add-member/dialog-add-member.component';\nimport { MatDialog } from '@angular/material';\nimport { ProjectService } from './../services/project.service';\nimport { User } from './../classes/user';\nimport { UserService } from './../services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Project } from '../classes/projects';\nimport { select } from 'd3';\n\n/**\n * Component of the project members page.\n *\n * @export\n * @class ProjectMembersComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './project-members.component.scss'\n  ]\n})\nexport class ProjectMembersComponent implements OnInit {\n\n  /**\n   * The project where we want to add/remove members.\n   *\n   * @type {Project}\n   * @memberof ProjectMembersComponent\n   */\n  public project: Project = new Project('', 0);\n\n  /**\n   * List of the already assigned project members.\n   *\n   * @type {User[]}\n   * @memberof ProjectMembersComponent\n   */\n  public assignedUsers: User[];\n  \n  /**\n   * ???\n   *\n   * @type {User}\n   * @memberof ProjectMembersComponent\n   */\n  public selectedUser: User;\n\n  /**\n   * List of the users own projects.\n   *\n   * @type {Project[]}\n   * @memberof ProjectMembersComponent\n   */\n  public userOwnProjects: Project[];\n\n  /**\n   * List of projects where the user contributes.\n   *\n   * @type {Project[]}\n   * @memberof ProjectMembersComponent\n   */\n  public userProjects: Project[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private projectService: ProjectService,\n    public dialog: MatDialog\n  ) { }\n\n  async ngOnInit() {\n    const projectId: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.project = await this.projectService.getProject(projectId);\n    this.assignedUsers = await this.projectService.getMembers(projectId);\n  }\n\n  /**\n   * Opens up a dialog where the project owner can select which members should be added\n   * to the project.\n   *\n   * @memberof ProjectMembersComponent\n   */\n  public openAddMemberDialog(): void {\n    const dialogRef = this.dialog.open(DialogAddMemberComponent, {\n      width: '350px',\n      data: this.project\n    });\n\n    dialogRef.afterClosed().subscribe(async selectedUser => {\n      console.log(selectedUser);\n\n      if (!selectedUser) { return; }\n      console.log(await this.projectService.addMember(this.project.id, selectedUser));\n      const projectId: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n      this.project = await this.projectService.getProject(projectId);\n      this.assignedUsers = await this.projectService.getMembers(projectId);\n      });\n  }\n\n  /**\n   * Definitely does something but what????\n   *\n   * @param {User} user Some sort of user.\n   * @memberof ProjectMembersComponent\n   */\n  public async selectUser(user: User) {\n    this.selectedUser = user;\n    this.userProjects = await this.projectService.getAllProjects();\n//    this.userProjects = this.userProjects.filter(project => project.members.includes(user.id));\n\n    // this.projectService.getUserProjects(user.id).subscribe(projects => this.userProjects = projects);\n    // this.projectService.getUserOwnProjects(user.id).subscribe(projects => this.userOwnProjects = projects);\n  }\n\n  /**\n   * Removes a user from the project's members list.\n   *\n   * @memberof ProjectMembersComponent\n   */\n  public async removeUser() {\n    await this.projectService.removeMember(this.project.id, this.selectedUser.username);\n    const projectId: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.project = await this.projectService.getProject(projectId);\n    this.assignedUsers = await this.projectService.getMembers(projectId);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  Project: {{project.name}}\n\n  \n\n    \n      Résztvevők:\n      add\n    \n\n    \n\n      \n\n        \n            {{user.name}}\n        \n\n      \n\n    \n\n  \n\n  \n\n    \n      {{selectedUser.name}}\n      [ {{selectedUser.username}} ]\n      delete\n    \n\n    \n\n      \n        \n            Saját projectek:\n        \n        \n          \n            {{project.name}}\n          \n        \n      \n\n      \n        \n            Részvétel projectekben:\n        \n        \n          \n            {{project.name}}\n          \n        \n      \n\n    \n\n  \n\n   -->\n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./project-members.component.scss\n                \n                \nh1 {\n  padding-left: 30px;\n  font-size: 40px;\n  color: rgba(255,255,255,0.5);\n  margin-top: 40px;\n}\n\n#member-list {\n\n  mat-card-subtitle {\n    margin: -24px 0 30px;\n    font-size: 16px;\n    opacity: 0.8;\n  }\n\n  > mat-card-content {\n\n    mat-card {\n      box-sizing: border-box;\n      width: calc(50% - 10px);\n      margin: 0 20px 20px 0;\n      float: left;\n      cursor: pointer;\n\n      &:nth-child(2n) {\n        margin-right: 0;\n      }\n\n      &:nth-last-child(1),\n      &:nth-last-child(2) {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n#member-details {\n\n  > mat-card-content {\n\n    mat-card {\n      box-sizing: border-box;\n      width: 100%;\n      margin-bottom: 20px;\n\n      &:nth-last-child(1) {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Project: {{project.name}}            Résztvevők:      add                                  {{user.name}}                                {{selectedUser.name}}      [ {{selectedUser.username}} ]      delete                                  Saját projectek:                                      {{project.name}}                                                  Részvétel projectekben:                                      {{project.name}}                                 -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project.service.ts\n        \n\n            \n                Description\n            \n            \n                This service provides an easy-to-use access to the backend's '/project/*' endpoints.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMember\n                            \n                            \n                                    Public\n                                addNewProject\n                            \n                            \n                                    Public\n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                getAllProjects\n                            \n                            \n                                    Public\n                                getMembers\n                            \n                            \n                                    Public\n                                getProject\n                            \n                            \n                                    Public\n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMember\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMember(projectID: number, member: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    member\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNewProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject(projectID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMembers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMembers(projectID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProject(projectID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeMember\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMember(projectID: number, memberName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    memberName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'projects/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Project } from './../classes/projects';\nimport { HttpService } from './http.service';\nimport { User } from '../classes/user';\n\n/**\n * This service provides an easy-to-use access to the backend's '/project/*' endpoints.\n *\n * @export\n * @class ProjectService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  /**\n   * \n   *\n   * @private\n   * @memberof ProjectService\n   */\n  private route = 'projects/';\n\n  /**\n   * Creates an instance of ProjectService.\n   * \n   * @ignore\n   * @param {HttpService} httpService\n   * @memberof ProjectService\n   */\n  constructor(private httpService: HttpService) { }\n\n  public getAllProjects(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public addNewProject(project: Project): Promise {\n    const json = JSON.stringify(project);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public getProject(projectID: number): Promise {\n    return this.httpService.get(this.route + projectID);\n  }\n\n  public deleteProject(projectID: number): Promise {\n    return this.httpService.delete(this.route + projectID);\n  }\n\n  public editProject(project: Project): Promise {\n    const json = JSON.stringify(project);\n    return this.httpService.put(this.route + 'edit/' + project.id, json);\n  }\n\n  public getMembers(projectID: number): Promise {\n    return this.httpService.get(this.route + projectID + '/members');\n  }\n\n  public addMember(projectID: number, member: User): Promise {\n    const json = JSON.stringify(member);\n    console.log(json);\n\n    return this.httpService.post(this.route + projectID + '/addMember/', json);\n  }\n\n  public removeMember(projectID: number, memberName: string): Promise {\n    return this.httpService.post(this.route + projectID + '/removeMember/0', `{\"username\": \"${memberName}\"}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectTasksComponent.html":{"url":"components/ProjectTasksComponent.html","title":"component - ProjectTasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectTasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-tasks/project-tasks.component.ts\n\n\n    \n        Description\n    \n    \n        This is the key part of the app. This component is responsible for the \ntask management (dependency tree, etc.) in a project.\nNOTE: This component is still being  implemented.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-tasks\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./project-tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateToString\n                            \n                            \n                                    Private\n                                graph\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Private\n                                render\n                            \n                            \n                                    Public\n                                selectedTask\n                            \n                            \n                                    Private\n                                svg\n                            \n                            \n                                    Public\n                                tasks\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTask\n                            \n                            \n                                    Public\n                                    Async\n                                beginTask\n                            \n                            \n                                    Private\n                                checkAvailability\n                            \n                            \n                                    Public\n                                deleteBtnVisibility\n                            \n                            \n                                    Public\n                                    Async\n                                deleteTask\n                            \n                            \n                                    Public\n                                    Async\n                                endTask\n                            \n                            \n                                    Private\n                                    Async\n                                initGraph\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                nodeClicker\n                            \n                            \n                                    Public\n                                startBtnVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, projectService: ProjectService, taskService: TaskService, userService: UserService, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-tasks/project-tasks.component.ts:101\n                            \n                        \n\n                \n                    \n                            Creates an instance of ProjectTasksComponent.\nSets the reference to a global helper function and initializes the\n'project' variable.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:246\n                \n            \n\n\n            \n                \n                    Adds a task to the project. It opens up a dialog ({DialogAddTaskComponent})\nwhere the project leader can provide the properties of the new task.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            beginTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beginTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:295\n                \n            \n\n\n            \n                \n                    \"Begins\" the selected task. This is an event handler for the \"Begin task\" button.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkAvailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAvailability(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:230\n                \n            \n\n\n            \n                \n                    Checks if a task is available for project member to work on.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The task which is being checked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns TRUE if all prerequisites of the given task are completed.\nOtherwise returns FALSE.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteBtnVisibility\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBtnVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:322\n                \n            \n\n\n            \n                \n                    Determines that the \"Delete task\" button is visible or not. (The task is deletable or not.)\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:272\n                \n            \n\n\n            \n                \n                    Deletes the selected task from the project. A task can only be deleted,\nif it has not yet been started.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            endTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    endTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:310\n                \n            \n\n\n            \n                \n                    \"Ends\" the selected task. This is an event handler for the \"End task\" button.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            initGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:142\n                \n            \n\n\n            \n                \n                    Initializes the task dependency graph.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nodeClicker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nodeClicker(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:285\n                \n            \n\n\n            \n                \n                    'onClick' event handler for the nodes of the task dependecy tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Node ID.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startBtnVisibility\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startBtnVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-tasks/project-tasks.component.ts:336\n                \n            \n\n\n            \n                \n                    Determines that the \"Begin task\" button is visible or not.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateToString\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to a global function.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graph\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:61\n                            \n                        \n\n                \n                    \n                        Graph component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:77\n                            \n                        \n\n                \n                    \n                        The project which is currently managed by its owner.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            render\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:53\n                            \n                        \n\n                \n                    \n                        DagreD3 renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:93\n                            \n                        \n\n                \n                    \n                        This variable holds the selected task which is being edited.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            svg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:69\n                            \n                        \n\n                \n                    \n                        The SVG DOM element where DagreD3 can render.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:85\n                            \n                        \n\n                \n                    \n                        List of all tasks that belong to this project.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project-tasks/project-tasks.component.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Skill } from './../classes/skill';\nimport { AuthenticationService } from './../services/auth.service';\n// import { User } from 'src/app/classes/user';\nimport { DialogAddTaskComponent } from './../dialogs/dialog-add-task/dialog-add-task.component';\nimport { MatDialog } from '@angular/material';\nimport { Task } from './../classes/task';\nimport { TaskService } from './../services/task.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Project } from '../classes/projects';\nimport { ProjectService } from '../services/project.service';\nimport * as d3 from 'd3';\nimport * as dagreD3 from 'dagre-d3';\nimport { UserService } from '../services/user.service';\nimport { dateToString } from '../globals';\nimport { User } from '../classes/user';\n\n/**\n * This is the key part of the app. This component is responsible for the \n * task management (dependency tree, etc.) in a project.\n * \n * NOTE: This component is still being  implemented.\n *\n * @export\n * @class ProjectTasksComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-project-tasks',\n  templateUrl: './project-tasks.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './project-tasks.component.scss'\n  ]\n})\nexport class ProjectTasksComponent implements OnInit {\n\n  /**\n   * Reference to a global function.\n   *\n   * @public\n   * @memberof ProjectTasksComponent\n   */\n  public dateToString;\n\n  /**\n   * DagreD3 renderer.\n   *\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private render;\n\n  /**\n   * Graph component.\n   *\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private graph;\n\n  /**\n   * The SVG DOM element where DagreD3 can render.\n   *\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private svg;\n\n  /**\n   * The project which is currently managed by its owner.\n   *\n   * @type {Project}\n   * @memberof ProjectTasksComponent\n   */\n  public project: Project;\n\n  /**\n   * List of all tasks that belong to this project.\n   *\n   * @type {Task[]}\n   * @memberof ProjectTasksComponent\n   */\n  public tasks: Task[];\n\n  /**\n   * This variable holds the selected task which is being edited.\n   *\n   * @type {Task}\n   * @memberof ProjectTasksComponent\n   */\n  public selectedTask: Task;\n\n  /**\n   * \n   *\n   * @type {User[]}\n   * @memberof ProjectTasksComponent\n   */\n  public users: User[];\n\n  /**\n   * Creates an instance of ProjectTasksComponent.\n   * Sets the reference to a global helper function and initializes the\n   * 'project' variable.\n   * \n   * @param {ActivatedRoute} route\n   * @param {ProjectService} projectService\n   * @param {TaskService} taskService\n   * @param {UserService} userService\n   * @param {AuthenticationService} authService\n   * @param {MatDialog} dialog\n   * @memberof ProjectTasksComponent\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private projectService: ProjectService,\n    private taskService: TaskService,\n    private userService: UserService,\n    private authService: AuthenticationService,\n    private dialog: MatDialog\n  ) {\n    this.dateToString = dateToString;\n    this.project = new Project('', 0);\n  }\n\n  async ngOnInit() {\n    this.svg = d3.select('svg');\n    this.render = new dagreD3.render();\n\n    this.initGraph();\n  }\n\n  /**\n   * Initializes the task dependency graph.\n   *\n   * @private\n   * @returns\n   * @memberof ProjectTasksComponent\n   */\n  private async initGraph() {\n\n    const projectID: number = parseInt(this.route.snapshot.paramMap.get('pid'), 10);\n    this.project = await this.projectService.getProject(projectID);\n    if (this.project.tasks === undefined) {\n      this.project.tasks = [];\n    }\n\n    console.log('PROJECT:', this.project);\n\n    const allTasks: Task[] = await this.taskService.getTasks();\n    this.tasks = allTasks.filter(task => task.project.id === this.project.id);\n\n    console.log('PROJECT TASKS:', this.tasks);\n\n    this.graph = new dagreD3.graphlib.Graph().setGraph({});\n\n    if (!this.tasks.length) {\n      return;\n    }\n\n    this.tasks.forEach(task => {\n      let fillColor = '#cd5555';  // Not available (red)\n      let textColor = '#ffffff';\n\n      task.state = 0;\n\n      if (task.complete) {  // Completed (green)\n        fillColor = '#0b6623';\n        task.state = 3;\n      } else if (task.startTime != null  && !task.complete) {  // In progress (yellow)\n        fillColor = '#ffcc00';\n        textColor = '#000000';\n        task.state = 2;\n      } else if (this.checkAvailability(task)) {  // Available to work on (white)\n        fillColor = '#ffffff';\n        textColor = '#000000';\n        task.state = 1;\n      }\n\n      this.graph.setNode(task.id, {\n        label: task.name,\n        labelStyle:\n          'font-weight: 300;'\n          + 'font-size: 16px;'\n          + 'font-family: \"Roboto Condensed\";'\n          + 'cursor: pointer;'\n          + 'fill: ' + textColor,\n        style:\n          'stroke: #000;'\n          + 'stroke-width: 2px;'\n          + 'cursor: pointer;'\n          + 'fill: ' + fillColor,\n        task: task\n      });\n    });\n\n    this.tasks.forEach(task => {\n      task.prerequisites.forEach(pre => {\n        this.graph.setEdge(pre.id, task.id, {\n          arrowhead: 'vee',\n          curve: d3.curveBasis\n        });\n      });\n    });\n\n    this.svg.selectAll('*').remove();\n    const inner = this.svg.append('g');\n\n    this.render(inner, this.graph);\n\n    this.svg.selectAll('g.node').on('click', id => this.nodeClicker(id));\n\n    const xCenterOffset = (this.svg.attr('width') - this.graph.graph().width) / 2;\n    inner.attr('transform', 'translate(' + xCenterOffset + ', 20)');\n    this.svg.attr('height', this.graph.graph().height + 40);\n  }\n\n  /**\n   * Checks if a task is available for project member to work on.\n   *\n   * @private\n   * @param {Task} task The task which is being checked.\n   * @returns {boolean}\n   *  Returns TRUE if all prerequisites of the given task are completed.\n   *  Otherwise returns FALSE.\n   * @memberof ProjectTasksComponent\n   */\n  private checkAvailability(task: Task): boolean {\n    let available = true;\n    task.prerequisites.forEach(pre => {\n      if (!this.tasks.find(t => t.id === pre.id).complete) {\n        available = false;\n      }\n    });\n    return available;\n  }\n\n  /**\n   * Adds a task to the project. It opens up a dialog ({DialogAddTaskComponent})\n   * where the project leader can provide the properties of the new task.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public addTask(): void {\n    const dialogRef = this.dialog.open(DialogAddTaskComponent, {\n      width: '350px',\n      data: {\n        project: this.project,\n        tasks: this.tasks\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(async newTask => {\n      if (newTask !== undefined) {\n        console.log('NEW TASK:', newTask);\n        console.log(typeof newTask.prerequisites);\n\n        await this.taskService.addTask(newTask);\n        this.initGraph();\n      }\n    });\n  }\n\n  /**\n   * Deletes the selected task from the project. A task can only be deleted,\n   * if it has not yet been started.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public async deleteTask() {\n    await this.taskService.deleteTask(this.selectedTask.id);\n    this.selectedTask = null;\n    this.initGraph();\n  }\n\n  /**\n   * 'onClick' event handler for the nodes of the task dependecy tree.\n   *\n   * @private\n   * @param {string} id Node ID.\n   * @memberof ProjectTasksComponent\n   */\n  private nodeClicker(id: string): void {\n    const node = this.graph.node(id);\n    this.selectedTask = node.task;\n  }\n\n  /**\n   * \"Begins\" the selected task. This is an event handler for the \"Begin task\" button.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public async beginTask() {\n    if (this.selectedTask.startTime === null) {\n      await this.taskService.beginTask(this.selectedTask.id);\n    }\n\n    // await this.taskService.assignTaskToUser(this.selectedTask.id, this.authService.currentUser);\n    this.initGraph();\n    this.selectedTask = null;\n  }\n\n  /**\n   * \"Ends\" the selected task. This is an event handler for the \"End task\" button.\n   *\n   * @memberof ProjectTasksComponent\n   */\n  public async endTask() {\n    await this.taskService.endTask(this.selectedTask.id, this.authService.currentUser);\n    this.initGraph();\n    this.selectedTask = null;\n  }\n\n  /**\n   * Determines that the \"Delete task\" button is visible or not. (The task is deletable or not.)\n   *\n   * @returns {boolean}\n   * @memberof ProjectTasksComponent\n   */\n  public deleteBtnVisibility(): boolean {\n    if (this.selectedTask.assignees.length || this.project.leader.id !== this.authService.currentUser.id || this.selectedTask.complete) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Determines that the \"Begin task\" button is visible or not.\n   *\n   * @returns {boolean}\n   * @memberof ProjectTasksComponent\n   */\n  public startBtnVisibility(): boolean {\n    // tslint:disable-next-line:max-line-length\n    // if ([1, 2].includes(this.selectedTask.state) && !(this.selectedTask.assignees.map(user => user.id).includes(this.authService.currentUser.id))) {\n    if (this.selectedTask.state === 1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Being implemented.\n   *\n   * @ignore\n   * @private\n   * @memberof ProjectTasksComponent\n   */\n  private async joinTask() {\n\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  Project: {{project.name}}\n\n  \n\n    \n      add\n      (I am)LEGEND\n      BEFEJEZETT\n      FOLYAMATBAN\n      MEGKEZDHETŐ\n      BLOKKOLT\n    \n\n    \n\n  \n\n  \n\n    \n      Feladat: {{selectedTask.name}}\n      save -->\n      delete\n    \n\n    \n\n    \n\n        \n      \n\n      \n        \n          {{task.name}}\n        \n      \n\n      \n        Közreműködők: {{user.name}} \n      \n\n      \n        \n          {{user.fullName}}\n        \n      \n -->\n      \n        Csatlakozás\n      \n -->\n      \n        Állapot:\n        \n          {{selectedTask.state === 0 ? \"BLOKKOLT\" : (selectedTask.state === 1 ? \"MEGKEZDHETŐ\" : (selectedTask.state === 2 ? \"FOLYAMATBAN\" : \"BEFEJEZETT\"))}}\n        \n        Megkezd / csatlakozik\n        Befejez\n      \n\n      \n        \n          Feladat kezdete:\n          {{dateToString(selectedTask.startTime)}}\n        \n        \n          Feladat befejezése:\n          {{dateToString(selectedTask.completionTime)}}\n        \n      \n\n      \n        Befejezte:\n        {{selectedTask.completedBy}}\n      \n\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./project-tasks.component.scss\n                \n                \nh1 {\n  padding-left: 30px;\n  font-size: 40px;\n  color: rgba(255,255,255,0.5);\n  margin-top: 40px;\n}\n\n.placeholder {\n  text-align: center;\n  border: solid 1px rgba(255,255,255,0.4);\n  background: rgba(255,255,255,0.1);\n  font-size: 30px;\n}\n\n.half-width {\n  width: 50%;\n}\n\n#graph-wrapper {\n  padding-right: 150px;\n  min-height: 230px;\n\n  #graph {\n    width: 100%;\n  }\n}\n\n#legend {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 120px;\n  background-color: #222;\n\n  mat-icon {\n    top: 20px;\n    right: 20px;\n    width: 80px;\n    text-align: center;\n  }\n\n  label {\n    position: absolute;\n    bottom: 130px;\n    left: 10px;\n    width: 100px;\n    text-align: center;\n    font-size: 16px;\n    color: #ffffff;\n\n    span {\n      font-size: 10px;\n      opacity: 0.4;\n    }\n  }\n\n  .label {\n    position: absolute;\n    width: 100px;\n    left: 10px;\n    padding: 5px;\n    font-size: 12px;\n    box-sizing: border-box;\n    text-align: center;\n    font-weight: bold;\n    border-radius: 5px;\n  }\n\n  .lbl-done {\n    background-color: green;\n    color: #fff;\n    bottom: 100px;\n  }\n\n  .lbl-in-progress {\n    background-color: orange;\n    color: #000;\n    bottom: 70px;\n  }\n\n  .lbl-ready {\n    background-color: white;\n    color: #000;\n    bottom: 40px;\n  }\n\n  .lbl-blocked {\n    background-color: #cd5555;\n    color: #fff;\n    bottom: 10px;\n  }\n}\n\n#task-form-wrapper {\n\n  mat-card-header {\n\n    .btn-save {\n      right: 80px;\n    }\n  }\n\n  mat-card-content {\n\n    .custom-form-field {\n      position: relative;\n      padding: 10px 0;\n      font-size: 14px;\n      font-weight: 400;\n      color: rgba(0, 0, 0, 0.712);\n      margin-bottom: 1.25em;\n\n      .value-field {\n        font-weight: bold;\n        color: #000;\n        padding-left: 6px;\n      }\n\n      &#form-field-dates {\n\n        > span {\n          display: inline-block;\n          width: 50%;\n\n          span {\n            font-weight: bold;\n            color: #000;\n            padding-left: 6px;\n          }\n        }\n      }\n\n      #tag-state {\n\n        font-weight: bold;\n        padding: 6px 10px;\n        margin-left: 20px;\n        border-radius: 3px;\n\n        &.state-3 {\n          background-color: green;\n          color: white;\n        }\n\n        &.state-2 {\n          background-color: orange;\n          color: black;\n        }\n\n        &.state-1 {\n          background-color: white;\n          color: black;\n        }\n\n        &.state-0 {\n          background-color: #cd5555;\n          color: white;\n          }\n      }\n\n      button {\n        float: right;\n        margin: -10px 0 0 10px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Project: {{project.name}}            add      (I am)LEGEND      BEFEJEZETT      FOLYAMATBAN      MEGKEZDHETŐ      BLOKKOLT                      Feladat: {{selectedTask.name}}      save -->      delete                                                  {{task.name}}                            Közreműködők: {{user.name}}                               {{user.fullName}}               -->              Csatlakozás       -->              Állapot:                  {{selectedTask.state === 0 ? \"BLOKKOLT\" : (selectedTask.state === 1 ? \"MEGKEZDHETŐ\" : (selectedTask.state === 2 ? \"FOLYAMATBAN\" : \"BEFEJEZETT\"))}}                Megkezd / csatlakozik        Befejez                              Feladat kezdete:          {{dateToString(selectedTask.startTime)}}                          Feladat befejezése:          {{dateToString(selectedTask.completionTime)}}                            Befejezte:        {{selectedTask.completedBy}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectTasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationData.html":{"url":"interfaces/RegistrationData.html","title":"interface - RegistrationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegistrationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/dialog-registration/dialog-registration.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/classes/user';\n\nexport interface RegistrationData {\n  name: string;\n  email: string;\n}\n\n/**\n * Component of the registration dialog. The dialog contains a registration form where\n * the user can add the required information (full name, username and password) for \n * the registration process.\n *\n * @export\n * @class DialogRegistrationComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dialog-registration',\n  templateUrl: './dialog-registration.component.html',\n  styleUrls: [\n    '../common-dialog-styles.scss',\n    './dialog-registration.component.scss'\n  ]\n})\nexport class DialogRegistrationComponent implements OnInit {\n\n  /**\n   * Full name of the new user.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public name: string;\n\n  /**\n   * Username of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public userName: string;\n\n  /**\n   * Password of the new user. This is going to be used for authentication during the login process.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd: string;\n\n  /**\n   * User password again for verification purposes.\n   *\n   * @type {string}\n   * @memberof DialogRegistrationComponent\n   */\n  public passwd2: string;\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.name = this.userName = this.passwd = this.passwd2 = '';\n  }\n\n  /**\n   * Registration form validator function. It checks if all data fields are filled\n   * and the 2 passwords match. If any of these criterias are not met it pops up an\n   * error message and returns.\n   * Otherwise it sends the data to the backend and depending on the servers answer\n   * it pops up a verification or error message.\n   *\n   * @returns\n   * @memberof DialogRegistrationComponent\n   */\n  public async validateRegForm() {\n\n    if (!this.name.length || !this.userName.length || !this.passwd.length) {\n      this.snackBar.open('Minden adatot meg kell adni!', 'HIBA', { duration: 2000 });\n      return;\n    } else if (this.passwd !== this.passwd2) {\n      this.snackBar.open('A két jelszó nem egyezik meg!', 'HIBA', { duration: 2000 });\n      return;\n    }\n\n    const _user = new User(this.name, this.userName, this.passwd);\n\n    try {\n      await this.userService.registerUser(_user);\n      this.snackBar.open('Sikeres regisztráció.', '', { duration: 2000 });\n      this.dialogRef.close();\n    } catch {\n      this.snackBar.open('Sikertelen regisztráció!', 'HIBA', { duration: 2000 });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Skill.html":{"url":"classes/Skill.html","title":"class - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/skill.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a user skill.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                owners\n                            \n                            \n                                    Public\n                                requiredBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/skill.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of Skill.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of skill.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the skill.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:34\n                            \n                        \n\n                \n                    \n                        List of users having this skill.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiredBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/skill.ts:42\n                            \n                        \n\n                \n                    \n                        List of tasks requiring this skill.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/app/classes/user';\nimport { Task } from 'src/app/classes/task';\n\n/**\n * Representation of a user skill.\n *\n * @export\n * @class Skill\n */\nexport class Skill {\n\n  /**\n   *\n   *\n   * @type {number}\n   * @memberof Skill\n   */\n  public id: number;\n\n  /**\n   * Name of the skill.\n   *\n   * @type {string}\n   * @memberof Skill\n   */\n  public name: string;\n\n  /**\n   * List of users having this skill.\n   *\n   * @type {User[]}\n   * @memberof Skill\n   */\n  public owners: User[];\n\n  /**\n   * List of tasks requiring this skill.\n   *\n   * @type {Task[]}\n   * @memberof Skill\n   */\n  public requiredBy: Task[];\n\n  /**\n   * Creates an instance of Skill.\n   * \n   * @param {string} name Name of skill.\n   * @memberof Skill\n   */\n  constructor(name: string) {\n    this.name = name;\n    this.owners = [];\n    this.requiredBy = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkillService.html":{"url":"injectables/SkillService.html","title":"injectable - SkillService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SkillService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/skill.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                SKILLS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNewSkill\n                            \n                            \n                                    Public\n                                deleteSkill\n                            \n                            \n                                    Public\n                                editSkill\n                            \n                            \n                                    Public\n                                getAllSkills\n                            \n                            \n                                    Public\n                                getSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/skill.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNewSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewSkill(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSkill(skillID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editSkill(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllSkills\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSkills()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSkill(skillID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/skill.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'skills/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/skill.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKILLS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/skill.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Skill } from './../classes/skill';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillService {\n\n  private route = 'skills/';\n  private SKILLS: Skill[];\n\n  constructor(private httpService: HttpService) { }\n\n  public getAllSkills(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public addNewSkill(skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public getSkill(skillID: number): Promise {\n    return this.httpService.get(this.route + skillID);\n  }\n\n  public deleteSkill(skillID: number): Promise {\n    return this.httpService.delete(this.route + 'delete/' + skillID);\n  }\n\n  public editSkill(skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.put(this.route + 'edit/' + skill.id, json);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/task.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a task.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignees\n                            \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                completedBy\n                            \n                            \n                                    Public\n                                endTime\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prerequisites\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                requiredBy\n                            \n                            \n                                    Public\n                                requiredSkills\n                            \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:42\n                            \n                        \n\n                \n                    \n                        List of users assigned to this task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            complete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:69\n                            \n                        \n\n                \n                    \n                        TRUE if the task is completed. Otherwise FASLE.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            completedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:95\n                            \n                        \n\n                \n                    \n                        Name of the member who completed the task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:87\n                            \n                        \n\n                \n                    \n                        Date and time when a member completed this task.\nNULL if not yet completed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:19\n                            \n                        \n\n                \n                    \n                        Task ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:104\n                            \n                        \n\n                \n                    \n                        TRUE if anybody can join to this task.\nFALSE if only the project leader can add members.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:27\n                            \n                        \n\n                \n                    \n                        Name of the task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prerequisites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:51\n                            \n                        \n\n                \n                    \n                        List of prerequisites. These task have to be completed\nbefore assignees can start working on this task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiredBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:61\n                            \n                        \n\n                \n                    \n                        List of task that are requiring this task to be done.\nThese tasks cannot be started before this task is not\ncompleted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiredSkills\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/classes/task.ts:34\n                            \n                        \n\n                \n                    \n                        List of skills required by this task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:78\n                            \n                        \n\n                \n                    \n                        Date and time when members started working on\nthis task. NULL if not yet started.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/task.ts:129\n                            \n                        \n\n                \n                    \n                        State of the project. (0: Not available; 1: Available; 2: In progress;\n3: Completed)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Skill } from './skill';\nimport { Project } from 'src/app/classes/projects';\nimport { User } from './user';\n\n/**\n * Representation of a task.\n *\n * @export\n * @class Task\n */\nexport class Task {\n\n  /**\n   * Task ID.\n   *\n   * @type {number}\n   * @memberof Task\n   */\n  public id: number;\n\n  /**\n   * Name of the task.\n   *\n   * @type {string}\n   * @memberof Task\n   */\n  public name: string;\n\n  /**\n   * List of skills required by this task.\n   *\n   * @memberof Task\n   */\n  public requiredSkills;\n\n  /**\n   * List of users assigned to this task.\n   *\n   * @type {User[]}\n   * @memberof Task\n   */\n  public assignees: User[];\n\n  /**\n   * List of prerequisites. These task have to be completed\n   * before assignees can start working on this task.\n   *\n   * @type {Task[]}\n   * @memberof Task\n   */\n  public prerequisites: Task[];\n\n  /**\n   * List of task that are requiring this task to be done.\n   * These tasks cannot be started before this task is not\n   * completed.\n   *\n   * @type {Task[]}\n   * @memberof Task\n   */\n  public requiredBy: Task[];\n\n  /**\n   * TRUE if the task is completed. Otherwise FASLE.\n   *\n   * @type {boolean}\n   * @memberof Task\n   */\n  public complete: boolean;\n\n  /**\n   * Date and time when members started working on\n   * this task. NULL if not yet started.\n   *\n   * @type {Date}\n   * @memberof Task\n   */\n  public startTime: Date;\n\n  /**\n   * Date and time when a member completed this task.\n   * NULL if not yet completed.\n   *\n   * @type {Date}\n   * @memberof Task\n   */\n  public endTime: Date;\n\n  /**\n   * Name of the member who completed the task.\n   *\n   * @type {string}\n   * @memberof Task\n   */\n  public completedBy: string;\n  \n  /**\n   * TRUE if anybody can join to this task.\n   * FALSE if only the project leader can add members.\n   *\n   * @type {boolean}\n   * @memberof Task\n   */\n  public isOpen: boolean;\n\n  /**\n   *\n   *\n   * @type {Project}\n   * @memberof Task\n   */\n  public project: Project;\n\n  /**\n   *\n   *\n   * @type {number}\n   * @memberof Task\n   */\n  public projectId: number;\n\n  /**\n   * State of the project. (0: Not available; 1: Available; 2: In progress;\n   * 3: Completed)\n   *\n   * @type {number}\n   * @memberof Task\n   */\n  public state: number;\n\n\n  /**\n   * Creates an instance of Task.\n   * \n   * @ignore\n   * @memberof Task\n   */\n  constructor() {\n    this.requiredSkills = [];\n    this.assignees = [];\n    this.prerequisites = [];\n    this.requiredBy = [];\n    this.complete = false;\n    this.isOpen = false;\n    this.state = 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTask\n                            \n                            \n                                    Public\n                                assignTaskToUser\n                            \n                            \n                                    Public\n                                beginTask\n                            \n                            \n                                    Public\n                                deleteTask\n                            \n                            \n                                    Public\n                                endTask\n                            \n                            \n                                    Public\n                                getTask\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Public\n                                unassignTaskFromUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assignTaskToUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignTaskToUser(taskID: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beginTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beginTask(taskID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(taskID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            endTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    endTask(taskID: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTask(taskID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unassignTaskFromUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unassignTaskFromUser(taskID: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tasks/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/task.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ProjectService } from 'src/app/services/project.service';\nimport { Observable, of } from 'rxjs';\nimport { Task } from './../classes/task';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { User } from '../classes/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  private route = 'tasks/';\n\n  constructor(private httpService: HttpService) { }\n\n  public getTasks(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public getTask(taskID: number): Promise {\n    return this.httpService.get(this.route + taskID);\n  }\n\n  public addTask(task: Task): Promise {\n    const json = JSON.stringify(task);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public deleteTask(taskID: number): Promise {\n    return this.httpService.delete(this.route + taskID + '/delete');\n  }\n\n  public assignTaskToUser(taskID: number, user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + taskID + '/assign', json);\n  }\n\n  public unassignTaskFromUser(taskID: number, user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + taskID + '/unassign', json);\n  }\n\n  public beginTask(taskID: number): Promise {\n    return this.httpService.post(this.route + taskID + '/start', '{}');\n  }\n\n  public endTask(taskID: number, user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + taskID + '/complete', json);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/user.ts\n        \n\n            \n                Description\n            \n            \n                Representation of a user.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignedTasks\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                ownedProjects\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                skills\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, userName: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/user.ts:75\n                            \n                        \n\n                \n                    \n                            Creates an instance of User.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of user.\n\n                                                        \n                                                \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Username of user.\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Password of user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignedTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:75\n                            \n                        \n\n                \n                    \n                        List of tasks where this user is assigned to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:19\n                            \n                        \n\n                \n                    \n                        User ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:27\n                            \n                        \n\n                \n                    \n                        Full name of the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownedProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:59\n                            \n                        \n\n                \n                    \n                        List of users own projects.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:43\n                            \n                        \n\n                \n                    \n                        User's password. (Not stored on frontend.)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:51\n                            \n                        \n\n                \n                    \n                        List of projects where this user is contributing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skills\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:67\n                            \n                        \n\n                \n                    \n                        List of user's own skills.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/user.ts:35\n                            \n                        \n\n                \n                    \n                        Username of the user.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from 'src/app/classes/task';\nimport { Skill } from './skill';\nimport { Project } from 'src/app/classes/projects';\n\n/**\n * Representation of a user.\n *\n * @export\n * @class User\n */\nexport class User {\n  \n  /**\n   * User ID.\n   *\n   * @type {number}\n   * @memberof User\n   */\n  public id: number;\n\n  /**\n   * Full name of the user.\n   *\n   * @type {string}\n   * @memberof User\n   */\n  public name: string;\n\n  /**\n   * Username of the user.\n   *\n   * @type {string}\n   * @memberof User\n   */\n  public username: string;\n\n  /**\n   * User's password. (Not stored on frontend.)\n   *\n   * @type {string}\n   * @memberof User\n   */\n  public password: string;\n\n  /**\n   * List of projects where this user is contributing.\n   *\n   * @type {Project[]}\n   * @memberof User\n   */\n  public projects: Project[];\n\n  /**\n   * List of users own projects.\n   *\n   * @type {Project[]}\n   * @memberof User\n   */\n  public ownedProjects: Project[];\n\n  /**\n   * List of user's own skills.\n   *\n   * @type {Skill[]}\n   * @memberof User\n   */\n  public skills: Skill[];\n\n  /**\n   * List of tasks where this user is assigned to.\n   *\n   * @type {Task[]}\n   * @memberof User\n   */\n  public assignedTasks: Task[];\n\n  /**\n   * Creates an instance of User.\n   * \n   * @param {string} name Name of user.\n   * @param {string} userName Username of user.\n   * @param {string} password Password of user.\n   * @memberof User\n   */\n  constructor(name: string, userName: string, password: string) {\n    this.name = name;\n    this.username = userName;\n    this.password = password;\n    this.projects = [];\n    this.ownedProjects = [];\n    this.skills = [];\n    this.assignedTasks = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Ez a komponens kezeli a felhasználók profilát.\n(Felhasználók személyes adatai, beleértve a képességeket is.)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addBlurOn\n                            \n                            \n                                    Public\n                                allSkills\n                            \n                            \n                                chipInput\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                filteredOptions\n                            \n                            \n                                matAutocomplete\n                            \n                            \n                                    Public\n                                removable\n                            \n                            \n                                    Public\n                                selectable\n                            \n                            \n                                    Public\n                                separatorKeysCodes\n                            \n                            \n                                    Public\n                                skillControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                    Public\n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                restoreUserData\n                            \n                            \n                                    Public\n                                    Async\n                                saveUserData\n                            \n                            \n                                    Async\n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(skillService: SkillService, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        skillService\n                                                  \n                                                        \n                                                                        SkillService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:79\n                \n            \n\n\n            \n                \n                    Removes a skill that is assigned to the current user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            restoreUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUserData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            saveUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUserData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:98\n                \n            \n\n\n            \n                \n                    Elmenti (frissíti) a felhasználó megadott adatait.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selected(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addBlurOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allSkills\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Skill[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chipInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chipInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('auto')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            separatorKeysCodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [ENTER, COMMA]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skillControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Skill } from './../classes/skill';\nimport { AuthenticationService } from './../services/auth.service';\nimport { SkillService } from './../services/skill.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { User } from '../classes/user';\nimport { UserService } from '../services/user.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatAutocomplete, MatChipInputEvent, MatAutocompleteSelectedEvent } from '@angular/material';\n\n/**\n * Ez a komponens kezeli a felhasználók profilát.\n * (Felhasználók személyes adatai, beleértve a képességeket is.)\n */\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './user-profile.component.scss'\n  ]\n})\nexport class UserProfileComponent implements OnInit {\n\n  public currentUser: User;\n\n  public allSkills: Skill[] = [];\n\n  public skillControl = new FormControl();\n  public filteredOptions: Observable;\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\n  public selectable = true;\n  public removable = true;\n  public addBlurOn = true;\n\n  @ViewChild('chipInput') chipInput: ElementRef;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(\n    private skillService: SkillService,\n    private userService: UserService,\n    private authService: AuthenticationService\n  ) {\n    this.filteredOptions = this.skillControl.valueChanges.pipe(\n      startWith(null),\n      map((src: string | null) => src ? this._filter(src) : this.allSkills.map(skill => skill.name))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.allSkills.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0).map(skill => skill.name);\n  }\n\n  async ngOnInit() {\n    this.currentUser = new User('', '', '');\n    this.currentUser = JSON.parse(JSON.stringify(this.authService.currentUser));\n    this.allSkills = await this.skillService.getAllSkills();\n  }\n\n  public async add(event: KeyboardEvent) {\n    if (event.charCode == 13) {\n      var _skill: Skill = await this.skillService.addNewSkill(new Skill(this.skillControl.value));\n      this.currentUser = await this.userService.addSkill(this.currentUser.id, _skill);\n      this.authService.currentUser = this.currentUser;\n      this.allSkills = await this.skillService.getAllSkills();\n      this.skillControl.setValue('');\n    }\n  }\n\n  /**\n   * Removes a skill that is assigned to the current user.\n   *\n   * @param {Skill} skill\n   * @memberof UserProfileComponent\n   */\n  public async remove(skill: Skill) {\n    this.currentUser = await this.userService.removeSkill(this.currentUser.id, skill);\n    this.authService.currentUser = this.currentUser;\n  }\n\n  async selected(event: MatAutocompleteSelectedEvent) {\n    const _skill = this.allSkills.find(item => item.name === event.option.viewValue);\n\n    this.currentUser = await this.userService.addSkill(this.currentUser.id, _skill);\n    this.allSkills = await this.skillService.getAllSkills();\n\n    this.skillControl.setValue('');\n  }\n\n  /**\n   * Elmenti (frissíti) a felhasználó megadott adatait.\n   *\n   * @memberof UserProfileComponent\n   */\n  public async saveUserData() {\n    this.authService.currentUser = this.currentUser;\n    const _user = this.currentUser;\n    _user.skills = null;\n    await this.userService.editUser(_user);\n  }\n\n  public async restoreUserData() {\n    this.currentUser = await this.userService.getUser(this.currentUser.id);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n\n      Személyes adatok:\n\n      \n        \n      \n\n      \n        \n      \n\n        \n      \n\n      \n        \n      \n -->\n      \n        Mentés\n        Mégsem\n      \n\n    \n\n    \n\n      Képességek:\n\n\n      \n        \n          {{ skill.name }}\n          cancel\n        \n      \n\n      \n\n        \n\n        \n          \n            {{option}}\n          \n        \n\n      \n\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./user-profile.component.scss\n                \n                \n.transparent-panel {\n  display: inline-block;\n  width: calc(50% - 10px);\n\n  &:nth-of-type(1) {\n    margin-right: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Személyes adatok:                                                                           -->              Mentés        Mégsem                    Képességek:                        {{ skill.name }}          cancel                                                          {{option}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProjectsComponent.html":{"url":"components/UserProjectsComponent.html","title":"component - UserProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-projects/user-projects.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-projects\n            \n\n            \n                styleUrls\n                ../common-styles.scss,./user-projects.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-projects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _project\n                            \n                            \n                                    Public\n                                ownProjects\n                            \n                            \n                                    Public\n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                refreshLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, userService: UserService, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-projects/user-projects.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-projects/user-projects.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-projects/user-projects.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            refreshLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-projects/user-projects.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-projects/user-projects.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-projects/user-projects.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-projects/user-projects.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AuthenticationService } from './../services/auth.service';\nimport { DialogCreateProjectComponent } from './../dialogs/dialog-create-project/dialog-create-project.component';\nimport { MatDialog } from '@angular/material';\nimport { Component, OnInit } from '@angular/core';\nimport { ProjectService } from './../services/project.service';\nimport { Project } from './../classes/projects';\nimport { User } from '../classes/user';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-user-projects',\n  templateUrl: './user-projects.component.html',\n  styleUrls: [\n    '../common-styles.scss',\n    './user-projects.component.scss'\n  ]\n})\nexport class UserProjectsComponent implements OnInit {\n\n  public projects: Project[];\n  public ownProjects: Project[];\n  public _project: Project;\n\n  constructor(\n    private projectService: ProjectService,\n    private userService: UserService,\n    private authService: AuthenticationService,\n    private dialog: MatDialog\n  ) { }\n\n  async ngOnInit() {\n    this.refreshLists();\n  }\n\n  private async refreshLists() {\n    this.projects = await this.userService.getProjects(this.authService.currentUser.id);\n    this.ownProjects = await this.userService.getOwnProjects(this.authService.currentUser.id);\n    this.projects = this.projects.filter(project => !(this.ownProjects.map(p => p.id).includes(project.id)));\n  }\n\n  public createProject(): void {\n    const dialogRef = this.dialog.open(DialogCreateProjectComponent, { width: '350px' });\n\n    dialogRef.afterClosed().subscribe(async _name => {\n      if (_name !== '' && _name != undefined) {\n        const newProject = new Project(_name, this.authService.currentUser.id);\n        console.log('NEW PROJECT:', newProject);\n        await this.projectService.addNewProject(newProject);\n        this.refreshLists();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n      \n        Saját projectek:\n        add\n      \n\n      \n\n        \n\n          \n              {{project.name}}\n          \n\n        \n\n      \n\n  \n\n  \n\n      \n        Egyéb projectek:\n      \n\n      \n\n        \n\n          \n              {{project.name}}\n          \n\n        \n\n      \n\n  \n\n\n\n    \n\n    \n                \n                    ../common-styles.scss\n                \n                \n.transparent-panel {\n  background-color: rgba(255,255,255,0.15);\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: border-box;\n  margin: 40px 0;\n  overflow: hidden;\n\n  > mat-card-header {\n\n    mat-card-title {\n      font-family: \"Raleway\";\n      font-weight: 300;\n      font-size: 26px;\n      text-shadow: 1px 1px 1px rgba(255,255,255,0.6);\n      margin-bottom: 32px;\n      margin-left: -16px;\n\n      span {\n        font-size: 70%;\n        opacity: 0.6;\n        text-shadow: none;\n        color: #000;\n      }\n    }\n\n    mat-card-subtitle {\n      margin-left: -16px;\n      margin-top: -24px;\n      margin-bottom: 32px;\n    }\n\n    mat-icon {\n      position: absolute;\n      top: 30px;\n      right: 28px;\n      font-size: 32px;\n      background: #fff;\n      border-radius: 8px;\n      padding: 0px;\n      width: auto;\n      height: auto;\n      cursor: pointer;\n      box-shadow: 0px 0px 3px rgba(0,0,0,0.4);\n\n      &:hover {\n        color: #cd5555;\n      }\n    }\n  }\n\n  > mat-divider + mat-card-content,\n  > mat-divider + mat-card-footer {\n    margin-top: 40px;\n  }\n}\n\n                \n                    ./user-projects.component.scss\n                \n                \n.project-card {\n  box-sizing: border-box;\n  width: 100%;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n\n  mat-card-title {\n    font-size: 24px;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Saját projectek:        add                                            {{project.name}}                                          Egyéb projectek:                                            {{project.name}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddTaskComponent', 'selector': 'app-dialog-add-task'},{'name': 'DialogCreateProjectComponent', 'selector': 'app-dialog-create-project'},{'name': 'DialogRegistrationComponent', 'selector': 'app-dialog-registration'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectTasksComponent', 'selector': 'app-project-tasks'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProjectsComponent', 'selector': 'app-user-projects'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addSkill\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                getAssignedTasks\n                            \n                            \n                                    Public\n                                getOwnProjects\n                            \n                            \n                                    Public\n                                getProjects\n                            \n                            \n                                    Public\n                                getSkillsOfUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                removeSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSkill(userID: number, skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAssignedTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssignedTasks(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOwnProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnProjects(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjects(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSkillsOfUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSkillsOfUser(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeSkill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSkill(userID: number, skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../classes/user';\nimport { HttpService } from './http.service';\nimport { Skill } from '../classes/skill';\nimport { Project } from '../classes/projects';\nimport { Task } from '../classes/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private route = 'users/';\n\n  constructor(private httpService: HttpService) { }\n\n  public registerUser(user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.post(this.route + 'new', json);\n  }\n\n  public getUsers(): Promise {\n    return this.httpService.get(this.route);\n  }\n\n  public getUser(id: number): Promise {\n    return this.httpService.get(this.route + id);\n  }\n\n  public deleteUser(id: number): Promise {\n    return this.httpService.delete(this.route + id);\n  }\n\n  public editUser(user: User): Promise {\n    const json = JSON.stringify(user);\n    return this.httpService.put(this.route + user.id + '/edit', json);\n  }\n\n  public getSkillsOfUser(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/skills');\n  }\n\n  public addSkill(userID: number, skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.put(this.route + userID + '/skills/add', json);\n  }\n\n  public removeSkill(userID: number, skill: Skill): Promise {\n    const json = JSON.stringify(skill);\n    return this.httpService.put(this.route + userID + '/skills/remove', json);\n  }\n\n  public getOwnProjects(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/ownedProjects');\n  }\n\n  public getProjects(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/projects');\n  }\n\n  public getAssignedTasks(userID: number): Promise {\n    return this.httpService.get(this.route + userID + '/assignedTasks');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/classes/projects.ts\n            \n            class\n            Project\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/classes/skill.ts\n            \n            class\n            Skill\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/classes/task.ts\n            \n            class\n            Task\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/classes/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-add-member/dialog-add-member.component.ts\n            \n            component\n            DialogAddMemberComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-add-task/dialog-add-task.component.ts\n            \n            component\n            DialogAddTaskComponent\n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-create-project/dialog-create-project.component.ts\n            \n            component\n            DialogCreateProjectComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-registration/dialog-registration.component.ts\n            \n            component\n            DialogRegistrationComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/dialog-registration/dialog-registration.component.ts\n            \n            interface\n            RegistrationData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            function\n            dateToString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/project-tasks/project-tasks.component.ts\n            \n            component\n            ProjectTasksComponent\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/skill.service.ts\n            \n            injectable\n            SkillService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/user-projects/user-projects.component.ts\n            \n            component\n            UserProjectsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @compodoc/compodoc : ^1.1.9\n        \n            core-js : ^2.5.4\n        \n            dagre-d3 : ^0.6.3\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dateToString   (src/.../globals.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/globals.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            dateToString\n                        \n                        \n                    \n                \n            \n            \n                \ndateToString(date)\n                \n            \n\n\n\n\n            \n                \n                    Creates the string representation of a date object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date object which will be converted to string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        String representation of the given date.\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFRONTEND\nThis project was generated with Angular CLI version 6.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogAddMemberComponent\n\nDialogAddMemberComponent\n\nAppModule -->\n\nDialogAddMemberComponent->AppModule\n\n\n\n\n\nDialogAddTaskComponent\n\nDialogAddTaskComponent\n\nAppModule -->\n\nDialogAddTaskComponent->AppModule\n\n\n\n\n\nDialogCreateProjectComponent\n\nDialogCreateProjectComponent\n\nAppModule -->\n\nDialogCreateProjectComponent->AppModule\n\n\n\n\n\nDialogRegistrationComponent\n\nDialogRegistrationComponent\n\nAppModule -->\n\nDialogRegistrationComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nAppModule -->\n\nProjectMembersComponent->AppModule\n\n\n\n\n\nProjectTasksComponent\n\nProjectTasksComponent\n\nAppModule -->\n\nProjectTasksComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserProjectsComponent\n\nUserProjectsComponent\n\nAppModule -->\n\nUserProjectsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
